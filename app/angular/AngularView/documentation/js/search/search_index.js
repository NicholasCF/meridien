var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.234,1,0.831]],["body/components/AppComponent.html",[0,0.393,1,1.322,2,1.227,3,0.164,4,0.143,5,1.322,6,1.194,7,0.911,8,0.911,9,0.143,10,2.71,11,1.194,12,1.901,13,3.848,14,1.163,15,1.587,16,3.602,17,0.911,18,1.979,19,1.743,20,2.144,21,1.294,22,5.232,23,1.227,24,4.5,25,0.203,26,0.462,27,5.232,28,5.232,29,2.356,30,4.327,31,5.232,32,3.057,33,3.327,34,0.656,35,5.696,36,3.921,37,1.728,38,5.696,39,0.699,40,3.169,41,1.45,42,2.032,43,0.547,44,4.5,45,0.462,46,0.021,47,0.456,48,0.365,49,0.462,50,3.169,51,4.5,52,4.303,53,2.111,54,0.83,55,1.531,56,3.169,57,3.848,58,4.5,59,3.169,60,1.901,61,2.842,62,3.169,63,4.5,64,4.141,65,3.169,66,3.169,67,1.044,68,1.044,69,2.086,70,3.169,71,3.169,72,0.492,73,6.016,74,3.921,75,5.696,76,5.696,77,3.169,78,0.585,79,0.378,80,2.182,81,0.776,82,1.42,83,0.776,84,0.164,85,0.009,86,3.169,87,3.169,88,3.169,89,3.169,90,3.169,91,3.169,92,3.169,93,3.169,94,4.5,95,0.961,96,1.187,97,1.64,98,1.674,99,1.728,100,3.418,101,3.848,102,1.395,103,3.848,104,4.5,105,1.282,106,2.71,107,2.182,108,3.169,109,2.017,110,2.407,111,2.71,112,3.169,113,4.5,114,3.169,115,5.232,116,2.493,117,2.629,118,2.696,119,3.169,120,1.42,121,1.723,122,2.71,123,2.71,124,2.001,125,2.345,126,2.71,127,2.001,128,3.169,129,2.407,130,2.71,131,2.144,132,2.407,133,2.71,134,2.182,135,2.182,136,4.141,137,5.696,138,3.169,139,2.493,140,3.597,141,3.169,142,1.794,143,3.169,144,2.71,145,2.144,146,2.71,147,2.71,148,3.848,149,5.696,150,1.61,151,3.169,152,3.169,153,2.71,154,3.169,155,3.169,156,3.169,157,3.169,158,6.25,159,4.5,160,4.5,161,3.169,162,1.338,163,1.338,164,3.169,165,3.169,166,3.169,167,3.169,168,4.5,169,1.194,170,3.169,171,3.169,172,3.169,173,3.169,174,0.819,175,1.294,176,1.227,177,0.911,178,1.638,179,0.911,180,0.911,181,0.696,182,0.911,183,0.659,184,0.911,185,0.696,186,1.294,187,0.696,188,1.294,189,0.735,190,1.73,191,0.735,192,0.911,193,0.735,194,0.696,195,0.911,196,0.696,197,0.911,198,0.735,199,1.028,200,0.696,201,0.735,202,0.696,203,0.911,204,0.911,205,0.696,206,0.819,207,0.911,208,0.696,209,0.911,210,0.735,211,0.911,212,0.696,213,0.911,214,0.911,215,0.009,216,0.013,217,0.009]],["title/modules/AppModule.html",[218,2.467,219,2.467]],["body/modules/AppModule.html",[1,1.602,3,0.162,4,0.141,5,0.979,9,0.141,19,0.766,41,1.486,42,2.101,46,0.021,53,1.505,78,0.773,79,0.373,80,2.153,81,0.766,82,1.401,84,0.162,85,0.009,95,1.352,96,0.91,102,1.092,105,0.766,174,0.808,181,1.367,183,1.294,185,1.367,187,1.367,189,1.444,191,1.444,193,1.444,194,1.367,196,1.367,198,1.444,199,0.876,200,1.367,201,1.444,202,1.367,205,1.367,206,0.808,208,1.367,210,1.444,212,1.367,215,0.009,216,0.012,217,0.009,218,2.153,219,5.19,220,1.975,221,2.153,222,4.441,223,4.441,224,2.823,225,2.376,226,2.674,227,2.674,228,2.674,229,2.674,230,2.674,231,3.93,232,3.93,233,3.93,234,3.812,235,2.674,236,1.827,237,3.127,238,3.812,239,4.457,240,1.7,241,4.457,242,2.674,243,2.815,244,2.674,245,4.457,246,3.127,247,3.127,248,4.457,249,3.812,250,2.376,251,3.812,252,3.127,253,3.127,254,4.457,255,3.127,256,4.457,257,5.194,258,1.401,259,4.457,260,4.457,261,1.056,262,4.457,263,3.127,264,4.457,265,3.127,266,4.457,267,3.127,268,2.376,269,4.457,270,3.127,271,4.457,272,2.153,273,4.457,274,3.127,275,4.457,276,1.321,277,4.457,278,3.127,279,2.604,280,4.457,281,1.827,282,4.457,283,1.7,284,1.7,285,1.7,286,4.457,287,1.7,288,4.457,289,1.7,290,4.457,291,3.127,292,4.457,293,1.115,294,4.457,295,3.127,296,4.457,297,3.127,298,4.457,299,3.127,300,4.457,301,3.127,302,4.457,303,3.127,304,4.457,305,3.127,306,5.194,307,2.674,308,2.376,309,1.975,310,3.069,311,1.975,312,1.975,313,4.441,314,2.153,315,2.674,316,1.827,317,2.153,318,2.674,319,2.153,320,2.674,321,1.401,322,1.589,323,2.153,324,2.674,325,2.153,326,2.674,327,2.674,328,3.127,329,3.127,330,3.127,331,3.127,332,3.034,333,1.827,334,1.827,335,2.153,336,2.604,337,4.457]],["title/modules/AppRoutingModule.html",[218,2.467,231,2.263]],["body/modules/AppRoutingModule.html",[0,0.477,3,0.235,4,0.205,5,1,9,0.205,46,0.021,78,0.756,79,0.542,81,1.115,84,0.235,85,0.013,96,1.1,98,1.456,100,3.458,102,1.115,105,1.405,181,1.261,183,1.193,185,1.261,187,1.261,194,1.261,196,1.261,199,0.895,200,1.261,202,1.261,205,1.261,206,1.176,208,1.261,212,1.261,215,0.013,216,0.016,217,0.013,220,2.874,225,3.458,231,3.623,238,3.892,243,2.874,251,4.906,310,3.133,311,2.874,312,2.874,313,5.372,314,3.133,315,3.892,316,2.659,317,3.133,318,3.892,319,3.133,320,3.892,323,3.133,324,3.892,325,3.133,326,3.892,327,3.892,338,4.551,339,4.551,340,4.78,341,4.551,342,4.325,343,5.737,344,1.623,345,1.456,346,7.328,347,3.892,348,3.118,349,5.815,350,4.551,351,4.551,352,2.659,353,4.551,354,3.892,355,4.551,356,2.474,357,4.551,358,4.551]],["title/guards/AuthGuard.html",[340,2.467,359,2.722]],["body/guards/AuthGuard.html",[3,0.261,4,0.227,9,0.227,14,1.303,20,2.403,25,0.227,34,0.891,39,0.949,43,0.487,45,0.891,46,0.021,47,0.533,48,0.357,49,0.891,54,0.735,69,2.011,78,0.676,79,0.601,84,0.261,85,0.014,95,1.53,215,0.014,216,0.017,217,0.014,340,4.208,344,1.799,345,1.614,349,5.847,360,5.043,361,1.611,362,4.313,363,4.313,364,3.007,365,3.66,366,5.043,367,6.113,368,6.838,369,3.576,370,6.838,371,5.043,372,3.832,373,2.26,374,5.043,375,1.58,376,2.563,377,1.135,378,5.227,379,5.043,380,1.343,381,4.313,382,5.043,383,4.313,384,5.043]],["title/classes/BookedItem.html",[85,0.01,385,1.35]],["body/classes/BookedItem.html",[3,0.269,4,0.234,9,0.234,25,0.234,26,0.639,43,0.563,46,0.021,47,0.453,48,0.413,72,1.113,78,0.534,84,0.322,85,0.017,96,1.167,98,2.132,199,1.31,215,0.015,216,0.017,217,0.015,361,1.756,385,2.346,386,2.329,387,3.947,388,3.385,389,1.986,390,2.603,391,2.25,392,5.196,393,1.976,394,5.196,395,5.196,396,5.196,397,5.196,398,4.443,399,3.577,400,3.281,401,2.195,402,3.947]],["title/classes/Booking.html",[85,0.01,96,0.628]],["body/classes/Booking.html",[3,0.253,4,0.22,9,0.22,25,0.22,26,0.616,43,0.59,46,0.021,47,0.566,48,0.432,72,1.148,84,0.253,85,0.014,96,1.05,99,1.968,215,0.014,216,0.017,217,0.014,361,1.818,386,2.19,389,1.866,391,2.191,393,1.926,403,4.179,404,4.929,405,3.79,406,3.296,407,3.296,408,3.79,409,4.929,410,4.929,411,3.79,412,4.887,413,4.887,414,4.887,415,4.887,416,3.367,417,4.887,418,4.887,419,4.887,420,4.887,421,4.887,422,4.887,423,4.887,424,4.887]],["title/components/BookingConfirmComponent.html",[0,0.234,183,0.745]],["body/components/BookingConfirmComponent.html",[0,0.326,1,0.475,2,0.884,3,0.106,4,0.092,5,0.884,7,0.589,8,0.589,9,0.092,11,0.772,12,2.344,14,1.039,15,1.387,17,0.589,18,1.877,19,1.618,21,0.589,23,1.096,25,0.092,32,1.041,34,0.472,37,1.511,39,0.624,41,0.475,42,1.095,43,0.321,45,0.299,46,0.021,47,0.462,48,0.12,49,0.299,53,0.692,54,0.864,55,1.12,60,0.865,69,1.823,78,0.679,79,0.244,81,1.297,82,0.918,83,0.502,84,0.208,85,0.013,95,1.797,96,1.24,97,1.246,98,1.776,99,1.938,102,1.297,105,0.502,107,1.41,118,1.802,120,2.049,121,1.113,174,0.529,175,0.932,176,1.096,177,0.589,178,1.315,179,0.589,180,0.589,181,0.45,182,0.589,183,0.951,184,0.589,185,0.712,186,0.932,187,0.45,188,0.932,189,0.475,190,1.432,191,0.475,192,0.589,193,0.475,194,0.45,195,0.589,196,0.45,197,0.589,198,0.475,199,1.256,200,0.45,201,0.475,202,0.45,203,0.589,204,0.589,205,0.45,206,0.529,207,0.589,208,0.45,209,0.589,210,0.475,211,0.589,212,0.45,213,0.589,214,0.589,215,0.011,216,0.009,217,0.006,224,1.113,236,1.197,261,0.692,279,1.893,281,1.197,283,1.113,284,2.186,285,1.113,293,0.731,311,2.887,332,1.893,333,1.197,336,1.197,344,0.731,345,1.896,363,1.752,364,2.43,369,1.762,373,0.918,377,1.068,380,1.422,385,1.723,388,1.647,389,1.523,390,1.877,391,1.358,393,1.569,401,0.865,404,1.556,405,1.197,406,1.041,407,1.041,408,1.197,409,1.556,410,2.462,411,1.197,416,2.179,425,2.485,426,1.41,427,2.09,428,2.771,429,3.91,430,2.771,431,2.887,432,3.439,433,2.462,434,2.771,435,4.745,436,1.516,437,1.723,438,3.241,439,2.048,440,2.048,441,2.719,442,2.671,443,2.048,444,2.771,445,1.556,446,1.603,447,1.877,448,1.294,449,2.671,450,4.745,451,2.771,452,2.771,453,1.603,454,0.976,455,2.047,456,2.047,457,2.047,458,2.047,459,0.976,460,2.691,461,1.294,462,1.113,463,2.771,464,1.197,465,1.292,466,1.197,467,1.113,468,0.865,469,1.556,470,1.556,471,1.294,472,1.752,473,1.752,474,1.752,475,1.752,476,1.752,477,1.752,478,1.752,479,1.752,480,1.752,481,2.771,482,1.979,483,1.113,484,2.462,485,2.771,486,1.752,487,1.841,488,1.752,489,3.439,490,1.752,491,1.823,492,5.065,493,1.752,494,3.909,495,1.752,496,1.556,497,1.752,498,1.752,499,1.752,500,1.752,501,1.752,502,2.047,503,1.752,504,1.752,505,1.752,506,1.752,507,2.771,508,2.771,509,1.752,510,2.771,511,2.887,512,1.893,513,2.54,514,2.563,515,2.349,516,2.531,517,1.294,518,1.752,519,1.916,520,3.439,521,1.752,522,1.752,523,2.771,524,1.752,525,1.752,526,1.752,527,1.556,528,1.556,529,1.556,530,1.556,531,2.374,532,1.752,533,1.762,534,2.771,535,2.771,536,1.752,537,1.752,538,1.752,539,1.752,540,1.41,541,1.752,542,1.294,543,2.887,544,1.752,545,1.752,546,1.556,547,1.752,548,1.752,549,1.752,550,2.462,551,1.294,552,2.047,553,1.752,554,1.752,555,1.752,556,1.752,557,0.865,558,1.752,559,1.752,560,1.113,561,2.047,562,2.771,563,2.771,564,1.752,565,1.752,566,1.752,567,1.197,568,1.752,569,1.752,570,1.294,571,1.752,572,1.752,573,1.556,574,1.752,575,1.752,576,1.752,577,1.752,578,1.556,579,1.752,580,1.752,581,2.54,582,2.186,583,1.41,584,1.556,585,1.752,586,1.556,587,1.752,588,1.752,589,1.41,590,1.752,591,1.752,592,1.556,593,2.462,594,1.556,595,1.752,596,1.752,597,2.54,598,3.91,599,1.752,600,2.771,601,1.752,602,3.439,603,1.752,604,1.752,605,0.976,606,1.752,607,3.439,608,1.752,609,2.771,610,1.556,611,1.556,612,1.556,613,1.197,614,0.918,615,1.294,616,1.197,617,1.752,618,1.752,619,1.752,620,2.54,621,1.752,622,1.752,623,1.752,624,2.047,625,2.047,626,1.752,627,1.752,628,1.752,629,2.771,630,2.771,631,3.91,632,2.771,633,3.439,634,2.771,635,2.771,636,2.771,637,2.771,638,2.047,639,1.752,640,1.556,641,1.752,642,1.752,643,1.752,644,1.752,645,1.752,646,1.752,647,1.556,648,1.752,649,1.752,650,1.294,651,1.752,652,1.752,653,1.752,654,0.918,655,1.556,656,1.752,657,1.752,658,1.197,659,1.556,660,0.772,661,0.772,662,0.772,663,1.752,664,1.294,665,1.752,666,1.41,667,1.752,668,1.752,669,0.918,670,1.041,671,1.752,672,1.752,673,1.752,674,1.752,675,1.752,676,1.752,677,2.771,678,2.047,679,2.048,680,2.048]],["title/components/BookingConfirmationComponent.html",[0,0.234,181,0.787]],["body/components/BookingConfirmationComponent.html",[0,0.366,1,0.615,2,1.077,3,0.137,4,0.12,5,1.038,6,0.999,7,0.762,8,0.762,9,0.12,11,1.489,12,2.212,14,1.021,15,1.433,17,0.762,18,1.937,19,1.684,21,1.136,23,1.077,25,0.12,26,0.406,29,1.78,34,0.576,37,1.588,39,0.613,41,0.615,43,0.533,45,0.576,46,0.021,47,0.545,48,0.365,49,0.576,53,0.895,54,0.887,55,1.372,60,1.669,67,0.615,68,0.615,72,0.992,78,0.656,79,0.316,81,1.282,84,0.137,85,0.007,95,1.198,96,1.305,97,1.288,98,1.264,99,1.781,102,1.565,105,0.649,106,2.267,107,4.399,109,1.771,110,2.014,125,1.771,131,1.263,162,1.669,169,1.489,174,0.685,175,1.136,176,1.077,177,0.762,178,1.506,179,0.762,180,0.762,181,1.15,182,0.762,183,0.551,184,0.762,185,0.582,186,1.136,187,0.582,188,1.136,189,0.615,190,1.61,191,0.615,192,0.762,193,0.917,194,0.582,195,0.762,196,0.582,197,0.762,198,0.615,199,1.101,200,0.582,201,0.615,202,0.582,203,0.762,204,0.762,205,0.582,206,0.685,207,0.762,208,0.582,209,0.762,210,0.615,211,0.762,212,0.582,213,0.762,214,0.762,215,0.007,216,0.011,217,0.007,276,1.12,293,0.945,321,1.188,322,1.347,325,4.652,344,0.945,345,0.848,352,2.308,354,4.477,372,3.002,373,1.771,377,0.877,380,0.582,385,1.973,390,1.973,391,2.258,401,2.48,408,2.308,425,3.673,427,2.23,433,4.461,436,1.78,437,1.973,453,2.426,454,1.263,459,1.263,462,1.441,468,2.212,482,1.685,483,2.148,514,1.12,550,3.002,552,3.537,557,2.212,567,2.308,573,3.978,597,2.495,610,3.002,611,2.014,655,3.002,660,1.489,661,1.489,662,1.489,677,4.477,681,2.267,682,5.022,683,3.951,684,3.379,685,3.951,686,4.724,687,3.951,688,4.04,689,2.669,690,4.724,691,3.252,692,2.845,693,5.236,694,3.002,695,2.651,696,4.477,697,2.845,698,3.951,699,2.651,700,3.605,701,2.651,702,3.002,703,2.72,704,3.951,705,2.651,706,2.651,707,2.72,708,2.651,709,3.192,710,2.651,711,2.651,712,2.651,713,2.651,714,2.651,715,1.548,716,1.825,717,2.651,718,2.651,719,2.651,720,2.651,721,2.267,722,2.651,723,2.651,724,1.674,725,2.651,726,3.951,727,2.014,728,2.651,729,3.537,730,2.651,731,2.651,732,2.651,733,2.651,734,3.951,735,3.951,736,2.148,737,3.951,738,2.651,739,1.188,740,1.441,741,2.651,742,1.441,743,1.347,744,2.651,745,2.568,746,3.951,747,3.951,748,3.951,749,3.379,750,3.951,751,3.379,752,3.379,753,3.951,754,3.951,755,3.002,756,3.002,757,5.236,758,3.951,759,3.951,760,3.951,761,3.002,762,3.002,763,3.951,764,3.951,765,3.379,766,3.951,767,3.379,768,3.978,769,3.379,770,3.379,771,3.379,772,3.379,773,3.951,774,3.379,775,2.495,776,2.568,777,3.951,778,1.883,779,2.148,780,3.002,781,1.441,782,1.263,783,1.441]],["title/components/BookingListComponent.html",[0,0.234,187,0.787]],["body/components/BookingListComponent.html",[0,0.378,1,0.352,2,0.691,3,0.078,4,0.147,5,0.84,6,0.571,7,0.436,8,0.436,9,0.068,11,1.734,12,2.063,14,0.655,15,0.991,17,0.436,18,1.816,19,1.443,21,0.729,23,1.042,25,0.068,26,0.26,29,1.603,32,1.661,33,0.885,34,0.37,37,1.159,39,0.593,41,0.352,42,1.291,43,0.513,45,0.671,46,0.021,47,0.55,48,0.35,49,0.671,52,2.631,53,1.436,54,0.887,55,1.254,60,1.796,61,1.601,67,0.987,68,0.987,69,2.042,72,0.93,74,1.745,78,0.661,79,0.181,81,1.042,82,0.679,83,0.371,84,0.169,85,0.011,95,1.712,96,1.235,97,1.539,99,0.46,102,0.936,105,0.371,109,0.679,116,0.722,118,1.906,120,1.713,121,1.378,125,1.713,131,0.722,139,1.821,140,0.957,142,1.303,145,0.722,150,1.661,162,1.943,163,1.071,169,1.232,174,0.392,175,0.729,176,0.691,177,0.436,178,1.099,179,0.436,180,0.436,181,0.333,182,0.436,183,0.315,184,0.436,185,0.333,186,0.729,187,0.84,188,0.729,189,0.758,190,1.223,191,0.758,192,1.472,193,0.588,194,0.333,195,0.436,196,0.333,197,0.436,198,0.352,199,0.751,200,0.333,201,0.352,202,0.333,203,0.436,204,0.436,205,0.333,206,0.392,207,0.436,208,0.333,209,0.436,210,0.352,211,0.436,212,0.333,213,0.436,214,0.436,215,0.007,216,0.007,217,0.004,224,1.378,240,0.824,261,0.512,276,0.64,279,1.909,281,0.885,283,0.824,284,1.777,285,0.824,287,0.824,289,0.824,293,0.54,316,3.789,321,0.679,322,0.77,332,2.232,333,1.481,334,1.481,335,1.043,336,1.481,344,0.54,345,1.703,348,2.893,352,1.909,356,1.378,364,1.381,369,1.378,377,0.951,380,1.337,385,0.955,388,0.77,389,1.223,390,0.955,391,2.273,393,1.498,401,1.071,405,1.481,406,1.288,407,1.288,411,1.481,416,2.9,425,3.525,427,1.104,436,1.603,437,1.603,441,2.295,442,1.481,446,1.947,447,1.734,449,2.232,453,2.39,454,0.722,455,2.064,456,2.064,457,2.064,458,2.064,459,0.722,462,0.824,464,0.885,466,0.885,467,0.824,468,1.796,471,1.601,482,2.313,483,0.824,487,1.046,491,0.604,502,1.601,511,1.601,512,1.481,513,2.413,514,2.532,515,1.481,516,1.288,517,1.601,519,1.208,531,2.536,533,0.824,542,0.957,543,2.064,557,1.071,560,0.824,561,0.957,567,1.909,570,0.957,581,0.957,582,2.655,589,1.745,605,0.722,613,1.481,614,1.713,615,0.957,616,0.885,620,0.957,624,1.601,625,1.601,638,1.601,650,0.957,654,1.136,658,2.232,660,1.232,661,1.232,662,1.232,669,1.136,670,1.942,678,1.601,689,2.752,691,1.043,694,1.926,697,2.161,700,1.745,703,1.043,707,2.25,709,2.893,715,0.885,716,1.043,724,1.601,729,0.957,736,1.378,739,1.713,740,0.824,742,0.824,743,0.77,745,0.824,761,1.926,762,1.926,767,2.168,768,3.494,769,2.168,770,2.168,775,1.601,776,0.824,778,1.208,779,1.378,781,0.824,782,2.192,783,0.824,784,0.824,785,1.601,786,2.483,787,1.909,788,1.481,789,2.483,790,2.686,791,2.483,792,1.909,793,2.483,794,1.909,795,2.483,796,1.909,797,2.535,798,2.903,799,2.168,800,2.168,801,2.903,802,2.535,803,2.232,804,1.151,805,2.535,806,1.515,807,1.515,808,3.231,809,1.926,810,1.745,811,2.483,812,1.926,813,1.926,814,1.926,815,1.601,816,1.515,817,3.688,818,1.601,819,1.515,820,2.903,821,1.601,822,1.515,823,1.601,824,1.601,825,1.745,826,1.515,827,2.905,828,1.481,829,1.515,830,3.231,831,1.926,832,1.515,833,1.745,834,1.926,835,1.515,836,2.903,837,1.926,838,1.288,839,1.926,840,1.926,841,3.494,842,1.926,843,1.926,844,1.296,845,1.515,846,1.296,847,1.296,848,1.515,849,1.909,850,1.208,851,1.481,852,1.296,853,1.515,854,1.909,855,1.481,856,1.296,857,1.296,858,0.77,859,0.824,860,0.957,861,1.661,862,0.77,863,2.064,864,1.151,865,1.151,866,1.601,867,1.926,868,1.745,869,1.777,870,1.465,871,0.957,872,1.151,873,1.151,874,2.232,875,1.151,876,2.064,877,1.151,878,1.151,879,0.957,880,2.483,881,1.151,882,1.151,883,1.151,884,1.151,885,1.151,886,1.151,887,1.043,888,1.151,889,1.151,890,2.483,891,1.151,892,1.151,893,2.25,894,0.957,895,1.151,896,1.151,897,1.151,898,1.926,899,1.151,900,1.151,901,1.151,902,1.151,903,1.151,904,1.151,905,1.151,906,0.957,907,0.957,908,0.885,909,1.151,910,1.926,911,2.483,912,1.926,913,1.601,914,1.926,915,1.481,916,2.483,917,0.885,918,2.483,919,1.151,920,1.151,921,1.151,922,1.151,923,1.909,924,1.601,925,0.885,926,0.77,927,1.926,928,1.151,929,1.926,930,1.043,931,1.151,932,1.151,933,1.151,934,1.043,935,1.151,936,1.043,937,1.777,938,1.151,939,1.151,940,1.151,941,1.151,942,2.483,943,1.151,944,1.151,945,1.043,946,1.151,947,1.151,948,1.151,949,1.151,950,1.151,951,1.151,952,1.151,953,1.151,954,1.151,955,1.151,956,1.151,957,1.151,958,1.151,959,1.043,960,1.151,961,1.151,962,0.957,963,1.151,964,1.151,965,0.957,966,1.043,967,1.151,968,1.151,969,1.043,970,1.151,971,0.885,972,0.885,973,0.885,974,1.151,975,1.151,976,1.151,977,1.151,978,2.064,979,0.957,980,0.957,981,0.957,982,1.601,983,2.064,984,1.151,985,1.151,986,1.151,987,1.151,988,1.151,989,1.151,990,1.151,991,1.151,992,1.151,993,2.631,994,1.151,995,1.926,996,2.903,997,3.231,998,1.151,999,1.151,1000,0.957,1001,1.926,1002,1.926,1003,1.926,1004,1.151,1005,2.483,1006,1.151,1007,2.483,1008,1.151,1009,1.151,1010,1.151,1011,1.151,1012,1.151,1013,1.151,1014,1.151,1015,1.601,1016,1.151,1017,1.151,1018,1.151,1019,1.151,1020,0.824,1021,1.151,1022,0.77,1023,0.957,1024,1.151,1025,1.151,1026,1.151,1027,0.824,1028,1.151,1029,1.151,1030,1.926,1031,1.151,1032,1.151,1033,1.043,1034,1.151,1035,1.151,1036,1.151,1037,1.043,1038,1.151,1039,1.926,1040,2.535,1041,3.821,1042,2.903,1043,2.903,1044,2.168,1045,1.926,1046,2.535,1047,1.745,1048,2.535,1049,2.535,1050,0.824,1051,0.77,1052,1.151,1053,0.77,1054,0.722,1055,1.288,1056,1.515,1057,1.296,1058,1.296,1059,2.168,1060,1.151,1061,2.168,1062,1.296,1063,1.296,1064,1.043,1065,1.151]],["title/components/BookingListDialog.html",[0,0.234,189,0.831]],["body/components/BookingListDialog.html",[0,0.375,1,0.369,2,0.719,3,0.082,4,0.152,5,0.959,7,0.457,8,0.457,9,0.072,11,1.483,12,1.428,14,0.411,15,0.8,17,0.457,18,1.831,19,1.463,21,0.457,23,1.073,25,0.072,26,0.271,29,2.161,32,0.807,33,0.928,34,0.384,37,0.482,39,0.611,41,0.369,42,0.891,43,0.491,45,0.574,46,0.021,47,0.487,48,0.305,49,0.574,52,1.815,53,1.142,54,0.898,55,1.369,60,1.428,61,1.003,67,0.369,68,0.369,69,1.878,72,0.991,74,3.595,78,0.667,79,0.189,81,1.069,82,0.712,83,0.389,84,0.175,85,0.011,95,1.584,96,1.244,97,1.477,98,0.844,99,1.584,102,1.069,105,0.389,109,1.182,117,1.54,118,1.764,120,1.764,121,0.863,125,2.111,127,1.665,131,1.257,140,1.003,142,1.051,150,1.718,162,1.989,163,0.671,169,1.483,174,0.411,175,0.758,176,0.719,177,0.457,178,1.132,179,0.457,180,0.457,181,0.349,182,0.457,183,0.33,184,0.457,185,0.349,186,0.758,187,0.579,188,0.758,189,1.013,190,1.256,191,0.784,192,1.256,193,0.612,194,0.349,195,0.457,196,0.349,197,0.457,198,0.369,199,0.926,200,0.349,201,0.369,202,0.349,203,0.457,204,0.457,205,0.349,206,0.411,207,0.457,208,0.349,209,0.457,210,0.369,211,0.457,212,0.349,213,0.457,214,0.457,215,0.007,216,0.007,217,0.004,224,0.863,240,0.863,261,0.536,276,0.671,279,1.54,281,0.928,283,0.863,284,1.838,285,0.863,287,0.863,289,0.863,293,0.566,316,3.647,321,0.712,322,0.807,332,1.54,333,0.928,334,1.54,335,1.093,336,0.928,344,0.566,345,1.734,348,2.14,352,1.975,356,2.712,364,2.107,369,1.433,377,0.97,380,1.388,385,0.994,388,0.807,389,1.132,390,1.646,391,2.328,393,1.36,401,1.114,405,0.928,406,0.807,407,0.807,408,1.54,411,0.928,416,2.378,425,3.393,427,1.59,436,1.775,437,1.646,441,1.764,442,0.928,446,1.348,447,1.274,449,1.54,453,2.422,454,0.757,455,1.665,456,1.665,457,1.665,458,1.665,459,0.757,462,0.863,464,0.928,466,0.928,467,0.863,468,1.844,471,1.003,482,2.13,483,0.863,487,1.397,491,0.633,502,1.665,511,1.003,512,0.928,513,1.665,514,2.565,515,0.928,516,0.807,517,1.003,519,1.257,531,1.876,533,0.863,542,1.003,543,2.974,557,1.428,560,1.433,561,1.003,567,1.975,570,1.003,581,1.003,582,2.373,589,1.815,605,0.757,613,0.928,614,0.712,615,1.003,616,0.928,620,1.003,624,1.665,625,1.665,638,1.665,650,1.003,654,1.182,660,1.274,661,1.274,662,1.274,669,1.182,670,1.34,689,2.937,691,2.327,694,2.003,697,2.393,700,2.71,703,3.242,707,2.327,709,2.946,715,0.928,716,1.093,724,1.665,729,1.003,736,0.863,739,2.341,740,0.863,742,0.863,743,0.807,745,0.863,765,2.255,771,2.255,772,2.255,774,2.255,775,1.003,776,1.433,778,1.876,779,2.14,780,2.99,781,1.433,782,2.081,783,1.433,784,0.863,785,1.003,786,2.003,787,0.928,788,0.928,789,1.207,790,1.665,791,1.207,792,0.928,793,1.207,794,0.928,795,1.207,796,0.928,798,1.207,801,1.207,803,0.928,804,1.207,808,2.568,809,1.207,810,1.093,811,2.003,812,1.207,813,1.207,814,1.207,815,1.003,817,2.299,818,1.003,820,2.99,821,1.003,823,1.003,824,1.003,827,2.974,828,0.928,830,2.003,831,1.207,833,2.327,834,1.207,836,2.003,837,1.207,838,0.807,839,1.207,840,1.207,841,3.317,842,1.207,843,1.207,849,1.54,850,0.757,851,0.928,854,1.54,855,0.928,858,0.807,859,0.863,860,1.003,861,2.393,862,0.807,863,2.135,864,1.207,865,1.207,866,1.665,867,2.003,868,1.815,869,1.838,870,1.515,871,1.003,872,1.207,873,1.207,874,2.299,875,1.207,876,2.135,877,1.207,878,1.207,879,1.003,880,2.568,881,1.207,882,1.207,883,1.207,884,1.207,885,1.207,886,1.207,887,1.093,888,1.207,889,1.207,890,2.568,891,1.207,892,1.207,893,2.327,894,1.003,895,1.207,896,1.207,897,1.207,898,2.003,899,1.207,900,1.207,901,1.207,902,1.207,903,1.207,904,1.207,905,1.207,906,1.003,907,1.003,908,0.928,909,1.207,910,2.003,911,2.568,912,2.003,913,1.665,914,2.003,915,1.54,916,2.568,917,0.928,918,4.117,919,1.207,920,1.207,921,1.207,922,1.207,923,1.54,924,2.135,925,0.928,926,1.34,927,3.578,928,2.003,929,2.003,930,1.093,931,1.207,932,1.207,933,1.207,934,1.093,935,1.207,936,1.093,937,1.838,938,1.207,939,2.003,940,2.003,941,1.207,942,2.568,943,1.207,944,2.003,945,1.815,946,2.003,947,2.99,948,1.207,949,1.207,950,1.207,951,2.003,952,2.003,953,1.207,954,1.207,955,1.207,956,1.207,957,1.207,958,1.207,959,1.815,960,2.99,961,1.207,962,1.665,963,2.99,964,1.207,965,1.665,966,2.71,967,1.207,968,1.207,969,1.815,970,2.003,971,2.299,972,0.928,973,0.928,974,1.207,975,2.003,976,2.99,977,1.207,978,2.135,979,1.003,980,1.003,981,1.003,982,1.665,983,2.135,984,1.207,985,1.207,986,1.207,987,1.207,988,1.207,989,1.207,990,1.207,991,1.207,992,1.207,993,2.71,994,1.207,995,2.003,996,2.99,997,3.317,998,1.207,999,1.207,1000,1.003,1001,2.003,1002,2.003,1003,2.003,1004,1.207,1005,2.568,1006,1.207,1007,2.568,1008,1.207,1009,1.207,1010,1.207,1011,1.207,1012,1.207,1013,1.207,1014,1.207,1015,1.665,1016,1.207,1017,1.207,1018,1.207,1019,1.207,1020,0.863,1021,1.207,1022,0.807,1023,1.003,1024,1.207,1025,1.207,1026,1.207,1027,0.863,1028,1.207,1029,1.207,1030,2.003,1031,1.207,1032,1.207,1033,1.093,1034,1.207,1035,1.207,1036,1.207,1037,1.093,1038,1.207,1047,1.815,1066,2.637,1067,2.637,1068,2.637,1069,1.588,1070,1.588,1071,1.588,1072,1.588,1073,1.588,1074,1.588,1075,1.588,1076,1.588,1077,1.588,1078,1.588,1079,1.588,1080,1.588,1081,1.588,1082,2.637,1083,2.255,1084,2.255,1085,2.637,1086,2.637,1087,2.637,1088,2.637,1089,2.637,1090,2.637,1091,2.637,1092,4.709,1093,4.709,1094,2.637,1095,2.637,1096,2.637,1097,2.637,1098,2.637,1099,2.637,1100,2.637,1101,2.637,1102,2.637,1103,2.003,1104,2.255,1105,2.637,1106,2.637]],["title/components/BookingSummaryDialog.html",[0,0.234,191,0.831]],["body/components/BookingSummaryDialog.html",[0,0.403,1,0.414,2,0.791,3,0.092,4,0.165,5,0.928,7,0.513,8,0.513,9,0.08,11,1.591,12,1.548,14,0.461,15,0.88,17,0.513,18,1.865,19,1.511,21,0.513,23,1.151,25,0.08,26,0.298,29,2.131,32,0.906,33,1.042,34,0.423,37,0.541,39,0.655,41,0.414,42,0.979,43,0.418,45,0.615,46,0.021,47,0.493,48,0.307,49,0.615,52,1.997,53,1.238,54,0.824,55,0.898,60,1.783,61,1.126,67,0.414,68,0.414,69,1.985,72,0.902,74,1.997,78,0.683,79,0.213,81,1.138,82,0.799,83,0.437,84,0.189,85,0.012,95,1.659,96,1.234,97,1.43,99,0.541,102,1.034,105,0.437,118,1.892,120,1.892,121,0.969,140,1.126,142,1.461,150,1.862,162,1.225,163,1.225,174,0.461,175,0.834,176,0.791,177,0.513,178,1.214,179,0.513,180,0.513,181,0.392,182,0.513,183,0.371,184,0.513,185,0.392,186,0.834,187,0.637,188,0.834,189,0.85,190,1.336,191,1.078,192,1.671,193,0.673,194,0.392,195,0.513,196,0.392,197,0.513,198,0.414,199,0.83,200,0.392,201,0.414,202,0.392,203,0.513,204,0.513,205,0.392,206,0.461,207,0.513,208,0.392,209,0.513,210,0.414,211,0.513,212,0.392,213,0.513,214,0.513,215,0.008,216,0.008,217,0.005,224,0.969,240,0.969,261,0.602,276,0.753,279,1.694,281,1.042,283,0.969,284,1.992,285,0.969,287,0.969,289,0.969,293,0.636,316,3.194,321,0.799,322,0.906,332,1.694,333,1.042,334,2.141,335,1.997,336,1.042,344,0.636,345,1.809,348,2.295,352,1.694,356,1.576,364,1.548,369,1.576,377,1.015,380,1.355,385,1.093,388,0.906,389,1.432,390,1.093,391,2.209,393,1.43,405,1.042,406,0.906,407,0.906,411,1.042,416,1.747,425,2.972,427,1.238,436,1.381,437,1.381,441,1.892,442,1.042,446,1.461,447,1.381,449,1.694,453,2.714,454,0.85,455,1.831,456,1.831,457,1.831,458,1.831,459,0.85,462,0.969,464,1.042,466,1.042,467,0.969,468,1.225,471,1.126,482,2.262,483,1.576,487,1.173,491,0.711,502,1.831,511,1.126,512,1.042,513,1.831,514,2.644,515,1.042,516,0.906,517,1.126,519,1.382,531,2.012,533,0.969,542,1.831,543,1.126,557,1.225,560,0.969,561,1.831,567,1.694,570,1.126,581,1.831,582,2.972,605,0.85,613,1.042,614,0.799,615,1.126,616,1.042,620,1.126,624,1.831,625,1.831,638,1.831,650,1.126,654,1.3,660,1.381,661,1.381,662,1.381,669,1.892,670,1.473,689,2.694,691,1.228,697,1.862,700,1.997,703,1.228,707,1.997,709,2.706,715,1.042,716,1.228,724,1.831,729,1.831,736,0.969,739,2.351,740,0.969,742,0.969,743,0.906,745,0.969,775,1.126,782,2.012,784,0.969,785,1.126,786,2.203,787,1.042,788,1.042,789,1.355,790,1.831,791,1.355,792,1.042,793,1.355,794,1.042,795,1.355,796,1.042,798,1.355,801,1.355,803,1.042,808,3.207,809,1.355,810,1.228,811,2.784,812,1.355,813,1.355,814,1.355,815,1.126,817,2.466,818,1.126,820,2.784,821,1.126,823,1.126,824,1.126,827,2.666,828,1.042,830,3.529,831,1.355,833,1.228,834,1.355,836,2.203,837,1.355,838,0.906,839,1.355,840,1.355,841,3.529,842,1.355,843,1.355,849,1.694,851,1.042,854,1.694,855,1.042,858,0.906,859,0.969,860,1.126,861,2.529,862,0.906,863,3.144,864,1.355,865,1.355,866,1.831,867,2.203,868,1.997,869,1.992,870,1.643,871,1.126,872,1.355,873,1.355,874,2.466,875,1.355,876,2.315,877,1.355,878,1.355,879,1.126,880,2.784,881,1.355,882,1.355,883,1.355,884,1.355,885,1.355,886,1.355,887,1.228,888,1.355,889,1.355,890,2.784,891,1.355,892,1.355,893,2.523,894,1.126,895,1.355,896,1.355,897,1.355,898,2.203,899,1.355,900,1.355,901,1.355,902,1.355,903,1.355,904,1.355,905,1.355,906,1.126,907,1.126,908,1.042,909,1.355,910,2.203,911,2.784,912,2.203,913,1.831,914,2.203,915,1.694,916,2.784,917,1.042,918,2.784,919,1.355,920,1.355,921,1.355,922,1.355,923,1.042,924,2.315,925,1.042,926,0.906,927,2.203,928,1.355,929,2.203,930,1.228,931,1.355,932,1.355,933,1.355,934,1.228,935,1.355,936,1.228,937,1.992,938,1.355,939,1.355,940,1.355,941,1.355,942,2.784,943,1.355,944,1.355,945,1.228,946,1.355,947,1.355,948,1.355,949,1.355,950,1.355,951,1.355,952,1.355,953,1.355,954,1.355,955,1.355,956,1.355,957,1.355,958,1.355,959,1.228,960,1.355,961,1.355,962,1.126,963,1.355,964,1.355,965,1.126,966,1.228,967,1.355,968,1.355,969,1.228,970,1.355,971,1.042,972,1.042,973,1.042,974,1.355,975,1.355,976,1.355,977,1.355,978,3.144,979,1.831,980,1.831,981,1.831,982,2.315,983,3.144,984,2.203,985,2.203,986,2.203,987,2.203,988,2.203,989,2.203,990,2.203,991,2.203,992,2.203,993,3.612,994,2.203,995,3.207,996,3.986,997,4.154,998,1.355,999,2.203,1000,1.831,1001,3.207,1002,3.207,1003,3.207,1004,2.203,1005,2.784,1006,1.355,1007,2.784,1008,1.355,1009,1.355,1010,1.355,1011,1.355,1012,1.355,1013,1.355,1014,1.355,1015,1.831,1016,1.355,1017,1.355,1018,1.355,1019,1.355,1020,0.969,1021,1.355,1022,0.906,1023,1.126,1024,1.355,1025,1.355,1026,1.355,1027,0.969,1028,1.355,1029,2.203,1030,2.784,1031,2.203,1032,1.355,1033,1.228,1034,2.203,1035,2.203,1036,2.203,1037,1.228,1038,2.203,1107,2.9,1108,2.9,1109,2.9,1110,1.355,1111,1.783,1112,1.783,1113,1.783,1114,1.783,1115,1.783,1116,1.783,1117,1.783]],["title/injectables/BookingsService.html",[375,0.926,453,1.429]],["body/injectables/BookingsService.html",[3,0.169,4,0.148,9,0.148,20,1.559,25,0.148,26,0.473,34,0.671,39,0.508,43,0.581,45,1.036,46,0.021,47,0.62,48,0.421,49,1.036,54,1.047,67,1.235,68,1.601,72,1.119,78,0.547,79,0.39,83,0.801,84,0.169,85,0.009,96,0.806,98,1.472,199,0.904,215,0.009,216,0.013,217,0.009,258,1.466,361,1.789,375,1.189,376,1.662,377,1.25,380,1.577,389,1.865,393,1.985,453,1.835,465,2.977,669,2.83,692,2.705,893,3.168,966,3.168,1020,2.501,1022,2.935,1118,1.559,1119,2.797,1120,5.323,1121,5.323,1122,5.323,1123,4.601,1124,4.601,1125,4.601,1126,5.776,1127,5.776,1128,4.601,1129,4.601,1130,4.601,1131,4.601,1132,5.776,1133,4.601,1134,4.601,1135,4.601,1136,4.601,1137,4.601,1138,4.601,1139,1.778,1140,3.14,1141,4.601,1142,2.501,1143,4.601,1144,3.27,1145,4.601,1146,3.27,1147,4.601,1148,3.27,1149,3.27,1150,3.27,1151,4.601,1152,3.27,1153,4.601,1154,3.27,1155,4.601,1156,3.27,1157,4.601,1158,3.27,1159,4.601,1160,3.27,1161,3.27,1162,4.601,1163,3.27,1164,4.601,1165,3.27,1166,4.601,1167,3.27,1168,4.601,1169,3.27,1170,4.601,1171,3.27,1172,4.601,1173,3.27,1174,4.601,1175,3.27,1176,4.601,1177,3.27,1178,4.601,1179,1.662,1180,3.27,1181,3.935,1182,3.27,1183,3.27,1184,3.27,1185,3.27,1186,3.27,1187,3.27,1188,3.27,1189,3.27,1190,3.27,1191,3.27,1192,3.27,1193,3.27,1194,3.27,1195,3.27,1196,3.27,1197,3.27]],["title/injectables/ComponentBridgingService.html",[42,1.21,375,0.926]],["body/injectables/ComponentBridgingService.html",[3,0.257,4,0.224,9,0.224,25,0.224,26,0.622,34,0.883,42,2.045,43,0.521,45,0.883,46,0.021,47,0.593,48,0.382,49,0.883,54,0.883,55,1.216,67,1.152,68,1.152,72,1.101,78,0.622,79,0.592,83,1.216,84,0.257,85,0.014,215,0.014,216,0.017,217,0.014,361,1.666,375,1.565,377,1.213,380,1.33,465,2.712,487,1.937,593,4.963,647,4.599,969,4.168,1118,2.366,1198,4.245,1199,6.532,1200,6.532,1201,6.054,1202,4.964,1203,6.054,1204,6.054,1205,4.964,1206,3.903,1207,4.964,1208,6.801,1209,4.964,1210,4.964]],["title/components/ConfirmationDialogComponent.html",[0,0.234,193,0.831]],["body/components/ConfirmationDialogComponent.html",[0,0.446,1,0.916,2,1.426,3,0.204,4,0.178,5,1.29,6,1.488,7,1.135,8,1.135,9,0.178,11,1.972,14,1.352,15,1.78,17,1.135,18,2.022,19,1.785,21,1.505,23,1.426,25,0.178,26,0.538,29,2.519,34,0.763,37,1.896,39,0.812,41,0.916,43,0.518,45,0.763,46,0.021,47,0.545,48,0.365,49,0.763,54,0.763,55,1.438,72,0.911,78,0.538,79,0.47,84,0.204,85,0.011,96,1.17,97,1.6,102,1.747,105,0.967,174,1.02,175,1.505,176,1.426,177,1.135,178,1.797,179,1.135,180,1.135,181,0.867,182,1.135,183,0.821,184,1.135,185,0.867,186,1.505,187,0.867,188,1.505,189,0.916,190,1.87,191,0.916,192,1.135,193,1.45,194,0.867,195,1.135,196,0.867,197,1.135,198,0.916,199,1.154,200,0.867,201,0.916,202,0.867,203,1.135,204,1.135,205,0.867,206,1.02,207,1.135,208,0.867,209,1.135,210,0.916,211,1.135,212,0.867,213,1.135,214,1.135,215,0.017,216,0.015,217,0.011,276,1.667,321,2.995,514,1.667,557,2.21,586,3.975,689,3.185,739,2.801,743,2.658,755,4.748,850,1.881,858,2.005,861,3.304,862,2.005,926,2.658,1104,4.474,1110,2.999,1211,5.077,1212,3.375,1213,5.869,1214,5.232,1215,6.922,1216,4.474,1217,3.947,1218,5.232,1219,3.947,1220,5.232,1221,5.232,1222,5.344,1223,5.232,1224,3.947,1225,3.947,1226,3.947,1227,3.947,1228,4.474,1229,4.474,1230,5.232,1231,5.232,1232,3.947]],["title/classes/ConfirmationTemplate.html",[85,0.01,1233,2.467]],["body/classes/ConfirmationTemplate.html",[3,0.281,4,0.246,5,1.493,9,0.246,25,0.246,26,0.657,43,0.559,46,0.021,48,0.41,72,1.125,84,0.281,85,0.015,215,0.015,216,0.018,217,0.015,361,1.751,386,2.439,389,1.954,393,1.744,1206,3.694,1233,4.404,1234,4.655,1235,5.81,1236,5.443,1237,5.443,1238,5.443,1239,5.443]],["title/components/ConfirmationTemplateComponent.html",[0,0.234,194,0.787]],["body/components/ConfirmationTemplateComponent.html",[0,0.375,1,0.875,2,1.383,3,0.195,4,0.17,5,1.506,6,1.421,7,1.084,8,1.084,9,0.17,14,1.311,15,1.74,17,1.084,18,2.014,19,1.775,21,1.459,23,1.383,25,0.17,26,0.521,34,0.74,37,1.861,39,0.788,41,0.875,43,0.511,45,0.74,46,0.021,47,0.535,48,0.335,49,0.74,53,1.273,54,0.74,55,1.405,67,0.875,68,0.875,78,0.692,79,0.449,81,1.243,84,0.195,85,0.011,96,1.155,97,1.564,102,1.718,105,0.923,116,1.797,139,2.924,142,1.503,145,1.797,163,1.592,169,1.421,174,0.974,175,1.459,176,1.383,177,1.084,178,1.764,179,1.084,180,1.084,181,0.828,182,1.084,183,0.784,184,1.084,185,0.828,186,1.459,187,0.828,188,1.459,189,0.875,190,1.841,191,0.875,192,1.084,193,0.875,194,1.348,195,1.084,196,0.828,197,1.084,198,0.875,199,1.127,200,0.828,201,0.875,202,0.828,203,1.084,204,1.084,205,0.828,206,0.974,207,1.084,208,0.828,209,1.084,210,0.875,211,1.084,212,0.828,213,1.084,214,1.084,215,0.011,216,0.014,217,0.011,261,1.273,293,1.344,323,4.54,344,1.344,364,2.847,377,1.139,436,2.162,437,2.312,438,3.584,445,2.864,446,2.63,447,2.162,482,1.344,491,1.503,557,1.592,654,1.69,660,1.421,661,1.421,662,1.421,684,4.339,1050,2.049,1051,1.915,1052,2.864,1053,1.915,1054,1.797,1055,2.578,1206,3.118,1211,5.01,1233,3.493,1235,3.224,1240,3.224,1241,5.735,1242,5.074,1243,4.165,1244,5.735,1245,5.074,1246,2.864,1247,5.735,1248,5.074,1249,5.074,1250,3.77,1251,3.77,1252,3.77,1253,3.77,1254,2.864,1255,3.77,1256,3.77,1257,3.224,1258,3.77,1259,3.224,1260,3.77,1261,3.77,1262,3.77,1263,5.074,1264,3.204]],["title/injectables/ConfirmationTemplatesService.html",[375,0.926,438,2.093]],["body/injectables/ConfirmationTemplatesService.html",[3,0.242,4,0.211,9,0.211,20,2.233,25,0.211,26,0.6,34,0.852,39,0.728,43,0.566,45,0.928,46,0.021,47,0.555,48,0.409,49,0.928,54,0.928,67,1.478,68,1.646,72,0.988,78,0.654,79,0.559,83,1.148,84,0.242,85,0.013,215,0.013,216,0.016,217,0.013,258,2.1,361,1.756,375,1.51,376,2.381,377,1.343,380,1.399,438,3.414,465,2.829,1118,2.233,1139,2.548,1140,3.624,1142,3.176,1179,2.381,1265,4.008,1266,6.367,1267,6.367,1268,6.367,1269,6.666,1270,5.843,1271,4.997,1272,5.843,1273,4.687,1274,5.843,1275,4.687,1276,5.843,1277,4.687,1278,5.843,1279,4.687,1280,5.843,1281,4.687,1282,5.843,1283,4.687,1284,4.687,1285,4.687]],["title/classes/Email.html",[85,0.01,99,1.087]],["body/classes/Email.html",[3,0.286,4,0.249,9,0.249,25,0.249,26,0.663,43,0.545,46,0.02,48,0.4,72,1.128,84,0.286,85,0.015,99,1.957,215,0.015,216,0.018,217,0.015,361,1.726,386,2.475,838,3.473,1206,3.716,1286,4.723,1287,5.845,1288,5.523,1289,5.523,1290,5.523]],["title/classes/EmailTemplate.html",[85,0.01,1291,2.093]],["body/classes/EmailTemplate.html",[3,0.281,4,0.246,5,1.493,9,0.246,25,0.246,26,0.657,43,0.559,46,0.021,47,0.592,48,0.41,72,1.125,84,0.281,85,0.015,215,0.015,216,0.018,217,0.015,361,1.751,386,2.439,389,1.954,393,1.744,1206,3.694,1291,3.737,1292,4.655,1293,5.443,1294,5.443,1295,5.443,1296,5.443]],["title/injectables/EmailTemplatesService.html",[375,0.926,1297,2.263]],["body/injectables/EmailTemplatesService.html",[3,0.226,4,0.197,5,1.228,9,0.197,20,2.081,25,0.197,26,0.574,34,0.815,39,0.678,43,0.569,45,0.979,46,0.021,47,0.586,48,0.408,49,0.979,54,1.001,67,1.297,68,1.594,72,0.868,78,0.667,79,0.52,83,1.07,84,0.226,85,0.012,215,0.012,216,0.016,217,0.012,258,1.957,361,1.763,375,1.444,376,2.219,377,1.275,380,1.509,389,1.772,393,1.947,465,2.919,1118,2.081,1139,2.374,1140,3.532,1142,3.038,1179,2.219,1271,4.779,1291,3.795,1297,3.529,1298,3.734,1299,6.163,1300,6.163,1301,5.588,1302,6.497,1303,4.779,1304,5.588,1305,6.497,1306,5.588,1307,5.588,1308,4.367,1309,4.367,1310,5.588,1311,4.367,1312,5.588,1313,4.367,1314,4.367,1315,5.588,1316,4.367,1317,5.588,1318,5.588,1319,4.367,1320,4.367,1321,4.367,1322,4.367,1323,4.367,1324,4.367,1325,4.367,1326,4.367]],["title/classes/ExceedAmountValidator.html",[85,0.01,666,2.467]],["body/classes/ExceedAmountValidator.html",[0,0.315,3,0.116,4,0.102,9,0.102,11,1.315,12,2.2,14,0.902,15,1.296,18,0.951,19,0.855,21,0.647,23,0.951,25,0.102,32,1.144,34,0.509,37,1.058,39,0.542,42,1.179,43,0.179,45,0.328,46,0.022,47,0.42,48,0.132,49,0.328,53,0.76,54,0.889,55,0.855,60,0.951,69,1.919,78,0.691,79,0.268,81,1.35,82,1.009,83,0.551,84,0.221,85,0.015,95,1.85,96,1.188,97,0.614,98,1.901,99,1.85,102,0.551,107,1.55,118,1.915,120,2.157,121,1.224,176,0.614,183,0.468,185,0.495,199,1.225,215,0.012,216,0.01,217,0.006,224,1.224,236,2.038,261,0.76,279,2.038,281,1.315,283,1.224,284,2.323,285,1.224,293,0.803,311,2.204,332,2.038,333,1.315,336,1.315,344,0.803,345,1.952,364,2.2,369,1.897,373,1.009,377,1.103,380,1.451,385,1.814,386,1.009,388,1.773,389,1.585,390,1.963,391,1.443,393,1.699,401,0.951,404,1.71,405,1.315,406,1.144,407,1.144,408,1.315,409,1.71,410,2.651,411,1.315,416,2.294,425,1.897,426,1.55,427,2.007,428,1.925,429,2.984,430,1.925,431,1.422,432,1.925,433,1.71,434,1.925,435,1.925,436,0.848,437,1.315,438,2.496,441,2.734,442,2.496,444,1.925,445,1.71,446,1.704,447,1.963,448,1.422,449,2.812,450,4.916,451,2.984,452,3.654,453,1.704,454,1.073,455,2.204,456,2.204,457,2.204,458,2.204,459,1.073,460,3.167,461,1.422,462,1.224,463,2.984,464,1.315,465,1.391,466,1.315,467,1.224,468,0.951,469,1.71,470,1.71,471,1.422,472,1.925,473,1.925,474,1.925,475,1.925,476,1.925,477,1.925,478,1.925,479,1.925,480,1.925,481,2.984,482,2.05,483,1.224,484,2.651,485,2.984,486,1.925,487,1.901,488,1.925,489,3.654,490,1.925,491,1.919,492,5.216,493,1.925,494,4.008,495,1.925,496,1.71,497,1.925,498,1.925,499,1.925,500,1.925,501,1.925,502,2.204,503,1.925,504,1.925,505,1.925,506,1.925,507,2.984,508,2.984,509,1.925,510,2.984,511,3.04,512,2.038,513,2.699,514,2.633,515,2.496,516,2.647,517,1.422,518,1.925,519,2.036,520,3.654,521,1.925,522,1.925,523,2.984,524,1.925,525,1.925,526,1.925,527,1.71,528,1.71,529,1.71,530,1.71,531,2.482,532,1.925,533,1.897,534,2.984,535,2.984,536,1.925,537,1.925,538,1.925,539,1.925,540,1.55,541,1.925,542,1.422,543,3.29,544,1.925,545,1.925,546,1.71,547,1.925,548,1.925,549,1.925,550,2.651,551,1.422,552,2.204,553,1.925,554,1.925,555,1.925,556,1.925,557,0.951,558,1.925,559,1.925,560,1.224,561,2.204,562,2.984,563,2.984,564,1.925,565,1.925,566,1.925,567,1.315,568,1.925,569,1.925,570,1.422,571,1.925,572,1.925,573,1.71,574,1.925,575,1.925,576,1.925,577,1.925,578,1.71,579,1.925,580,1.925,581,3.04,582,2.617,583,1.55,584,1.71,585,1.925,586,1.71,587,1.925,588,1.925,589,1.55,590,1.925,591,1.925,592,1.71,593,2.651,594,1.71,595,1.925,596,1.925,597,3.04,598,4.116,599,1.925,600,2.984,601,1.925,602,3.654,603,1.925,604,1.925,605,1.073,606,1.925,607,3.654,608,1.925,609,2.984,610,1.71,611,1.71,612,1.71,613,1.315,614,1.009,615,1.422,616,1.315,617,1.925,618,1.925,619,1.925,620,2.699,621,1.925,622,1.925,623,1.925,624,2.204,625,2.204,626,1.925,627,1.925,628,1.925,629,2.984,630,2.984,631,4.116,632,2.984,633,3.654,634,2.984,635,2.984,636,2.984,637,2.984,638,2.204,639,1.925,640,1.71,641,1.925,642,1.925,643,1.925,644,1.925,645,1.925,646,1.925,647,1.71,648,1.925,649,1.925,650,1.422,651,1.925,652,1.925,653,1.925,654,1.009,655,1.71,656,1.925,657,1.925,658,1.315,659,1.71,660,0.848,661,0.848,662,0.848,663,2.984,664,2.204,665,2.984,666,2.402,667,2.984,668,2.984,669,1.564,670,2.171,671,2.984,672,1.925,673,1.925,674,1.925,675,1.925,676,1.925,1327,3.489,1328,2.251]],["title/components/HomeComponent.html",[0,0.234,196,0.787]],["body/components/HomeComponent.html",[0,0.248,1,0.435,2,0.823,3,0.097,4,0.085,5,0.833,6,0.707,7,0.539,8,0.539,9,0.085,13,2.582,14,0.78,15,1.15,17,0.539,18,1.84,19,1.571,21,0.868,23,0.823,25,0.085,26,0.31,34,0.44,37,1.319,39,0.469,41,0.435,43,0.427,45,0.44,46,0.021,47,0.467,48,0.298,49,0.44,53,0.633,54,0.553,55,0.929,78,0.447,79,0.223,81,0.459,84,0.097,85,0.005,95,0.569,96,1.157,97,1.299,98,1.525,99,1.545,102,0.74,103,3.717,105,0.459,109,2.756,111,4.765,116,2.978,117,3.255,118,2.84,120,3.005,121,1.641,124,4.333,125,2.283,127,1.184,129,5.465,130,4.356,131,2.655,132,3.621,133,3.717,134,4.363,135,4.723,136,2.993,139,3.49,140,2.745,142,1.9,144,5.049,145,0.893,146,5.419,147,4.58,148,5.161,162,1.601,163,1.601,169,1.638,174,0.484,175,1.09,176,0.823,177,0.539,178,1.25,179,0.539,180,0.539,181,0.412,182,0.539,183,0.39,184,0.539,185,0.412,186,0.868,187,0.412,188,0.868,189,0.435,190,1.371,191,0.435,192,0.539,193,0.435,194,0.412,195,0.539,196,0.955,197,0.539,198,0.435,199,1.261,200,0.412,201,0.435,202,0.412,203,0.539,204,0.539,205,0.412,206,0.484,207,0.539,208,0.412,209,0.539,210,0.435,211,1.465,212,0.412,213,0.539,214,0.539,215,0.005,216,0.008,217,0.005,261,0.633,268,1.424,293,0.669,345,0.6,347,3.717,377,0.946,380,0.412,390,1.138,436,1.429,437,1.638,441,1.699,442,1.095,446,2.031,447,1.429,448,1.184,449,2.539,482,0.669,487,0.6,491,0.747,494,2.394,496,1.424,515,1.095,519,0.893,527,2.294,528,2.294,529,1.424,530,1.424,531,1.439,533,2.061,552,1.907,597,2.745,614,1.948,640,2.294,658,1.764,659,2.294,660,0.707,661,0.707,662,0.707,664,1.907,678,1.907,682,2.582,727,2.294,729,3.729,749,2.582,752,2.582,778,2.427,780,2.294,850,0.893,859,1.019,1020,2.912,1022,1.534,1027,1.019,1033,2.079,1037,2.079,1042,2.294,1043,2.294,1050,1.019,1051,3.175,1053,3.407,1054,2.978,1055,3.517,1057,3.242,1058,2.582,1064,2.993,1083,5.649,1228,2.582,1229,2.582,1246,1.424,1264,2.745,1329,1.603,1330,3.791,1331,3.019,1332,3.383,1333,3.791,1334,3.791,1335,3.019,1336,3.688,1337,3.019,1338,1.874,1339,1.874,1340,1.874,1341,1.874,1342,3.791,1343,3.019,1344,1.874,1345,1.874,1346,1.874,1347,1.874,1348,1.874,1349,1.603,1350,1.874,1351,3.791,1352,3.019,1353,3.019,1354,4.347,1355,5.572,1356,4.766,1357,3.019,1358,5.572,1359,3.019,1360,3.019,1361,3.019,1362,4.347,1363,3.019,1364,3.019,1365,3.019,1366,3.019,1367,3.019,1368,3.019,1369,3.791,1370,5.356,1371,3.019,1372,3.019,1373,3.019,1374,3.019,1375,3.019,1376,4.347,1377,3.019,1378,3.019,1379,3.019,1380,3.019,1381,4.347,1382,3.019,1383,3.019,1384,3.019,1385,3.019,1386,3.019,1387,3.019,1388,3.019,1389,3.019,1390,3.019,1391,3.019,1392,3.019,1393,4.347,1394,3.019,1395,3.019,1396,3.019,1397,3.019,1398,1.603,1399,4.347,1400,5.356,1401,1.874,1402,1.874,1403,4.766,1404,3.019,1405,1.874,1406,3.791,1407,3.791,1408,1.874,1409,1.874,1410,4.765,1411,1.874,1412,4.766,1413,5.905,1414,3.019,1415,1.874,1416,1.874,1417,1.874,1418,1.603,1419,6.706,1420,4.766,1421,1.874,1422,1.874,1423,5.572,1424,1.874,1425,1.874,1426,5.572,1427,1.874,1428,4.766,1429,1.603,1430,4.766,1431,1.874,1432,1.874,1433,1.874,1434,1.874,1435,1.874,1436,1.874,1437,3.019,1438,4.766,1439,1.874,1440,1.874,1441,1.874,1442,3.019,1443,3.791,1444,3.019,1445,3.791,1446,5.905,1447,3.019,1448,3.019,1449,3.019,1450,3.791,1451,1.874,1452,1.874,1453,6.249,1454,6.249,1455,1.874,1456,1.603,1457,1.874,1458,5.752,1459,1.874,1460,1.874,1461,1.874,1462,1.874,1463,1.874,1464,3.791,1465,1.874,1466,1.874,1467,1.874,1468,3.242,1469,1.874,1470,1.874,1471,1.874,1472,3.019,1473,1.874,1474,1.874,1475,1.874,1476,1.874,1477,1.874,1478,3.791,1479,3.791,1480,1.874,1481,1.874,1482,1.874,1483,1.874,1484,1.874,1485,1.874,1486,3.791,1487,1.874,1488,3.791,1489,1.874,1490,1.874,1491,1.874,1492,2.582,1493,1.874,1494,1.874,1495,1.874,1496,1.874,1497,1.874,1498,1.874,1499,1.874,1500,1.874,1501,1.874,1502,1.874,1503,1.874,1504,1.874,1505,1.874,1506,1.874,1507,3.019,1508,1.874,1509,1.874,1510,1.874,1511,1.874,1512,1.874,1513,1.874]],["title/classes/Issue.html",[85,0.01,1332,2.263]],["body/classes/Issue.html",[3,0.282,4,0.246,9,0.246,25,0.246,26,0.658,43,0.56,46,0.02,47,0.593,48,0.41,72,1.125,84,0.282,85,0.015,99,2.063,215,0.015,216,0.018,217,0.015,361,1.753,386,2.447,389,1.843,393,1.488,1332,4.519,1514,4.668,1515,5.459,1516,5.459,1517,5.459,1518,5.459,1519,5.459]],["title/injectables/IssueService.html",[375,0.926,1336,2.467]],["body/injectables/IssueService.html",[3,0.232,4,0.202,9,0.202,20,2.138,25,0.202,26,0.584,34,0.829,39,0.696,43,0.567,45,0.987,46,0.021,47,0.59,48,0.404,49,0.987,54,1.008,67,1.041,68,1.571,72,0.696,78,0.641,79,0.535,83,1.099,84,0.232,85,0.013,215,0.013,216,0.016,217,0.013,258,2.011,361,1.758,375,1.469,376,2.279,377,1.159,380,1.52,389,1.795,393,1.957,465,2.929,669,2.797,1118,2.138,1139,2.439,1140,3.567,1142,3.09,1179,2.279,1332,3.59,1336,3.914,1520,3.836,1521,5.337,1522,5.685,1523,5.611,1524,5.685,1525,5.685,1526,6.562,1527,5.685,1528,5.685,1529,5.685,1530,4.486,1531,4.486,1532,5.685,1533,4.486,1534,5.685,1535,4.486,1536,4.486,1537,5.685,1538,4.486,1539,5.685,1540,3.836,1541,3.836,1542,3.836,1543,3.836,1544,3.836,1545,3.836]],["title/components/ItemDetailsComponent.html",[0,0.234,198,0.831]],["body/components/ItemDetailsComponent.html",[0,0.392,1,0.727,2,1.217,3,0.162,4,0.141,5,1.142,6,1.18,7,0.901,8,0.901,9,0.141,11,1.18,14,1.153,15,1.577,17,0.901,18,1.976,19,1.73,21,1.283,23,1.217,25,0.141,26,0.458,29,2.346,34,0.651,37,1.719,39,0.693,41,0.727,43,0.522,45,0.457,46,0.021,47,0.543,48,0.35,49,0.457,53,1.058,54,0.873,55,1.273,60,1.885,78,0.615,79,0.373,81,0.767,84,0.162,85,0.009,96,1.09,97,1.417,102,1.093,105,0.767,116,1.493,118,1.404,139,2.7,142,1.249,145,1.493,163,1.323,169,1.18,174,0.809,175,1.283,176,1.217,177,0.901,178,1.629,179,0.901,180,0.901,181,0.688,182,0.901,183,0.651,184,0.901,185,0.688,186,1.283,187,0.688,188,1.283,189,0.727,190,1.722,191,0.727,192,0.901,193,0.727,194,0.688,195,0.901,196,0.688,197,0.901,198,1.315,199,1.437,200,0.688,201,0.727,202,0.688,203,0.901,204,0.901,205,0.688,206,0.809,207,0.901,208,0.688,209,0.901,210,0.727,211,0.901,212,0.688,213,0.901,214,0.901,215,0.009,216,0.012,217,0.009,261,1.058,268,4.73,276,1.323,293,1.117,309,4.209,345,1.002,356,3.384,377,0.965,380,0.981,390,1.959,391,1.507,393,1.217,399,3.579,400,3.283,401,2.196,402,2.379,426,2.156,427,1.507,436,1.959,437,2.136,441,2.539,446,2.554,447,1.959,448,1.978,460,3.255,461,1.978,468,1.885,469,3.39,470,3.949,482,1.854,483,2.426,484,3.39,491,1.249,494,3.782,516,2.267,552,2.818,614,2.539,658,3.31,660,1.682,661,1.682,662,1.682,739,2.539,756,3.39,828,2.607,833,3.072,850,1.493,858,1.591,861,3.043,862,1.591,926,2.267,937,1.703,1042,4.304,1050,1.703,1051,1.591,1053,1.591,1054,1.493,1055,2.267,1110,2.379,1222,3.816,1264,3.578,1349,2.678,1546,4.588,1547,4.55,1548,5.199,1549,6.225,1550,4.462,1551,3.132,1552,4.462,1553,4.73,1554,3.132,1555,3.132,1556,3.132,1557,3.132,1558,3.132,1559,6.406,1560,2.379,1561,3.132,1562,3.132,1563,3.132,1564,3.132,1565,3.132,1566,3.132,1567,3.132,1568,5.666,1569,3.132,1570,3.132,1571,3.132,1572,3.132,1573,3.132,1574,3.132,1575,3.132,1576,2.678,1577,3.132,1578,2.379,1579,2.678,1580,6.225,1581,5.666,1582,4.462,1583,3.132,1584,3.816,1585,2.156]],["title/components/ItemListComponent.html",[0,0.234,200,0.787]],["body/components/ItemListComponent.html",[0,0.398,1,0.449,2,0.844,3,0.1,4,0.087,5,0.851,6,0.729,7,0.556,8,0.556,9,0.087,11,1.947,12,2.381,14,1.001,15,1.343,16,2.666,17,0.556,18,1.879,19,1.543,21,0.891,23,1.056,25,0.175,26,0.318,29,2.248,30,3.925,32,2.249,33,1.13,34,0.452,36,3.048,37,1.469,39,0.601,41,1.259,42,1.636,43,0.538,45,0.822,46,0.021,47,0.569,48,0.368,49,0.645,53,0.654,54,0.848,55,1.381,60,1.87,64,3.557,67,1.027,68,1.124,69,2.318,72,0.601,78,0.677,79,0.231,80,1.332,81,1.186,82,0.867,83,0.474,84,0.16,85,0.011,95,1.809,96,0.905,97,1.718,98,2.09,102,1.084,105,0.474,109,0.867,116,1.476,120,1.388,125,1.736,126,1.655,131,0.922,139,2.11,142,1.544,145,1.846,150,2.249,162,1.87,163,1.308,169,1.669,174,0.5,175,0.891,176,0.844,177,0.556,178,1.273,179,0.556,180,0.556,181,0.425,182,0.556,183,0.402,184,0.556,185,0.425,186,0.891,187,0.425,188,0.891,189,0.449,190,1.393,191,0.449,192,0.556,193,0.719,194,0.425,195,0.556,196,0.425,197,0.556,198,0.719,199,1.386,200,0.973,201,0.719,202,0.425,203,0.556,204,0.556,205,0.425,206,0.5,207,0.556,208,0.425,209,0.556,210,0.449,211,0.891,212,0.425,213,0.556,214,0.556,215,0.009,216,0.009,217,0.005,240,1.052,261,0.654,272,1.332,276,0.817,287,1.052,289,1.052,293,0.69,309,1.222,310,1.332,312,4.285,321,0.867,322,0.983,334,1.13,345,1.653,348,1.052,356,1.684,373,1.388,377,1.007,380,0.851,385,1.167,389,0.891,390,1.825,391,1.495,393,1.32,400,3.672,401,1.308,406,0.983,407,0.983,416,1.476,427,1.308,436,0.729,437,1.167,441,2.171,446,2.163,447,1.46,453,2.06,454,0.922,459,1.476,460,2.954,461,1.222,468,0.817,482,2.371,487,1.417,491,0.772,514,1.87,516,1.968,531,2.771,540,1.332,551,2.796,557,0.817,560,1.684,582,1.684,583,2.132,605,1.476,614,1.984,654,1.736,660,0.729,661,0.729,662,0.729,670,2.625,678,1.956,689,2.956,697,2.625,702,1.47,736,1.052,739,1.736,740,1.052,742,1.052,743,0.983,745,1.052,776,1.052,778,1.476,779,1.684,781,1.052,782,2.687,783,1.052,784,1.052,785,1.956,787,2.262,788,1.809,790,2.446,792,2.586,794,2.586,796,2.262,799,2.649,800,2.649,803,2.586,804,1.47,817,3.964,818,1.956,821,1.956,823,1.956,824,1.956,825,2.132,827,3.263,828,1.809,838,0.983,846,1.655,847,1.655,849,2.586,850,1.476,851,2.262,852,1.655,854,2.586,855,2.262,856,2.649,857,1.655,858,0.983,859,1.052,861,1.574,862,0.983,863,2.446,869,2.407,870,1.984,871,1.222,874,2.586,876,1.222,894,1.222,906,1.222,907,1.222,908,1.13,913,1.222,915,1.809,917,1.13,923,2.262,924,1.222,925,1.13,926,0.983,937,1.684,965,1.222,971,1.13,972,1.13,973,1.13,978,1.222,979,1.222,980,1.222,981,1.222,982,1.222,983,1.956,1000,1.956,1015,1.222,1020,1.052,1022,0.983,1023,1.222,1027,1.052,1044,2.649,1045,2.353,1050,1.052,1051,0.983,1053,0.983,1054,0.922,1055,1.574,1064,1.332,1065,1.47,1084,1.655,1546,4.672,1547,1.47,1553,2.942,1560,1.47,1578,2.353,1585,1.332,1586,3.312,1587,3.312,1588,3.786,1589,3.097,1590,3.786,1591,1.935,1592,2.649,1593,2.649,1594,1.935,1595,1.935,1596,1.655,1597,1.935,1598,1.935,1599,2.649,1600,1.935,1601,2.942,1602,1.935,1603,3.786,1604,1.935,1605,1.935,1606,3.363,1607,1.655,1608,1.935,1609,1.655,1610,1.935,1611,1.655,1612,2.353,1613,1.655,1614,2.353,1615,1.655,1616,1.655,1617,1.655,1618,1.655,1619,1.655,1620,1.655,1621,1.655,1622,1.655,1623,1.655,1624,1.655,1625,1.655,1626,1.655,1627,1.655,1628,3.312,1629,1.655,1630,1.655,1631,3.312,1632,2.649,1633,2.649,1634,1.655,1635,1.655,1636,1.47,1637,1.655,1638,1.655,1639,1.655,1640,1.655,1641,1.655,1642,2.649,1643,1.655,1644,1.655,1645,1.655,1646,1.655,1647,1.655,1648,1.655,1649,1.655,1650,1.655,1651,1.47,1652,1.655,1653,1.655,1654,1.655,1655,1.655,1656,1.655,1657,1.655,1658,1.655,1659,1.655,1660,3.312,1661,1.655,1662,1.655,1663,2.649,1664,1.47,1665,1.655,1666,1.655,1667,1.655,1668,3.097,1669,3.097,1670,3.097,1671,3.097,1672,3.097,1673,3.097,1674,3.097,1675,1.935,1676,1.935,1677,1.935,1678,1.655]],["title/components/ItemListDialog.html",[0,0.234,201,0.831]],["body/components/ItemListDialog.html",[0,0.408,1,0.458,2,0.857,3,0.102,4,0.089,5,0.862,7,0.567,8,0.567,9,0.089,11,1.185,12,1.657,14,1.014,15,1.358,16,2.165,17,0.567,18,1.885,19,1.55,21,0.567,23,1.069,25,0.142,26,0.323,29,2.418,30,3.959,32,2.274,33,1.152,34,0.459,36,1.358,37,1.483,39,0.609,41,1.269,42,1.651,43,0.523,45,0.572,46,0.021,47,0.495,48,0.351,49,0.288,53,0.666,54,0.653,55,1.096,60,2.065,64,2.7,67,1.135,68,1.209,69,2.263,72,0.488,78,0.68,79,0.235,80,1.358,81,1.198,82,0.884,83,0.483,84,0.163,85,0.011,95,1.819,96,0.913,97,1.7,98,1.749,102,1.198,105,0.483,109,1.41,117,1.837,120,2.006,124,1.986,125,2.006,127,1.986,131,1.499,132,2.389,142,2.18,150,2.274,162,2.065,169,1.687,174,0.51,175,0.904,176,0.857,177,0.567,178,1.287,179,0.567,180,0.567,181,0.433,182,0.567,183,0.41,184,0.567,185,0.433,186,0.904,187,0.433,188,0.904,189,0.458,190,1.406,191,0.458,192,0.567,193,0.73,194,0.433,195,0.567,196,0.433,197,0.567,198,0.73,199,1.397,200,0.691,201,1.039,202,0.433,203,0.567,204,0.567,205,0.433,206,0.51,207,0.567,208,0.433,209,0.567,210,0.458,211,1.128,212,0.433,213,0.567,214,0.567,215,0.009,216,0.009,217,0.006,240,1.072,261,0.666,272,1.358,276,0.833,287,1.072,289,1.072,293,0.703,309,1.246,310,1.358,312,4.179,321,0.884,322,1.002,334,1.837,345,1.667,348,1.71,356,2.658,373,0.884,377,1.015,380,1.074,385,1.185,389,0.567,390,2.061,391,1.325,393,0.857,399,2.165,400,2.827,401,1.657,406,1.598,407,1.598,408,1.837,416,2.483,427,1.325,436,1.478,437,1.687,441,2.006,446,1.564,447,1.185,453,1.564,454,0.94,459,1.499,460,2.973,461,1.246,468,1.89,482,2.314,487,1.432,491,0.786,514,1.89,516,1.002,531,2.133,540,2.165,557,1.89,560,1.072,582,1.072,583,1.358,605,1.499,614,0.884,654,1.758,660,0.743,661,0.743,662,0.743,670,2.648,689,3.057,697,2.648,702,2.389,736,1.71,739,2.45,740,1.072,742,1.072,743,1.002,745,1.072,768,3.4,776,1.71,778,2.133,779,2.433,781,1.71,782,2.605,783,1.71,784,1.072,785,1.246,787,1.152,788,1.152,790,1.246,792,2.615,794,2.615,796,1.152,803,1.152,817,3.194,818,1.246,821,1.246,823,1.246,824,1.246,827,3.291,828,1.152,838,1.598,844,1.687,849,2.615,850,1.869,851,2.291,854,2.615,855,2.291,858,1.002,859,1.072,861,2.484,862,1.002,863,3.291,869,2.433,870,2.006,871,1.246,874,2.615,876,1.246,894,1.246,906,1.246,907,1.246,908,1.152,913,1.246,915,1.837,917,1.152,923,1.837,924,1.986,925,1.152,926,1.598,937,1.71,965,1.986,971,2.615,972,1.152,973,1.152,978,1.986,979,1.986,980,1.986,981,1.986,982,1.986,983,2.477,1000,1.246,1015,1.246,1020,1.072,1022,1.002,1023,1.246,1027,1.072,1047,2.165,1060,2.389,1103,2.389,1546,4.555,1547,3.715,1553,3.4,1560,1.498,1578,2.389,1586,1.687,1587,1.687,1588,1.687,1590,1.687,1592,1.687,1593,1.687,1599,1.687,1601,2.98,1603,1.687,1606,3.4,1611,1.687,1612,2.389,1613,1.687,1614,2.389,1615,1.687,1616,1.687,1617,1.687,1618,1.687,1619,1.687,1620,1.687,1621,1.687,1622,1.687,1623,1.687,1624,1.687,1625,1.687,1626,1.687,1627,1.687,1628,3.354,1629,1.687,1630,1.687,1631,3.354,1632,2.689,1633,2.689,1634,3.354,1635,2.689,1636,1.498,1637,3.354,1638,2.689,1639,3.354,1640,3.354,1641,1.687,1642,2.689,1643,1.687,1644,1.687,1645,1.687,1646,1.687,1647,1.687,1648,1.687,1649,1.687,1650,1.687,1651,1.498,1652,1.687,1653,1.687,1654,1.687,1655,1.687,1656,1.687,1657,2.689,1658,2.689,1659,3.827,1660,3.354,1661,1.687,1662,1.687,1663,2.689,1664,3.4,1665,1.687,1666,1.687,1667,1.687,1678,3.827,1679,1.498,1680,3.145,1681,1.972,1682,1.972,1683,1.972,1684,1.972,1685,1.972,1686,1.972,1687,1.972,1688,1.972,1689,1.972,1690,1.972,1691,1.972,1692,1.972,1693,1.972,1694,3.145,1695,4.476,1696,3.145,1697,3.145,1698,3.145,1699,3.145,1700,3.145,1701,4.476,1702,3.145,1703,3.145,1704,3.145,1705,3.145,1706,3.145,1707,3.145,1708,3.145,1709,3.145,1710,3.145]],["title/classes/Items.html",[85,0.01,98,1.147]],["body/classes/Items.html",[3,0.263,4,0.229,9,0.229,25,0.229,26,0.631,43,0.575,46,0.021,47,0.576,48,0.422,72,1.138,78,0.522,84,0.318,85,0.017,96,1.076,98,2.112,199,0.999,215,0.014,216,0.017,217,0.014,361,1.783,385,1.916,386,2.279,387,3.862,388,2.583,389,1.972,390,2.584,391,1.717,393,1.985,398,4.348,399,4.544,400,4.169,401,2.788,402,5.015,1711,5.084,1712,5.084,1713,5.084,1714,5.084,1715,5.084,1716,5.084,1717,5.084]],["title/injectables/ItemsService.html",[375,0.926,460,1.82]],["body/injectables/ItemsService.html",[3,0.232,4,0.202,9,0.202,20,2.138,25,0.202,26,0.584,34,0.829,39,0.696,43,0.567,45,0.987,46,0.021,47,0.59,48,0.404,49,0.987,54,1.008,67,1.041,68,1.571,72,0.696,78,0.641,79,0.535,83,1.099,84,0.232,85,0.013,199,1.117,215,0.013,216,0.016,217,0.013,258,2.011,361,1.758,375,1.469,376,2.279,377,1.159,380,1.52,389,1.795,393,1.957,460,2.889,465,2.929,669,2.797,1118,2.138,1139,2.439,1140,3.567,1142,3.09,1179,2.279,1521,5.337,1523,5.611,1540,3.836,1541,3.836,1542,3.836,1543,3.836,1544,3.836,1545,3.836,1664,4.319,1718,3.836,1719,5.685,1720,5.685,1721,6.562,1722,5.685,1723,5.685,1724,5.685,1725,4.486,1726,4.486,1727,5.685,1728,4.486,1729,5.685,1730,4.486,1731,4.486,1732,5.685,1733,4.486,1734,5.685]],["title/interceptors/JwtInterceptor.html",[232,2.263,1735,2.722]],["body/interceptors/JwtInterceptor.html",[3,0.266,4,0.232,9,0.232,14,1.328,25,0.232,34,0.901,39,0.798,43,0.493,45,0.901,46,0.021,47,0.539,48,0.361,49,0.901,54,0.749,78,0.707,79,0.613,81,1.259,83,1.259,84,0.266,85,0.014,215,0.014,216,0.017,217,0.014,232,3.905,258,2.303,365,3.633,375,1.598,380,1.129,431,3.246,465,2.644,551,3.246,664,3.246,692,2.611,870,2.972,1179,2.611,1736,4.395,1737,5.038,1738,4.395,1739,5.287,1740,3.538,1741,5.139,1742,5.287,1743,5.228,1744,5.885,1745,5.139,1746,3.538,1747,4.395,1748,5.287,1749,4.395,1750,5.139,1751,5.139,1752,4.395]],["title/interfaces/LoginDetail.html",[1753,2.263,1754,2.467]],["body/interfaces/LoginDetail.html",[3,0.29,4,0.253,9,0.253,25,0.253,26,0.669,46,0.02,48,0.381,72,1.132,84,0.29,215,0.016,216,0.018,217,0.016,361,1.375,1753,3.545,1754,4.484,1755,4.264,1756,4.8,1757,4.8,1758,6.056,1759,4.875]],["title/components/LoginFormComponent.html",[0,0.234,202,0.787]],["body/components/LoginFormComponent.html",[0,0.386,1,0.703,2,1.188,3,0.157,4,0.137,5,1.121,6,1.142,7,0.871,8,0.871,9,0.137,11,1.642,12,2.6,14,1.126,15,1.548,16,3.513,17,0.871,18,1.969,19,1.721,21,1.253,23,1.188,25,0.137,26,0.448,34,0.635,36,3.842,37,1.693,39,0.676,41,0.703,42,1.885,43,0.547,45,0.635,46,0.021,47,0.487,48,0.36,49,0.635,54,0.814,55,1.554,57,3.726,60,1.84,61,2.752,64,4.07,67,1.011,68,1.011,72,1.055,78,0.632,79,0.361,81,1.067,82,1.358,83,0.742,84,0.157,85,0.008,95,1.322,96,1.078,97,1.391,98,0.969,102,1.067,105,1.731,109,1.358,116,1.444,117,2.545,124,3.223,125,1.358,127,1.913,129,3.31,134,3.513,135,3,136,3,139,2.659,142,1.208,145,2.076,162,1.279,169,1.142,174,0.783,175,1.253,176,1.188,177,0.871,178,1.605,179,0.871,180,0.871,181,0.666,182,0.871,183,0.63,184,0.871,185,0.666,186,1.253,187,0.666,188,1.253,189,0.703,190,1.7,191,0.703,192,0.871,193,0.703,194,0.666,195,0.871,196,0.666,197,0.871,198,0.703,199,1.003,200,0.666,201,0.703,202,1.226,203,0.871,204,0.871,205,0.666,206,0.783,207,0.871,208,0.666,209,0.871,210,0.703,211,0.871,212,0.666,213,0.871,214,0.871,215,0.008,216,0.012,217,0.008,261,1.023,317,4.768,344,1.08,352,1.769,364,2.679,365,3.128,372,3.877,373,1.358,377,1.036,380,0.666,383,4.363,391,1.023,427,2.079,441,2.65,447,1.923,487,1.97,512,2.545,514,1.279,605,2.817,614,2.501,696,4.772,756,3.31,778,1.444,815,2.752,887,2.085,945,3.842,1027,1.647,1043,3.31,1051,1.539,1053,1.539,1054,1.444,1055,2.214,1410,2.59,1429,2.59,1492,2.59,1585,2.085,1740,2.085,1746,2.085,1758,5.264,1759,4.238,1760,5.923,1761,2.59,1762,5.103,1763,4.357,1764,5.103,1765,5.912,1766,5.103,1767,5.912,1768,5.103,1769,4.357,1770,3.726,1771,4.363,1772,4.357,1773,3.029,1774,3.029,1775,4.357,1776,4.357,1777,3.726,1778,3.029,1779,4.772,1780,4.357,1781,3.029,1782,4.357,1783,5.103,1784,3.029,1785,3.029,1786,3.029,1787,5.912,1788,3.029,1789,3.029,1790,3.029,1791,3.029,1792,4.357,1793,4.357,1794,3.029,1795,3.029,1796,3.029,1797,3.029,1798,3.029,1799,3.029,1800,3.029,1801,3.029,1802,3.029,1803,3.029,1804,3.029,1805,3.029,1806,3.029,1807,3.029,1808,3.029,1809,3.029,1810,3.029,1811,3.029,1812,3.029,1813,3.029,1814,4.357,1815,4.357,1816,4.357,1817,3.029,1818,3.029,1819,3.029,1820,3.029,1821,3.029,1822,3.029,1823,3.029]],["title/injectables/LoginService.html",[365,1.82,375,0.926]],["body/injectables/LoginService.html",[3,0.171,4,0.149,9,0.149,20,1.579,25,0.149,26,0.477,29,2.021,34,0.677,39,0.721,42,1.962,43,0.564,45,0.924,46,0.021,47,0.553,48,0.4,49,0.924,54,0.949,55,1.313,67,1.078,68,1.078,72,0.721,78,0.694,79,0.395,83,0.812,84,0.171,85,0.009,95,1.408,105,1.313,215,0.009,216,0.013,217,0.009,258,1.485,344,1.182,345,1.859,361,1.744,364,2.75,365,2.359,375,1.2,376,1.684,377,1.34,378,5.567,380,1.484,381,2.833,427,2.244,431,3.386,465,2.596,466,1.936,467,1.801,468,1.399,487,1.06,605,2.769,613,2.713,658,1.936,692,3.376,709,2.524,755,3.528,838,1.684,866,2.093,879,2.933,962,2.933,1054,1.579,1118,1.579,1139,1.801,1140,3.158,1142,2.524,1398,3.971,1601,2.517,1743,4.817,1749,2.833,1754,4,1759,3.197,1770,3.971,1771,4.584,1779,3.971,1824,2.833,1825,5.361,1826,5.361,1827,5.361,1828,4.643,1829,4.643,1830,4.968,1831,5.81,1832,4.643,1833,4.643,1834,5.361,1835,5.361,1836,4.643,1837,4.643,1838,3.313,1839,4.643,1840,4.968,1841,3.313,1842,4.643,1843,3.313,1844,3.313,1845,3.313,1846,4.643,1847,3.313,1848,4.643,1849,3.313,1850,3.313,1851,4.073,1852,3.313,1853,4.643,1854,3.313,1855,4.643,1856,3.313,1857,3.313,1858,3.313,1859,3.313,1860,3.313,1861,3.971,1862,2.833,1863,3.313,1864,3.313,1865,3.313,1866,4.643,1867,3.313,1868,3.313,1869,4.643,1870,3.313,1871,3.313,1872,3.313,1873,3.971,1874,4.643,1875,3.313,1876,3.313,1877,5.361,1878,4.643,1879,3.313,1880,3.313,1881,3.313,1882,3.313,1883,3.313,1884,3.313,1885,4.643,1886,3.313,1887,3.313,1888,3.313,1889,3.313,1890,2.517,1891,3.313,1892,2.517,1893,3.313,1894,3.313,1895,3.313,1896,3.313,1897,3.313,1898,4.643,1899,3.313,1900,3.313,1901,3.313,1902,3.313,1903,3.313,1904,4.643,1905,3.313,1906,3.313,1907,3.313,1908,3.313,1909,4.643,1910,3.313,1911,3.313,1912,3.313,1913,3.313,1914,3.313,1915,5.361,1916,3.313,1917,3.313,1918,3.313,1919,3.313,1920,3.313,1921,3.313,1922,3.313,1923,3.313,1924,3.313,1925,3.313]],["title/components/LogoutComponent.html",[0,0.234,41,0.831]],["body/components/LogoutComponent.html",[0,0.43,1,0.951,2,1.462,3,0.212,4,0.185,5,1.313,6,1.544,7,1.178,8,1.178,9,0.185,11,2.021,14,1.386,15,1.813,17,1.178,18,2.029,19,1.793,21,1.542,23,1.462,25,0.185,26,0.551,29,2.253,34,0.782,37,1.923,39,0.832,41,1.472,43,0.506,45,0.597,46,0.021,47,0.521,48,0.313,49,0.597,54,0.782,55,1.464,78,0.614,79,0.488,81,1.004,83,1.004,84,0.212,85,0.011,96,1.183,97,1.63,102,1.313,105,1.004,122,3.503,123,3.503,174,1.059,175,1.542,176,1.462,177,1.178,178,1.824,179,1.178,180,1.178,181,0.9,182,1.178,183,0.852,184,1.178,185,0.9,186,1.542,187,0.9,188,1.542,189,0.951,190,1.893,191,0.951,192,1.178,193,0.951,194,0.9,195,1.178,196,0.9,197,1.178,198,0.951,199,1.175,200,0.9,201,0.951,202,0.9,203,1.178,204,1.178,205,0.9,206,1.059,207,1.178,208,0.9,209,1.178,210,0.951,211,1.178,212,0.9,213,1.178,214,1.178,215,0.011,216,0.015,217,0.011,236,3.132,365,3.586,377,0.761,391,1.811,427,2.223,487,1.311,514,1.73,519,1.952,669,2.403,815,3.386,870,1.836,1740,2.821,1746,2.821,1777,4.585,1830,6.174,1851,4.541,1926,3.503,1927,5.362,1928,5.977,1929,5.362,1930,5.977,1931,5.362,1932,4.097,1933,4.097,1934,4.097,1935,4.097,1936,4.097,1937,4.097,1938,4.097,1939,3.503]],["title/components/MailSenderComponent.html",[0,0.234,205,0.787]],["body/components/MailSenderComponent.html",[0,0.377,1,0.885,2,1.395,3,0.197,4,0.172,5,1.268,6,1.438,7,1.097,8,1.097,9,0.172,17,1.097,18,2.016,19,1.778,21,1.471,23,1.395,25,0.172,26,0.526,34,0.746,39,0.794,41,0.885,43,0.492,45,0.746,46,0.021,47,0.538,48,0.337,49,0.746,53,1.289,54,0.556,55,0.935,67,0.885,68,0.885,78,0.695,79,0.455,81,1.253,84,0.197,85,0.011,96,1.159,97,1.573,99,1.95,102,1.253,105,0.935,116,1.818,139,2.938,142,1.521,145,1.818,163,1.612,169,1.438,174,0.986,175,1.471,176,1.395,177,1.097,178,1.773,179,1.097,180,1.097,181,0.838,182,1.097,183,0.793,184,1.097,185,0.838,186,1.471,187,0.838,188,1.471,189,0.885,190,1.849,191,0.885,192,1.097,193,0.885,194,0.838,195,1.097,196,0.838,197,1.097,198,0.885,199,1.134,200,0.838,201,0.885,202,0.838,203,1.097,204,1.097,205,1.355,206,1.776,207,1.097,208,0.838,209,1.097,210,0.885,211,1.097,212,0.838,213,1.097,214,1.097,215,0.011,216,0.014,217,0.011,261,1.289,293,1.361,319,4.426,344,1.361,345,1.221,364,2.855,377,1.145,436,2.175,437,2.324,446,2.639,447,2.175,482,1.824,491,1.521,612,2.899,660,1.438,661,1.438,662,1.438,838,2.599,1050,2.074,1051,1.939,1053,1.939,1054,1.818,1055,2.599,1206,3.351,1243,4.18,1246,2.899,1254,2.899,1259,3.263,1264,3.23,1287,4.374,1585,2.627,1940,5.498,1941,3.263,1942,5.115,1943,5.77,1944,5.115,1945,5.77,1946,4.374,1947,4.654,1948,5.115,1949,5.115,1950,3.815,1951,3.815,1952,3.815,1953,3.815,1954,3.815,1955,3.263,1956,3.815,1957,3.815,1958,3.815,1959,3.815,1960,3.263,1961,3.815,1962,3.815,1963,3.815,1964,3.263]],["title/injectables/MailerService.html",[375,0.926,1947,2.467]],["body/injectables/MailerService.html",[3,0.264,4,0.23,9,0.23,20,2.429,25,0.23,26,0.632,34,0.897,39,0.791,43,0.527,45,0.897,46,0.021,47,0.536,48,0.386,49,0.897,54,0.743,67,1.183,68,1.183,72,0.791,78,0.705,79,0.608,83,1.249,84,0.264,85,0.014,99,2.19,215,0.014,216,0.017,217,0.014,258,2.285,361,1.681,375,1.59,376,2.59,377,1.227,380,1.12,465,2.635,1118,2.429,1139,2.771,1140,3.731,1142,3.345,1179,2.59,1946,5.261,1947,4.236,1965,4.359,1966,6.608,1967,6.153,1968,6.153,1969,5.098,1970,6.153,1971,5.098]],["title/components/NotFoundComponent.html",[0,0.234,208,0.787]],["body/components/NotFoundComponent.html",[0,0.426,1,1.02,2,1.53,3,0.227,4,0.198,5,1.359,6,1.657,7,1.265,8,1.265,9,0.198,12,2.371,14,1.451,15,1.875,17,1.265,18,2.044,19,1.795,21,1.614,23,1.53,25,0.198,34,0.818,37,1.976,39,0.96,41,1.02,43,0.448,46,0.021,47,0.489,54,0.641,55,1.375,78,0.452,79,0.524,84,0.227,85,0.012,96,1.205,97,1.686,102,1.375,105,1.077,134,3.864,135,4.257,136,3.864,150,2.234,174,1.137,175,1.614,176,1.53,177,1.265,178,1.873,179,1.265,180,1.265,181,0.966,182,1.265,183,0.914,184,1.265,185,0.966,186,1.614,187,0.966,188,1.614,189,1.02,190,1.935,191,1.02,192,1.265,193,1.02,194,0.966,195,1.265,196,0.966,197,1.265,198,1.02,199,1.215,200,0.966,201,1.02,202,0.966,203,1.265,204,1.265,205,0.966,206,1.137,207,1.265,208,1.431,209,1.265,210,1.02,211,1.265,212,0.966,213,1.265,214,1.265,215,0.012,216,0.016,217,0.012,314,4.257,869,2.39,870,1.971,959,3.864,962,3.545,1890,4.264,1972,5.287,1973,3.76,1974,5.613,1975,6.183,1976,5.613,1977,4.397,1978,4.397,1979,4.397,1980,4.397,1981,5.613,1982,5.613,1983,5.613,1984,5.613,1985,5.613,1986,5.613,1987,4.397,1988,4.397]],["title/interceptors/RefreshInterceptor.html",[233,2.263,1735,2.722]],["body/interceptors/RefreshInterceptor.html",[3,0.203,4,0.177,9,0.177,14,1.017,25,0.177,26,0.536,34,0.761,39,0.611,43,0.552,45,0.973,46,0.021,47,0.582,48,0.398,49,0.973,54,0.947,67,1.212,68,1.212,69,2.489,78,0.667,79,0.469,81,0.964,83,0.964,84,0.203,85,0.011,95,1.193,215,0.015,216,0.015,217,0.011,233,3.297,258,1.763,365,3.392,373,2.911,375,1.349,377,1.367,380,1.554,431,4.102,465,2.337,467,2.139,487,1.671,519,2.793,751,3.365,817,2.299,866,2.485,868,3.595,870,3.195,879,2.485,1179,1.999,1736,3.365,1737,5.32,1739,4.465,1740,2.709,1742,4.465,1743,5.556,1744,6.047,1746,2.709,1747,3.365,1748,4.465,1752,4.465,1840,4.465,1851,4.935,1861,3.365,1873,3.365,1892,3.967,1939,4.465,1989,3.365,1990,5.86,1991,5.86,1992,5.221,1993,5.221,1994,5.221,1995,3.935,1996,3.935,1997,5.221,1998,3.935,1999,5.221,2000,3.935,2001,5.221,2002,3.935,2003,5.221,2004,3.935,2005,3.935,2006,3.935,2007,3.935,2008,3.935,2009,3.935,2010,3.935,2011,6.242,2012,3.935,2013,3.935,2014,3.935,2015,3.935,2016,3.935,2017,3.935,2018,3.935,2019,3.935,2020,3.935,2021,3.935,2022,3.935,2023,3.935,2024,3.935]],["title/components/TemplateDetailDialog.html",[0,0.234,210,0.831]],["body/components/TemplateDetailDialog.html",[0,0.329,1,0.568,2,1.015,3,0.127,4,0.11,5,1.512,7,0.704,8,0.704,9,0.11,17,0.704,18,1.917,19,1.66,23,1.015,25,0.11,26,0.382,29,2.356,34,0.543,39,0.578,41,0.568,43,0.558,45,0.543,46,0.021,47,0.545,48,0.402,49,0.543,53,0.827,54,0.789,55,1.232,67,1.167,68,1.167,78,0.675,79,0.292,81,1.325,84,0.127,85,0.01,96,1.187,97,1.475,98,1.61,99,1.129,101,3.182,102,1.103,105,0.6,109,1.668,110,2.827,117,2.174,118,1.668,124,2.35,125,2.254,131,1.774,150,1.244,153,3.182,162,2.125,169,1.896,174,0.633,175,1.07,176,1.015,177,0.704,178,1.446,179,0.704,180,0.704,181,0.538,182,0.704,183,0.509,184,0.704,185,0.538,186,1.07,187,0.538,188,1.07,189,0.568,190,1.556,191,0.568,192,0.704,193,0.864,194,0.538,195,0.704,196,0.538,197,0.704,198,0.568,199,0.989,200,0.538,201,0.568,202,0.538,203,0.704,204,0.704,205,0.538,206,0.633,207,0.704,208,0.538,209,0.704,210,1.167,211,1.295,212,0.538,213,0.704,214,0.704,215,0.01,216,0.01,217,0.007,243,4.441,261,0.827,276,1.034,293,0.873,321,1.097,322,1.244,344,0.873,345,1.441,348,2.023,364,2.502,369,1.331,373,2.554,377,1.004,380,0.989,385,1.896,388,1.244,390,0.923,391,0.827,401,1.572,416,2.397,436,1.697,437,1.896,446,2.362,447,1.697,448,1.546,453,2.006,454,1.167,459,1.167,462,1.331,482,1.606,491,0.976,494,2.843,519,2.146,546,2.827,557,2.285,578,3.421,616,1.43,654,1.097,660,1.403,661,1.403,662,1.403,688,3.85,689,2.715,697,2.749,721,3.85,739,2.425,740,1.331,742,1.331,743,1.244,745,1.331,761,2.827,762,2.827,775,2.35,776,2.734,778,2.397,779,2.734,781,2.023,782,1.774,783,2.023,810,2.562,850,1.774,858,1.244,861,2.749,862,1.244,869,1.331,870,1.097,925,1.43,926,1.891,930,1.685,934,1.685,936,1.685,937,1.331,971,2.938,972,1.43,973,1.43,993,3.1,1047,2.562,1103,2.827,1181,4.627,1206,2.447,1216,4.301,1243,3.599,1254,1.86,1264,2.35,1291,2.63,1297,3.74,1303,4.301,1418,3.182,1576,2.093,1579,2.093,1584,3.182,1651,1.86,1679,1.86,1960,3.85,1964,2.093,2025,5.342,2026,2.093,2027,3.722,2028,4.502,2029,4.502,2030,5.065,2031,5.065,2032,3.85,2033,4.502,2034,4.502,2035,5.03,2036,3.722,2037,3.722,2038,2.448,2039,2.448,2040,2.448,2041,2.448,2042,3.722,2043,2.448,2044,2.448,2045,2.448,2046,4.502,2047,3.722,2048,2.448,2049,2.448,2050,2.448,2051,2.448,2052,2.448,2053,2.448,2054,2.448,2055,2.448,2056,2.448,2057,2.448,2058,2.448,2059,2.093,2060,2.093,2061,2.448,2062,2.448,2063,2.448,2064,5.03,2065,2.448,2066,3.85,2067,2.448,2068,2.448,2069,5.411,2070,3.722,2071,3.722,2072,3.722,2073,3.722,2074,2.448,2075,2.448,2076,2.448,2077,2.448,2078,2.448,2079,2.448,2080,2.448,2081,3.722,2082,3.722,2083,2.448,2084,2.448,2085,2.448,2086,2.448,2087,3.722,2088,2.448,2089,2.448,2090,2.448,2091,2.448,2092,3.722,2093,2.448,2094,2.448,2095,2.448,2096,2.448,2097,2.448,2098,2.448,2099,3.722,2100,2.448,2101,3.722,2102,3.722,2103,3.722,2104,2.448,2105,2.448,2106,3.722,2107,3.722,2108,3.722,2109,3.722,2110,3.722,2111,2.448,2112,2.448]],["title/components/TemplateListComponent.html",[0,0.234,212,0.787]],["body/components/TemplateListComponent.html",[0,0.331,1,0.695,2,1.178,3,0.155,4,0.135,5,1.541,6,1.129,7,0.861,8,0.861,9,0.135,14,1.117,15,1.538,17,0.861,18,1.966,19,1.718,21,1.243,23,1.178,25,0.135,26,0.444,29,1.911,34,0.63,37,1.684,39,0.671,41,0.695,43,0.546,45,0.63,46,0.021,47,0.564,48,0.385,49,0.63,54,0.809,55,1.442,67,1.177,68,1.177,69,2.521,72,0.787,78,0.665,79,0.357,81,1.059,84,0.155,85,0.008,95,2,96,1.107,97,1.724,99,1.311,100,4.472,102,1.059,105,0.734,109,1.342,116,1.427,125,1.937,131,1.427,139,2.646,142,1.194,145,1.427,162,2.67,163,1.265,169,1.911,174,0.774,175,1.243,176,1.178,177,0.861,178,1.596,179,0.861,180,0.861,181,0.658,182,0.861,183,0.623,184,0.861,185,0.658,186,1.243,187,0.658,188,1.243,189,0.695,190,1.693,191,0.695,192,0.861,193,0.695,194,0.658,195,0.861,196,0.658,197,0.861,198,0.695,199,0.997,200,0.658,201,0.695,202,0.658,203,0.861,204,0.861,205,0.658,206,0.774,207,0.861,208,0.658,209,0.861,210,1.003,211,0.861,212,1.22,213,0.861,214,0.861,215,0.008,216,0.012,217,0.008,243,4.366,244,2.561,272,2.062,276,1.265,287,1.628,289,1.628,345,1.623,373,1.937,377,0.556,389,1.243,393,0.817,468,1.826,482,2.308,487,1.776,531,2.416,551,2.73,654,1.937,670,2.821,678,2.73,689,2.646,697,2.991,739,2.273,776,1.628,778,2.06,779,2.349,781,1.628,782,1.427,783,1.628,784,1.628,787,2.962,788,2.525,792,2.962,794,2.962,796,2.962,803,3.243,825,2.976,849,2.962,850,2.06,851,2.525,854,2.962,855,2.525,859,1.628,874,3.243,908,1.75,915,2.962,917,1.75,923,2.525,1039,3.284,1045,3.284,1050,1.628,1051,1.522,1052,2.276,1053,1.522,1054,1.427,1055,2.196,1059,3.696,1060,2.276,1061,3.696,1062,2.561,1063,2.561,1064,2.062,1065,2.276,1257,3.696,1291,2.962,1297,3.993,1596,2.561,1606,3.852,1607,2.561,1609,2.561,1612,2.276,1614,2.276,1679,2.276,1955,3.696,2025,5.252,2030,3.696,2031,2.561,2032,4.747,2059,2.561,2060,2.561,2066,4.336,2113,5.071,2114,4.322,2115,5.551,2116,4.322,2117,4.322,2118,2.995,2119,2.995,2120,2.995,2121,2.995,2122,2.995,2123,2.995,2124,2.995,2125,6.472,2126,2.995,2127,2.995,2128,5.071,2129,4.322,2130,2.995,2131,2.995,2132,2.995,2133,4.322,2134,2.995]],["title/interfaces/Token.html",[692,1.82,1753,2.263]],["body/interfaces/Token.html",[3,0.291,4,0.254,9,0.254,25,0.254,26,0.67,46,0.02,48,0.381,72,1.133,84,0.291,215,0.016,216,0.018,217,0.016,361,1.377,692,3.312,1753,3.55,1755,4.271,1890,5.382,1892,5.382,2135,4.807]],["title/classes/User.html",[85,0.01,427,1.21]],["body/classes/User.html",[3,0.288,4,0.251,9,0.251,25,0.251,26,0.666,43,0.517,46,0.021,48,0.379,72,1.006,78,0.572,84,0.288,85,0.016,215,0.016,216,0.018,217,0.016,361,1.679,386,2.493,427,2.188,692,3.699,1759,4.72,1862,4.757,2136,4.757,2137,5.563,2138,5.563]],["title/coverage.html",[2139,4.192]],["body/coverage.html",[0,0.481,1,0.882,9,0.171,10,3.25,41,0.882,42,1.283,46,0.021,48,0.222,85,0.019,96,0.666,98,1.216,99,1.153,118,3.374,163,1.605,181,0.835,183,0.79,185,0.835,187,0.835,189,0.882,191,0.882,193,0.882,194,0.835,196,0.835,198,0.882,200,0.835,201,0.882,202,0.835,205,0.835,208,0.835,210,0.882,212,0.835,215,0.011,216,0.014,217,0.011,232,2.4,233,2.4,243,3.222,309,2.4,311,3.637,312,3.222,314,2.616,316,3.364,317,2.616,319,2.616,321,1.703,323,2.616,325,2.616,340,2.616,359,2.887,361,1.811,362,3.25,365,1.931,375,1.774,385,1.432,387,3.876,403,3.25,425,3.671,426,4.238,427,1.283,438,2.22,453,1.515,460,1.931,487,1.216,666,2.616,681,3.25,692,1.931,715,2.22,782,1.811,784,3.593,860,2.4,1119,3.25,1198,3.25,1211,3.876,1212,3.25,1233,2.616,1234,3.25,1240,3.25,1243,2.4,1265,3.25,1286,3.25,1291,2.22,1292,3.25,1297,2.4,1298,3.25,1329,3.25,1332,2.4,1336,2.616,1514,3.25,1520,3.25,1546,3.965,1636,4.878,1718,3.25,1735,3.876,1737,3.876,1738,3.25,1753,3.222,1754,2.616,1756,3.25,1757,3.25,1760,3.25,1761,3.25,1824,3.25,1926,3.25,1940,3.25,1941,3.25,1947,2.616,1965,3.25,1972,3.25,1973,3.25,1989,3.25,2025,3.876,2026,3.25,2135,3.25,2136,3.25,2139,3.25,2140,3.8,2141,3.8,2142,3.8,2143,6.61,2144,5.759,2145,5.101,2146,5.101,2147,3.8,2148,3.8,2149,3.8,2150,3.8,2151,3.8,2152,3.8,2153,3.8,2154,3.8,2155,3.8,2156,3.8,2157,3.8,2158,3.8,2159,3.8,2160,3.8,2161,3.8,2162,5.101,2163,5.759,2164,3.8,2165,3.8,2166,3.8,2167,3.8,2168,3.8,2169,3.8,2170,3.8,2171,3.8,2172,6.155,2173,3.8,2174,5.759,2175,5.759,2176,3.8,2177,4.362,2178,5.101,2179,6.753,2180,3.25,2181,3.8,2182,3.25,2183,4.362,2184,3.25,2185,4.362,2186,3.25,2187,3.25,2188,3.8]],["title/dependencies.html",[221,2.969,2189,2.986]],["body/dependencies.html",[46,0.021,79,0.64,83,1.316,215,0.015,216,0.018,217,0.015,221,3.699,240,2.921,242,4.595,249,5.429,250,4.824,261,1.815,283,3.451,284,3.451,285,2.921,307,4.595,308,4.082,344,1.916,464,3.139,2190,5.373,2191,7.35,2192,5.373,2193,6.758,2194,5.373,2195,5.373,2196,5.373,2197,6.758,2198,5.373,2199,5.373,2200,5.373,2201,5.373,2202,5.373,2203,5.373,2204,5.373]],["title/miscellaneous/functions.html",[2205,2.056,2206,3.688]],["body/miscellaneous/functions.html",[25,0.257,45,0.957,46,0.02,47,0.572,49,0.957,215,0.016,216,0.018,217,0.016,361,1.394,709,3.568,715,3.835,724,3.593,727,4.987,860,4.146,2177,4.865,2205,3.917,2206,4.865,2207,6.564,2208,5.689]],["title/index.html",[25,0.135,2209,2.986,2210,2.986]],["body/index.html",[0,0.435,4,0.233,19,1.266,46,0.017,47,0.451,215,0.014,216,0.017,217,0.014,236,3.019,308,5.05,487,1.654,584,3.926,592,5.05,594,3.926,597,3.264,709,2.809,736,2.809,1022,3.503,1039,3.926,2211,5.167,2212,6.203,2213,5.167,2214,6.647,2215,5.167,2216,5.167,2217,5.167,2218,6.203,2219,7.051,2220,7.24,2221,5.167,2222,5.167,2223,5.167,2224,5.167,2225,5.167,2226,5.167,2227,6.647,2228,5.167,2229,7.051,2230,5.167,2231,5.167,2232,5.167,2233,5.167,2234,5.167,2235,5.167,2236,4.419,2237,6.203,2238,6.203,2239,6.894,2240,5.167,2241,6.203,2242,6.203,2243,5.167,2244,5.167,2245,5.167,2246,5.167,2247,6.647,2248,5.167,2249,5.167]],["title/modules.html",[220,3.096]],["body/modules.html",[46,0.019,215,0.016,216,0.019,217,0.016,219,4.007,220,3.676,231,3.676,250,4.422,664,3.676,1456,4.977,2250,5.821,2251,6.651,2252,5.821]],["title/overview.html",[2253,4.192]],["body/overview.html",[1,1.642,2,1.262,41,1.469,42,2.138,46,0.021,120,2.075,174,1.196,181,1.391,183,1.316,185,1.391,187,1.391,189,1.469,191,1.469,193,1.469,194,1.391,196,1.391,198,1.469,200,1.391,201,1.469,202,1.391,205,1.391,208,1.391,210,1.469,212,1.391,215,0.013,216,0.016,217,0.013,218,3.187,219,5.268,220,2.924,221,3.187,222,3.959,223,3.959,224,2.516,225,3.517,226,3.959,227,3.959,228,3.959,229,3.959,230,3.959,231,3.999,232,3.999,233,3.999,234,4.958,235,3.959,236,2.704,342,3.187,359,3.517,386,2.075,533,3.152,1118,2.206,1468,3.959,1755,3.517,2253,3.959,2254,4.629,2255,4.629,2256,4.629]],["title/routes.html",[342,3.375]],["body/routes.html",[46,0.019,215,0.016,216,0.019,217,0.016,342,4.064]],["title/miscellaneous/variables.html",[2205,2.056,2257,3.688]],["body/miscellaneous/variables.html",[25,0.244,46,0.021,48,0.417,67,1.624,68,1.624,69,2.158,72,0.84,95,1.934,215,0.015,216,0.018,217,0.015,669,2.858,825,3.726,1243,4.027,2180,4.628,2182,4.628,2183,5.985,2184,4.628,2185,4.628,2186,5.452,2187,5.452,2205,3.726,2236,5.452,2257,4.628,2258,5.412,2259,6.376,2260,5.412,2261,5.412,2262,5.412,2263,5.412,2264,5.412]]],"invertedIndex":[["",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/TemplateDetailDialog.html":{},"coverage.html":{}}}],["0.10.2",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["0dd186",{"_index":1038,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["0e67ff",{"_index":1439,"title":{},"body":{"components/HomeComponent.html":{}}}],["0vh",{"_index":1411,"title":{},"body":{"components/HomeComponent.html":{}}}],["1",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"overview.html":{}}}],["1.10.0",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1443,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.5rem",{"_index":1497,"title":{},"body":{"components/HomeComponent.html":{}}}],["1.png",{"_index":1457,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/click.png",{"_index":1466,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/fill",{"_index":1470,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/goods.png",{"_index":1474,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/logistic",{"_index":1455,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/right",{"_index":1478,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/steps",{"_index":1462,"title":{},"body":{"components/HomeComponent.html":{}}}],["1/submit.png",{"_index":1476,"title":{},"body":{"components/HomeComponent.html":{}}}],["10",{"_index":1027,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["100",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1063,"title":{},"body":{"components/BookingListComponent.html":{},"components/TemplateListComponent.html":{}}}],["100vh",{"_index":1056,"title":{},"body":{"components/BookingListComponent.html":{}}}],["10b336",{"_index":1036,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["10px",{"_index":1429,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginFormComponent.html":{}}}],["10vh",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":1451,"title":{},"body":{"components/HomeComponent.html":{}}}],["11/16",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["11/21",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2256,"title":{},"body":{"overview.html":{}}}],["1200px",{"_index":917,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["14",{"_index":1467,"title":{},"body":{"components/HomeComponent.html":{}}}],["15",{"_index":1414,"title":{},"body":{"components/HomeComponent.html":{}}}],["150",{"_index":1440,"title":{},"body":{"components/HomeComponent.html":{}}}],["153",{"_index":1436,"title":{},"body":{"components/HomeComponent.html":{}}}],["15px",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ItemListComponent.html":{}}}],["166",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["169",{"_index":1435,"title":{},"body":{"components/HomeComponent.html":{}}}],["174",{"_index":1432,"title":{},"body":{"components/HomeComponent.html":{}}}],["183",{"_index":1433,"title":{},"body":{"components/HomeComponent.html":{}}}],["19",{"_index":2254,"title":{},"body":{"overview.html":{}}}],["19/28",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["2",{"_index":533,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["2.26.0",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":1413,"title":{},"body":{"components/HomeComponent.html":{}}}],["2.5vw",{"_index":1422,"title":{},"body":{"components/HomeComponent.html":{}}}],["2/2",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["2/fast.png",{"_index":1503,"title":{},"body":{"components/HomeComponent.html":{}}}],["2/organize.png",{"_index":1501,"title":{},"body":{"components/HomeComponent.html":{}}}],["2/simple.png",{"_index":1499,"title":{},"body":{"components/HomeComponent.html":{}}}],["20",{"_index":1064,"title":{},"body":{"components/BookingListComponent.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["20px",{"_index":1084,"title":{},"body":{"components/BookingListDialog.html":{},"components/ItemListComponent.html":{}}}],["25",{"_index":1446,"title":{},"body":{"components/HomeComponent.html":{}}}],["28",{"_index":1472,"title":{},"body":{"components/HomeComponent.html":{}}}],["29",{"_index":1417,"title":{},"body":{"components/HomeComponent.html":{}}}],["2px",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["2rem",{"_index":1487,"title":{},"body":{"components/HomeComponent.html":{}}}],["3",{"_index":1037,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{}}}],["3.6.0",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2171,"title":{},"body":{"coverage.html":{}}}],["3/appreciate.png",{"_index":1511,"title":{},"body":{"components/HomeComponent.html":{}}}],["30",{"_index":1418,"title":{},"body":{"components/HomeComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["30px",{"_index":1823,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["30vw",{"_index":1512,"title":{},"body":{"components/HomeComponent.html":{}}}],["33",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["3c78b5",{"_index":1034,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["3px",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":1033,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{}}}],["4/9",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1060,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["400",{"_index":1916,"title":{},"body":{"injectables/LoginService.html":{}}}],["401",{"_index":1917,"title":{},"body":{"injectables/LoginService.html":{}}}],["404",{"_index":1980,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["404the",{"_index":1988,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["40px",{"_index":1062,"title":{},"body":{"components/BookingListComponent.html":{},"components/TemplateListComponent.html":{}}}],["40vh",{"_index":1821,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["41",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":2147,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":2103,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["5",{"_index":1458,"title":{},"body":{"components/HomeComponent.html":{}}}],["5.1.0",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["5/12",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":780,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{}}}],["5000",{"_index":662,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["500px",{"_index":981,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["52",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["54a8ff",{"_index":1035,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["55",{"_index":1694,"title":{},"body":{"components/ItemListDialog.html":{}}}],["5s",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["6.5.4",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["6/13",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["6/17",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":913,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["62",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":2101,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["75",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1468,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["8.5",{"_index":1445,"title":{},"body":{"components/HomeComponent.html":{}}}],["80",{"_index":1065,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["800px",{"_index":2129,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["86",{"_index":2134,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["86400000",{"_index":1015,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["86400000).toisostring().substr(0",{"_index":1654,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["888888",{"_index":1449,"title":{},"body":{"components/HomeComponent.html":{}}}],["8][0",{"_index":523,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["9",{"_index":2255,"title":{},"body":{"overview.html":{}}}],["9.1.7",{"_index":2216,"title":{},"body":{"index.html":{}}}],["9.1.9",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["9/21",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["90vh",{"_index":1399,"title":{},"body":{"components/HomeComponent.html":{}}}],["9]{6})').test(control.value",{"_index":525,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["9]{6}|9[0",{"_index":524,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["9]{7}@u\\.nus\\.edu').test(control.value",{"_index":530,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["_(ツ)_",{"_index":1986,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["a::after",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["a::before",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["a:hover::after",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["a:hover::before",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["abstractcontrol",{"_index":449,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["abyss",{"_index":1984,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["acc",{"_index":578,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/TemplateDetailDialog.html":{}}}],["access",{"_index":1890,"title":{},"body":{"injectables/LoginService.html":{},"components/NotFoundComponent.html":{},"interfaces/Token.html":{}}}],["accessors",{"_index":1770,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/LoginService.html":{}}}],["accordingly",{"_index":1906,"title":{},"body":{"injectables/LoginService.html":{}}}],["action",{"_index":1230,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["actions",{"_index":732,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["activatedroute",{"_index":696,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/LoginFormComponent.html":{}}}],["activatedroutesnapshot",{"_index":368,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["ad1",{"_index":1489,"title":{},"body":{"components/HomeComponent.html":{}}}],["ad2",{"_index":1490,"title":{},"body":{"components/HomeComponent.html":{}}}],["ad3",{"_index":1491,"title":{},"body":{"components/HomeComponent.html":{}}}],["adapter",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"dependencies.html":{}}}],["add",{"_index":551,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/TemplateListComponent.html":{}}}],["addblankitem",{"_index":553,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["added",{"_index":1651,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["addhyphen",{"_index":860,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["addhyphen(code",{"_index":2208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addhyphen(this.sort.active",{"_index":891,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["adds",{"_index":549,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["admin",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["administrator",{"_index":1814,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["advantages",{"_index":1488,"title":{},"body":{"components/HomeComponent.html":{}}}],["afterviewinit",{"_index":786,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["again",{"_index":1924,"title":{},"body":{"injectables/LoginService.html":{}}}],["agree",{"_index":1367,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["allow",{"_index":583,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["always",{"_index":1376,"title":{},"body":{"components/HomeComponent.html":{}}}],["amount",{"_index":1099,"title":{},"body":{"components/BookingListDialog.html":{}}}],["amount_paid",{"_index":404,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["angular",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["angular/compiler",{"_index":2195,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{},"dependencies.html":{}}}],["angular/material",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["angular/material/datepicker",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["angular/material/form",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["angular/material/progress",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["angular/material/sort",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["angular/material/stepper",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["angular/material/tabs",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{},"dependencies.html":{}}}],["angularview",{"_index":2211,"title":{},"body":{"index.html":{}}}],["api",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["apikey",{"_index":1243,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"index.html":{}}}],["app.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":219,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciate",{"_index":1507,"title":{},"body":{"components/HomeComponent.html":{}}}],["appreciate_icon",{"_index":1510,"title":{},"body":{"components/HomeComponent.html":{}}}],["appreciation",{"_index":1504,"title":{},"body":{"components/HomeComponent.html":{}}}],["approutingmodule",{"_index":231,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":952,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["args",{"_index":995,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["around",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["array",{"_index":536,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["arrow.png",{"_index":1479,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrow1",{"_index":1477,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrow2",{"_index":1480,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrow3",{"_index":1481,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":2230,"title":{},"body":{"index.html":{}}}],["asyncvalidatorfn",{"_index":452,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["attachaccesstoken",{"_index":1828,"title":{},"body":{"injectables/LoginService.html":{}}}],["attachaccesstoken(request",{"_index":1837,"title":{},"body":{"injectables/LoginService.html":{}}}],["au",{"_index":1635,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["auth/jwt.interceptor",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt.interceptor.ts",{"_index":1738,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["auth/jwt.interceptor.ts:10",{"_index":1745,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["auth/jwt.interceptor.ts:7",{"_index":1741,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["auth/refresh.interceptor",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/refresh.interceptor.ts",{"_index":1989,"title":{},"body":{"interceptors/RefreshInterceptor.html":{},"coverage.html":{}}}],["auth/refresh.interceptor.ts:10",{"_index":2006,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:12",{"_index":1995,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:16",{"_index":1996,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:40",{"_index":2002,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:56",{"_index":2004,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:64",{"_index":1998,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:68",{"_index":2000,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["auth/refresh.interceptor.ts:9",{"_index":2005,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["authfailsubscription",{"_index":1764,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["authguard",{"_index":340,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authorization",{"_index":1749,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{}}}],["auto",{"_index":1695,"title":{},"body":{"components/ItemListDialog.html":{}}}],["automatically",{"_index":2224,"title":{},"body":{"index.html":{}}}],["availability",{"_index":1603,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["available",{"_index":664,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"interceptors/JwtInterceptor.html":{},"modules.html":{}}}],["back",{"_index":586,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["backend",{"_index":613,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"injectables/LoginService.html":{}}}],["background",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["bad",{"_index":1921,"title":{},"body":{"injectables/LoginService.html":{}}}],["bar",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["based",{"_index":483,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{}}}],["baseurl",{"_index":1521,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["baseurlbookeditems",{"_index":1120,"title":{},"body":{"injectables/BookingsService.html":{}}}],["baseurlbookings",{"_index":1121,"title":{},"body":{"injectables/BookingsService.html":{}}}],["baseurlbookingtoken",{"_index":1122,"title":{},"body":{"injectables/BookingsService.html":{}}}],["baseurltemplate",{"_index":1299,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["baseurltemplates",{"_index":1300,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["basis",{"_index":1513,"title":{},"body":{"components/HomeComponent.html":{}}}],["bchme1shvzqaiv20vldopiru78j82mtwz8bkj3464muxs0s5",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearer",{"_index":1881,"title":{},"body":{"injectables/LoginService.html":{}}}],["before",{"_index":746,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["behavior",{"_index":1401,"title":{},"body":{"components/HomeComponent.html":{}}}],["behaviorsubject",{"_index":1851,"title":{},"body":{"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{}}}],["behaviorsubject(false",{"_index":1936,"title":{},"body":{"components/LogoutComponent.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('currentuser",{"_index":1865,"title":{},"body":{"injectables/LoginService.html":{}}}],["behaviour",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/LoginFormComponent.html":{}}}],["below",{"_index":1394,"title":{},"body":{"components/HomeComponent.html":{}}}],["best",{"_index":1357,"title":{},"body":{"components/HomeComponent.html":{}}}],["better",{"_index":1397,"title":{},"body":{"components/HomeComponent.html":{}}}],["between",{"_index":1508,"title":{},"body":{"components/HomeComponent.html":{}}}],["body",{"_index":1398,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LoginService.html":{}}}],["bold",{"_index":1486,"title":{},"body":{"components/HomeComponent.html":{}}}],["bolder",{"_index":1421,"title":{},"body":{"components/HomeComponent.html":{}}}],["book",{"_index":1354,"title":{},"body":{"components/HomeComponent.html":{}}}],["booked",{"_index":543,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["booked_item.item.name",{"_index":771,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{}}}],["booked_item.quantity",{"_index":772,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{}}}],["booked_items",{"_index":914,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookeditem",{"_index":385,"title":{"classes/BookedItem.html":{}},"body":{"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"components/TemplateDetailDialog.html":{},"coverage.html":{}}}],["bookeditem.item.id",{"_index":545,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bookeditem.item.name",{"_index":2108,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["bookeditem.quantity",{"_index":546,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/TemplateDetailDialog.html":{}}}],["bookeditemdata",{"_index":910,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookeditems",{"_index":688,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["bookers",{"_index":1640,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["booking",{"_index":96,"title":{"classes/Booking.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["booking.deposit_left",{"_index":1049,"title":{},"body":{"components/BookingListComponent.html":{}}}],["booking.deposit_left|currency",{"_index":773,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["booking.email",{"_index":763,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["booking.id",{"_index":761,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["booking.loan_end_time",{"_index":2107,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["booking.loan_end_time|date",{"_index":769,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{}}}],["booking.loan_start_time",{"_index":2106,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["booking.loan_start_time|date",{"_index":767,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{}}}],["booking.name",{"_index":762,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["booking.organization",{"_index":764,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["booking.reason",{"_index":766,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["booking.time_booked|date",{"_index":1046,"title":{},"body":{"components/BookingListComponent.html":{}}}],["booking_source",{"_index":388,"title":{},"body":{"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"classes/Items.html":{},"components/TemplateDetailDialog.html":{}}}],["bookingconfirmationcomponent",{"_index":181,"title":{"components/BookingConfirmationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookingconfirmcomponent",{"_index":183,"title":{"components/BookingConfirmComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookingdata",{"_index":927,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookingdata.source.amount_paid",{"_index":1101,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.deposit_left",{"_index":1098,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.email",{"_index":1088,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.id",{"_index":1085,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.loan_end_time|date",{"_index":1097,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.loan_start_time|date",{"_index":1096,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.name",{"_index":1086,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.organization",{"_index":1087,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.phone_no",{"_index":1090,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.reason",{"_index":1095,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdata.source.time_booked|date",{"_index":1091,"title":{},"body":{"components/BookingListDialog.html":{}}}],["bookingdatacopy",{"_index":616,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/TemplateDetailDialog.html":{}}}],["bookingdatacopy).subscribe",{"_index":936,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["bookingdatacopy.amount_paid",{"_index":933,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookingdatacopy.deposit_left",{"_index":934,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["bookingdatacopy.id",{"_index":930,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["bookingdatacopy.loan_end_time",{"_index":626,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bookingdatacopy.loan_end_time.format('yyyy",{"_index":627,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bookingdatacopy.loan_start_time",{"_index":622,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bookingdatacopy.loan_start_time.format('yyyy",{"_index":623,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bookingdatacopy.status",{"_index":931,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookingdetailscomponent",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookingdialogopened",{"_index":789,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookinglistcomponent",{"_index":187,"title":{"components/BookingListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookinglistdialog",{"_index":189,"title":{"components/BookingListDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookingrecordedsubscription",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["bookings",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["bookings.booking_source.loan_end_time|date",{"_index":1704,"title":{},"body":{"components/ItemListDialog.html":{}}}],["bookings.booking_source.loan_start_time|date",{"_index":1703,"title":{},"body":{"components/ItemListDialog.html":{}}}],["bookings.booking_source.organization",{"_index":1702,"title":{},"body":{"components/ItemListDialog.html":{}}}],["bookings.quantity",{"_index":1705,"title":{},"body":{"components/ItemListDialog.html":{}}}],["bookings/bookings",{"_index":398,"title":{},"body":{"classes/BookedItem.html":{},"classes/Items.html":{}}}],["bookingservice",{"_index":993,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["bookingsservice",{"_index":453,"title":{"injectables/BookingsService.html":{}},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"coverage.html":{}}}],["bookingsservice.getbookingsbydaterange(startdate",{"_index":1016,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["bookingsubmitted",{"_index":479,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bookingsubmittedsubscription",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["bookingsummarydialog",{"_index":191,"title":{"components/BookingSummaryDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":373,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["bootstrap",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["both",{"_index":783,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["bother",{"_index":646,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["bottom",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["box",{"_index":1447,"title":{},"body":{"components/HomeComponent.html":{}}}],["bridgingservice",{"_index":1771,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/LoginService.html":{}}}],["broadcast",{"_index":837,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["broadcasted",{"_index":1658,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["broadcasts",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":2251,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2229,"title":{},"body":{"index.html":{}}}],["button",{"_index":552,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{}}}],["button1",{"_index":1442,"title":{},"body":{"components/HomeComponent.html":{}}}],["button2",{"_index":1444,"title":{},"body":{"components/HomeComponent.html":{}}}],["ca",{"_index":1010,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["calendar",{"_index":978,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["calendarevents",{"_index":1634,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["calendaroptions",{"_index":863,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["callback",{"_index":1001,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["called",{"_index":700,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["can't",{"_index":731,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["canactivate",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":367,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":1584,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["care",{"_index":1377,"title":{},"body":{"components/HomeComponent.html":{}}}],["carry",{"_index":667,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["case",{"_index":841,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["catcherror",{"_index":866,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["catcherror((error",{"_index":1873,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["catcherror(err",{"_index":2018,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["category",{"_index":400,"title":{},"body":{"classes/BookedItem.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{}}}],["ccc",{"_index":1428,"title":{},"body":{"components/HomeComponent.html":{}}}],["center",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["center;}whoops",{"_index":1987,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["change",{"_index":594,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"index.html":{}}}],["changed",{"_index":820,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["changes",{"_index":815,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{}}}],["check",{"_index":597,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["checkbox",{"_index":2028,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["checkeditems",{"_index":2029,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["checkforerrors",{"_index":606,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["checkforrepeat(formarray",{"_index":599,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["checkout",{"_index":562,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["checks",{"_index":511,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["choose",{"_index":946,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["circumvent",{"_index":989,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["class",{"_index":85,"title":{"classes/BookedItem.html":{},"classes/Booking.html":{},"classes/ConfirmationTemplate.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"classes/ExceedAmountValidator.html":{},"classes/Issue.html":{},"classes/Items.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":386,"title":{},"body":{"classes/BookedItem.html":{},"classes/Booking.html":{},"classes/ConfirmationTemplate.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"classes/ExceedAmountValidator.html":{},"classes/Issue.html":{},"classes/Items.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":776,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["cli",{"_index":2214,"title":{},"body":{"index.html":{}}}],["click",{"_index":678,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["clicked",{"_index":828,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["clicks",{"_index":1352,"title":{},"body":{"components/HomeComponent.html":{}}}],["client",{"_index":1901,"title":{},"body":{"injectables/LoginService.html":{}}}],["closed",{"_index":1657,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["closedialog",{"_index":1216,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["closedialog(result",{"_index":1218,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["closes",{"_index":1220,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["clues",{"_index":1911,"title":{},"body":{"injectables/LoginService.html":{}}}],["cluster_appmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":709,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/LoginService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["color",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{}}}],["color:1px",{"_index":1496,"title":{},"body":{"components/HomeComponent.html":{}}}],["color:rgb(33",{"_index":1416,"title":{},"body":{"components/HomeComponent.html":{}}}],["colour",{"_index":1029,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["column",{"_index":778,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["complete",{"_index":754,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":809,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["component_template",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["componentbridging.service",{"_index":1863,"title":{},"body":{"injectables/LoginService.html":{}}}],["componentbridgingservice",{"_index":42,"title":{"injectables/ComponentBridgingService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/ComponentBridgingService.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"overview.html":{}}}],["concern",{"_index":1387,"title":{},"body":{"components/HomeComponent.html":{}}}],["condition",{"_index":640,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["configuration",{"_index":1000,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["confirm",{"_index":433,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["confirm'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["confirm.component.html",{"_index":434,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["confirm_booking",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookingConfirmationComponent.html":{}}}],["confirmation",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["confirmation'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["confirmation.component",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirmation.component.html",{"_index":687,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.scss",{"_index":686,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":681,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:24",{"_index":711,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:25",{"_index":714,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:26",{"_index":713,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:27",{"_index":710,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:28",{"_index":698,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:34",{"_index":712,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:40",{"_index":705,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:59",{"_index":708,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:66",{"_index":706,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:73",{"_index":699,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation.component.ts:86",{"_index":701,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["confirmation/booking",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation_template",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["confirmationdialogcomponent",{"_index":193,"title":{"components/ConfirmationDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationmailform",{"_index":1244,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["confirmationtemplate",{"_index":1233,"title":{"classes/ConfirmationTemplate.html":{}},"body":{"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"coverage.html":{}}}],["confirmationtemplatecomponent",{"_index":194,"title":{"components/ConfirmationTemplateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationtemplateservice",{"_index":1247,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["confirmationtemplatesservice",{"_index":438,"title":{"injectables/ConfirmationTemplatesService.html":{}},"body":{"components/BookingConfirmComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"coverage.html":{}}}],["confirmbookingbytoken",{"_index":1123,"title":{},"body":{"injectables/BookingsService.html":{}}}],["confirmbookingbytoken(token",{"_index":1143,"title":{},"body":{"injectables/BookingsService.html":{}}}],["confirmdelete",{"_index":971,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["confirmed",{"_index":738,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["console.error",{"_index":1914,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.error('an",{"_index":1907,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log('after",{"_index":1887,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log('before",{"_index":1884,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log('error",{"_index":1620,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["console.log(data",{"_index":1619,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["console.log(err",{"_index":1962,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["console.log(loginservice.currentuservalue",{"_index":1794,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["console.log(this.currentuservalue",{"_index":1885,"title":{},"body":{"injectables/LoginService.html":{}}}],["const",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["constructor(bookingsservice",{"_index":804,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ItemListComponent.html":{}}}],["constructor(dialog",{"_index":1679,"title":{},"body":{"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["constructor(dialogref",{"_index":1110,"title":{},"body":{"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{}}}],["constructor(formbuilder",{"_index":1246,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/MailSenderComponent.html":{}}}],["constructor(http",{"_index":1139,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{}}}],["constructor(lc",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(loginservice",{"_index":1740,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{}}}],["constructor(private",{"_index":1179,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["constructor(route",{"_index":695,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["constructor(router",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{}}}],["contact",{"_index":1089,"title":{},"body":{"components/BookingListDialog.html":{}}}],["contain",{"_index":1054,"title":{},"body":{"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["container",{"_index":1050,"title":{},"body":{"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["contains",{"_index":683,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["content",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["contents",{"_index":591,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["context",{"_index":2186,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":515,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["control.value",{"_index":919,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["controlerrors",{"_index":607,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["correct",{"_index":512,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/LoginFormComponent.html":{}}}],["course",{"_index":1375,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":2139,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1553,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["create_or_update",{"_index":1245,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["create_or_update(data",{"_index":1249,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["createbookeditem",{"_index":1124,"title":{},"body":{"injectables/BookingsService.html":{}}}],["createbookeditem(item",{"_index":1145,"title":{},"body":{"injectables/BookingsService.html":{}}}],["createbooking",{"_index":1125,"title":{},"body":{"injectables/BookingsService.html":{}}}],["createbooking(booking",{"_index":1147,"title":{},"body":{"injectables/BookingsService.html":{}}}],["created",{"_index":1574,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["createexceedamountvalidator",{"_index":1327,"title":{},"body":{"classes/ExceedAmountValidator.html":{}}}],["createexceedamountvalidator(itemsservice",{"_index":671,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["createissue",{"_index":1522,"title":{},"body":{"injectables/IssueService.html":{}}}],["createissue(issue",{"_index":1529,"title":{},"body":{"injectables/IssueService.html":{}}}],["createitem",{"_index":1719,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createitem(item",{"_index":1724,"title":{},"body":{"injectables/ItemsService.html":{}}}],["createiteminputwithdata(bookeditem",{"_index":544,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["createtemplate",{"_index":1301,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["createtemplate(template",{"_index":1307,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["creating",{"_index":486,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["credentials",{"_index":1779,"title":{},"body":{"components/LoginFormComponent.html":{},"injectables/LoginService.html":{}}}],["credentials.username",{"_index":1870,"title":{},"body":{"injectables/LoginService.html":{}}}],["current",{"_index":561,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["currentitem",{"_index":577,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["currentitem.quantity",{"_index":580,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["currentuser",{"_index":378,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["currentuser.token",{"_index":1878,"title":{},"body":{"injectables/LoginService.html":{}}}],["currentuser.token.access",{"_index":1882,"title":{},"body":{"injectables/LoginService.html":{}}}],["currentuser.token.refresh",{"_index":1893,"title":{},"body":{"injectables/LoginService.html":{}}}],["currentuser.username",{"_index":1889,"title":{},"body":{"injectables/LoginService.html":{}}}],["currentusersubject",{"_index":1825,"title":{},"body":{"injectables/LoginService.html":{}}}],["currentuservalue",{"_index":1835,"title":{},"body":{"injectables/LoginService.html":{}}}],["cursor",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/LogoutComponent.html":{}}}],["d",{"_index":918,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["d.length",{"_index":921,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["d/m/yyyy",{"_index":768,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/ItemListDialog.html":{}}}],["darkblue",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["darkorange",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":482,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["data).subscribe",{"_index":1576,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["data.count",{"_index":884,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["data.email",{"_index":637,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["data.foreach((element",{"_index":538,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["data.id",{"_index":631,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["data.name",{"_index":636,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["data.remarks",{"_index":1571,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["data.remarks.length",{"_index":1570,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["data.results",{"_index":885,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["data[value].tolowercase().includes(filter[value].tolowercase",{"_index":1626,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["database",{"_index":665,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["date",{"_index":416,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["date(element.loan_end_time).gettime",{"_index":1024,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["date(events.booking_source.loan_end_time).gettime",{"_index":1653,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["date(new",{"_index":1023,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["date_range",{"_index":1040,"title":{},"body":{"components/BookingListComponent.html":{}}}],["dateadapter",{"_index":457,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["datecheck",{"_index":797,"title":{},"body":{"components/BookingListComponent.html":{}}}],["datecheck(control",{"_index":517,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["day",{"_index":1009,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["daygridplugin",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["daygridweek",{"_index":980,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["days",{"_index":753,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["dd",{"_index":625,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["dd/mm/yyyy",{"_index":1041,"title":{},"body":{"components/BookingListComponent.html":{}}}],["decides",{"_index":702,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["declarations",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":747,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["decoration",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["decorators",{"_index":850,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["decrease",{"_index":760,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":985,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["delete",{"_index":557,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["delete_booking",{"_index":693,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["delete_forever",{"_index":1103,"title":{},"body":{"components/BookingListDialog.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["deleteall",{"_index":1523,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["deleteallbookeditems",{"_index":1126,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deleteallbookings",{"_index":1127,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletealltemplates",{"_index":1302,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["deletebookeditem",{"_index":1128,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletebookeditem(id",{"_index":1151,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletebookeditemsbybooker",{"_index":1129,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletebookeditemsbybooker(id",{"_index":1153,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletebooking",{"_index":966,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{}}}],["deletebooking(id",{"_index":1155,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletebookingbytoken",{"_index":1130,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deletebookingbytoken(token",{"_index":1157,"title":{},"body":{"injectables/BookingsService.html":{}}}],["deleted",{"_index":745,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["deleteissue",{"_index":1524,"title":{},"body":{"injectables/IssueService.html":{}}}],["deleteissue(id",{"_index":1532,"title":{},"body":{"injectables/IssueService.html":{}}}],["deleteitem",{"_index":1664,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{}}}],["deleteitem(id",{"_index":1727,"title":{},"body":{"injectables/ItemsService.html":{}}}],["deleteitems",{"_index":1588,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["deletes",{"_index":965,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["deletetemplate",{"_index":1303,"title":{},"body":{"injectables/EmailTemplatesService.html":{},"components/TemplateDetailDialog.html":{}}}],["deletetemplate(id",{"_index":1310,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["deletion",{"_index":644,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["dependencies",{"_index":221,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":401,"title":{},"body":{"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"components/TemplateDetailDialog.html":{}}}],["deposit(s",{"_index":1672,"title":{},"body":{"components/ItemListComponent.html":{}}}],["deposit_left",{"_index":405,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["deps",{"_index":471,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{}}}],["desired",{"_index":1362,"title":{},"body":{"components/HomeComponent.html":{}}}],["desktop/laptop",{"_index":1359,"title":{},"body":{"components/HomeComponent.html":{}}}],["detail",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["detail.dialog",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/TemplateListComponent.html":{}}}],["detail.dialog.html",{"_index":2027,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts",{"_index":2026,"title":{},"body":{"components/TemplateDetailDialog.html":{},"coverage.html":{}}}],["detail.dialog.ts:105",{"_index":2041,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:109",{"_index":2038,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:113",{"_index":2040,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:120",{"_index":2039,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:20",{"_index":2058,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:22",{"_index":2053,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:23",{"_index":2052,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:24",{"_index":2054,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:25",{"_index":2045,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:26",{"_index":2056,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:27",{"_index":2057,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:29",{"_index":2048,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:30",{"_index":2049,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:31",{"_index":2044,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:33",{"_index":2037,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:36",{"_index":2050,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:39",{"_index":2051,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:40",{"_index":2055,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["detail.dialog.ts:75",{"_index":2043,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["details",{"_index":468,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/LoginService.html":{},"components/TemplateListComponent.html":{}}}],["details'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["details.component",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["details.component.html",{"_index":469,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{}}}],["details.component.scss",{"_index":470,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{}}}],["details.component.ts",{"_index":426,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:17",{"_index":1557,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1550,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1556,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1558,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.component.ts:278",{"_index":439,"title":{},"body":{"components/BookingConfirmComponent.html":{}}}],["details.component.ts:289",{"_index":440,"title":{},"body":{"components/BookingConfirmComponent.html":{}}}],["details.component.ts:298",{"_index":443,"title":{},"body":{"components/BookingConfirmComponent.html":{}}}],["details.component.ts:318",{"_index":1328,"title":{},"body":{"classes/ExceedAmountValidator.html":{}}}],["details.component.ts:32",{"_index":1554,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.component.ts:48",{"_index":1551,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.component.ts:59",{"_index":1555,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["details.ts",{"_index":1757,"title":{},"body":{"interfaces/LoginDetail.html":{},"coverage.html":{}}}],["details/booking",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"coverage.html":{}}}],["details/item",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"coverage.html":{}}}],["detailsform",{"_index":472,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["dev",{"_index":2222,"title":{},"body":{"index.html":{}}}],["development",{"_index":2217,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":689,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["dialog'},{'name",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["dialog.component",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["dialog.component.html",{"_index":1214,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1213,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1212,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:12",{"_index":1217,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1225,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":1226,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1224,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1219,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialog.html",{"_index":924,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["dialog/confirmation",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"coverage.html":{}}}],["dialogr",{"_index":972,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["dialogr.afterclosed().subscribe",{"_index":973,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["dialogref",{"_index":739,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":915,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":741,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["dialogrefs",{"_index":1661,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["dialogrefs.afterclosed().subscribe",{"_index":1662,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["dialogsource",{"_index":1215,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dialogsource}}are",{"_index":1232,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["dictionary",{"_index":463,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["direction",{"_index":1410,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginFormComponent.html":{}}}],["directive",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["directives",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2228,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2233,"title":{},"body":{"index.html":{}}}],["disappear",{"_index":1983,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["display",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["displaying",{"_index":785,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["dist",{"_index":2232,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["don't",{"_index":645,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["done",{"_index":775,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["duplicate",{"_index":598,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["duration",{"_index":661,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["dynamic",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":2244,"title":{},"body":{"index.html":{}}}],["each",{"_index":923,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["easy",{"_index":1351,"title":{},"body":{"components/HomeComponent.html":{}}}],["edit",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["edit/confirmed",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["editbooking",{"_index":976,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["edited",{"_index":1579,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["editformopened",{"_index":1639,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["editing",{"_index":485,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["editmode",{"_index":478,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["editormodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["ele",{"_index":2095,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["ele.booking_source.id",{"_index":956,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["ele.checked",{"_index":2082,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["ele.id",{"_index":675,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["ele.item.id",{"_index":957,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["ele.quantity",{"_index":958,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["ele.value.booking_source.id",{"_index":2085,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["ele.value.item.deposit",{"_index":2096,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["ele.value.item.id",{"_index":2086,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["ele.value.quantity",{"_index":2087,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["elegant",{"_index":1425,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["element.id",{"_index":570,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["element.item",{"_index":632,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["element.item)[0].quantity",{"_index":676,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["element.loan_start_time",{"_index":1021,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["element.name",{"_index":1019,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["element.quantity",{"_index":633,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["elementref",{"_index":1342,"title":{},"body":{"components/HomeComponent.html":{}}}],["elevation",{"_index":1818,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["email",{"_index":99,"title":{"classes/Email.html":{}},"body":{"components/AppComponent.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/Email.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["email.resend",{"_index":680,"title":{},"body":{"components/BookingConfirmComponent.html":{}}}],["emailcheck",{"_index":1335,"title":{},"body":{"components/HomeComponent.html":{}}}],["emailcheck(control",{"_index":528,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["emailtemplate",{"_index":1291,"title":{"classes/EmailTemplate.html":{}},"body":{"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["emailtemplates",{"_index":1320,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["emailtemplatesservice",{"_index":1297,"title":{"injectables/EmailTemplatesService.html":{}},"body":{"injectables/EmailTemplatesService.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["en",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["end",{"_index":1022,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"index.html":{}}}],["enddate",{"_index":1013,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["enddate).subscribe",{"_index":1017,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["ensure",{"_index":969,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/ComponentBridgingService.html":{}}}],["enter",{"_index":1042,"title":{},"body":{"components/BookingListComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{}}}],["environment",{"_index":2183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1259,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"components/MailSenderComponent.html":{}}}],["error",{"_index":605,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{}}}],["error.error",{"_index":1898,"title":{},"body":{"injectables/LoginService.html":{}}}],["error.error.message",{"_index":1908,"title":{},"body":{"injectables/LoginService.html":{}}}],["error.status",{"_index":1915,"title":{},"body":{"injectables/LoginService.html":{}}}],["errorevent",{"_index":1900,"title":{},"body":{"injectables/LoginService.html":{}}}],["errorstring",{"_index":1765,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["errorsubscription",{"_index":1766,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["event",{"_index":593,"title":{},"body":{"components/BookingConfirmComponent.html":{},"injectables/ComponentBridgingService.html":{},"classes/ExceedAmountValidator.html":{}}}],["event.selectedindex",{"_index":596,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["eventname",{"_index":1203,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["events",{"_index":983,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["events.booking_source.loan_start_time",{"_index":1648,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["events.booking_source.organization",{"_index":1646,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["events.quantity",{"_index":1647,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["everyone",{"_index":1373,"title":{},"body":{"components/HomeComponent.html":{}}}],["everything",{"_index":1386,"title":{},"body":{"components/HomeComponent.html":{}}}],["exceed",{"_index":609,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["exceedamountvalidator",{"_index":666,"title":{"classes/ExceedAmountValidator.html":{}},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"coverage.html":{}}}],["exceedamountvalidator.createexceedamountvalidator(this.itemsservice",{"_index":508,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["exceeds",{"_index":663,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["execute",{"_index":2241,"title":{},"body":{"index.html":{}}}],["exists",{"_index":647,"title":{},"body":{"components/BookingConfirmComponent.html":{},"injectables/ComponentBridgingService.html":{},"classes/ExceedAmountValidator.html":{}}}],["experience",{"_index":1358,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{}}}],["exports",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extract",{"_index":1650,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["eyes",{"_index":1378,"title":{},"body":{"components/HomeComponent.html":{}}}],["fab",{"_index":1676,"title":{},"body":{"components/ItemListComponent.html":{}}}],["facing",{"_index":1919,"title":{},"body":{"injectables/LoginService.html":{}}}],["fade",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["failed",{"_index":1775,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["failurecallback",{"_index":997,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["false",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateListComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1423,"title":{},"body":{"components/HomeComponent.html":{}}}],["fast",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["fastest",{"_index":1389,"title":{},"body":{"components/HomeComponent.html":{}}}],["fc",{"_index":1699,"title":{},"body":{"components/ItemListDialog.html":{}}}],["feature",{"_index":1927,"title":{},"body":{"components/LogoutComponent.html":{}}}],["fefefe",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["few",{"_index":752,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/HomeComponent.html":{}}}],["ffba00",{"_index":1452,"title":{},"body":{"components/HomeComponent.html":{}}}],["field",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{}}}],["files",{"_index":2225,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1364,"title":{},"body":{"components/HomeComponent.html":{}}}],["filled",{"_index":540,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["filter",{"_index":817,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"interceptors/RefreshInterceptor.html":{}}}],["filter(result",{"_index":2021,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["filterbookings",{"_index":1131,"title":{},"body":{"injectables/BookingsService.html":{}}}],["filterbookings(filterparams",{"_index":1159,"title":{},"body":{"injectables/BookingsService.html":{}}}],["filterform",{"_index":790,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["filterform.value.enddate",{"_index":899,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["filterform.value.fromdate",{"_index":895,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["filterparams",{"_index":893,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{}}}],["filterparams.enddate",{"_index":900,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["filterparams.enddate.format(\"yyyy",{"_index":901,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["filterparams.fromdate",{"_index":896,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["filterparams.fromdate.format(\"yyyy",{"_index":897,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["finaldata",{"_index":617,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["finaldata).subscribe",{"_index":643,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["finalitemdata",{"_index":630,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["fixed",{"_index":1677,"title":{},"body":{"components/ItemListComponent.html":{}}}],["flag",{"_index":2235,"title":{},"body":{"index.html":{}}}],["flex",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginFormComponent.html":{}}}],["float",{"_index":779,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["follow",{"_index":1363,"title":{},"body":{"components/HomeComponent.html":{}}}],["following",{"_index":749,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/HomeComponent.html":{}}}],["follows",{"_index":526,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["font",{"_index":1419,"title":{},"body":{"components/HomeComponent.html":{}}}],["force",{"_index":735,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["form",{"_index":441,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["form'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["form.component",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["form.component.html",{"_index":1763,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.scss",{"_index":1762,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts",{"_index":1761,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:18",{"_index":1789,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":1786,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:22",{"_index":1784,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:24",{"_index":1788,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:29",{"_index":1785,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:30",{"_index":1772,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":1774,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:53",{"_index":1773,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:61",{"_index":1791,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:69",{"_index":1781,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:76",{"_index":1778,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.png",{"_index":1471,"title":{},"body":{"components/HomeComponent.html":{}}}],["form/login",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["formarray",{"_index":450,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["formarray([this.newiteminput",{"_index":509,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["formarray(this.initialiteminput(history.state.booked_items",{"_index":506,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["formarray.value",{"_index":673,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["formarray.value.foreach((ele",{"_index":601,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["format",{"_index":513,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["formatdate",{"_index":864,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["formatdate(args.end",{"_index":1014,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["formatdate(args.start",{"_index":1012,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["formbuilder",{"_index":446,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["formcontrol",{"_index":1787,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formdialogopened",{"_index":1586,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["formgroup",{"_index":447,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["formsmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["forth",{"_index":587,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["found",{"_index":1974,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["found.component",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":1976,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1975,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1973,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:13",{"_index":1978,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:9",{"_index":1977,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["fromdate",{"_index":872,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["full",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/LoginFormComponent.html":{}}}],["fullcalendar",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["fullcalendar/angular",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"dependencies.html":{}}}],["fullcalendar/core",{"_index":464,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"dependencies.html":{}}}],["fullcalendar/daygrid",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["fullcalendarmodule",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["fullcalendarmodule.registerplugins",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2206,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":2246,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2227,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2213,"title":{},"body":{"index.html":{}}}],["getbookeditemlist",{"_index":1132,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookeditemsbybooker",{"_index":1133,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookeditemsbybooker(id",{"_index":1162,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookersbybookeditem",{"_index":1134,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookersbybookeditem(id",{"_index":1164,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookingbytoken",{"_index":1135,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookingbytoken(token",{"_index":1166,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookingsbydaterange",{"_index":1136,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getbookingsbydaterange(start",{"_index":1168,"title":{},"body":{"injectables/BookingsService.html":{}}}],["getcolour",{"_index":1107,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["getcolour(num",{"_index":1031,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["getconfirmationtemplate",{"_index":1269,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["getcurrentuservalue",{"_index":1859,"title":{},"body":{"injectables/LoginService.html":{}}}],["getdialogtitle",{"_index":1549,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["getfinaldeposit",{"_index":2035,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["getfinaldeposit()|currency",{"_index":2109,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["getform",{"_index":1790,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["getissue",{"_index":1525,"title":{},"body":{"injectables/IssueService.html":{}}}],["getissue(id",{"_index":1534,"title":{},"body":{"injectables/IssueService.html":{}}}],["getissuelist",{"_index":1526,"title":{},"body":{"injectables/IssueService.html":{}}}],["getitem",{"_index":1720,"title":{},"body":{"injectables/ItemsService.html":{}}}],["getitem(id",{"_index":1729,"title":{},"body":{"injectables/ItemsService.html":{}}}],["getiteminputform",{"_index":547,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["getitemslist",{"_index":1721,"title":{},"body":{"injectables/ItemsService.html":{}}}],["getlogistics",{"_index":960,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["getobservableuser",{"_index":1857,"title":{},"body":{"injectables/LoginService.html":{}}}],["getstatus",{"_index":715,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getstatus(code",{"_index":724,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"miscellaneous/functions.html":{}}}],["getstatus(status",{"_index":943,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["gettemplatebyid",{"_index":1304,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["gettemplatebyid(id",{"_index":1312,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["gettemplatelist",{"_index":1305,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["getting",{"_index":2209,"title":{"index.html":{}},"body":{}}],["gettotaldeposit",{"_index":574,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["geturl",{"_index":1266,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["gg",{"_index":733,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["given",{"_index":567,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["go",{"_index":2248,"title":{},"body":{"index.html":{}}}],["good",{"_index":1482,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":2252,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":359,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":1415,"title":{},"body":{"components/HomeComponent.html":{}}}],["h2",{"_index":1492,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginFormComponent.html":{}}}],["handle",{"_index":1905,"title":{},"body":{"injectables/LoginService.html":{}}}],["handleerror",{"_index":1829,"title":{},"body":{"injectables/LoginService.html":{}}}],["handleerror(error",{"_index":1839,"title":{},"body":{"injectables/LoginService.html":{}}}],["happened",{"_index":1922,"title":{},"body":{"injectables/LoginService.html":{}}}],["hate",{"_index":1382,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":1750,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["health",{"_index":1380,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["help",{"_index":2247,"title":{},"body":{"index.html":{}}}],["helper",{"_index":581,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["here",{"_index":729,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{}}}],["hh:mm",{"_index":898,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["hh:mm:ss",{"_index":1094,"title":{},"body":{"components/BookingListDialog.html":{}}}],["hidden",{"_index":1058,"title":{},"body":{"components/BookingListComponent.html":{},"components/HomeComponent.html":{}}}],["hide",{"_index":1767,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["hideprogressbar",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["hides",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["history.state.booked_items",{"_index":505,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.booking",{"_index":1955,"title":{},"body":{"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["history.state.booking.email",{"_index":1957,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["history.state.edit",{"_index":489,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.email",{"_index":653,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.id",{"_index":652,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source",{"_index":492,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.email",{"_index":495,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.loan_end_time",{"_index":503,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.loan_start_time",{"_index":501,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.name",{"_index":493,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.organization",{"_index":497,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.phone_no",{"_index":498,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.reason",{"_index":500,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.source.time_booked",{"_index":619,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.submitted",{"_index":649,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["history.state.template.subject",{"_index":1958,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["history.state.template.template",{"_index":1959,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["home",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["home.component.html",{"_index":1331,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1330,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":196,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepage",{"_index":1407,"title":{},"body":{"components/HomeComponent.html":{}}}],["html",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["http",{"_index":1142,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{}}}],["http://localhost:4200",{"_index":2223,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api/booked",{"_index":1174,"title":{},"body":{"injectables/BookingsService.html":{}}}],["http://localhost:8000/api/bookings",{"_index":1176,"title":{},"body":{"injectables/BookingsService.html":{}}}],["http://localhost:8000/api/bookings/token",{"_index":1178,"title":{},"body":{"injectables/BookingsService.html":{}}}],["http://localhost:8000/api/email_template",{"_index":1317,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["http://localhost:8000/api/email_templates",{"_index":1318,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["http://localhost:8000/api/get_confirmation",{"_index":1278,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["http://localhost:8000/api/issues",{"_index":1539,"title":{},"body":{"injectables/IssueService.html":{}}}],["http://localhost:8000/api/items",{"_index":1734,"title":{},"body":{"injectables/ItemsService.html":{}}}],["http://localhost:8000/api/resend_confirmation",{"_index":1282,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["http://localhost:8000/api/send_html_email",{"_index":1970,"title":{},"body":{"injectables/MailerService.html":{}}}],["http://localhost:8000/api/token",{"_index":1853,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://localhost:8000/api/token/refresh",{"_index":1855,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://localhost:8000/api/update_confirmation",{"_index":1280,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["http_interceptors",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":1140,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{}}}],["httpclientmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1840,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["httpevent",{"_index":1747,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["httphandler",{"_index":1744,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["httpinterceptor",{"_index":1748,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["httprequest",{"_index":1743,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["icon",{"_index":1454,"title":{},"body":{"components/HomeComponent.html":{}}}],["icon.png",{"_index":1463,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":389,"title":{},"body":{"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"classes/ConfirmationTemplate.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"components/TemplateListComponent.html":{}}}],["id)[0",{"_index":571,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["id:number",{"_index":1519,"title":{},"body":{"classes/Issue.html":{}}}],["identifier",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1051,"title":{},"body":{"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["img1",{"_index":1498,"title":{},"body":{"components/HomeComponent.html":{}}}],["img2",{"_index":1500,"title":{},"body":{"components/HomeComponent.html":{}}}],["img3",{"_index":1502,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateListComponent.html":{}}}],["import",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"classes/User.html":{}}}],["important",{"_index":1678,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["imports",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improve",{"_index":1393,"title":{},"body":{"components/HomeComponent.html":{}}}],["include",{"_index":1652,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["incorrect",{"_index":1804,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["incredibly",{"_index":1371,"title":{},"body":{"components/HomeComponent.html":{}}}],["indeed",{"_index":685,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{}}}],["initial",{"_index":542,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["initialiteminput(data",{"_index":537,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["initialized",{"_index":812,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["initializes",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["initialview",{"_index":979,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["inject",{"_index":858,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["inject(mat_dialog_data",{"_index":926,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["injectable",{"_index":375,"title":{"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":1118,"title":{},"body":{"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"overview.html":{}}}],["input",{"_index":516,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["inputgroup1",{"_index":475,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["inputgroup2",{"_index":476,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["inputted",{"_index":1793,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["instanceof",{"_index":1899,"title":{},"body":{"injectables/LoginService.html":{}}}],["integer",{"_index":1582,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["intention",{"_index":1552,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["intercept",{"_index":1739,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["intercept(request",{"_index":1742,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["interceptor",{"_index":1735,"title":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1736,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["interface",{"_index":1753,"title":{"interfaces/LoginDetail.html":{},"interfaces/Token.html":{}},"body":{"interfaces/LoginDetail.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["interfaces",{"_index":1755,"title":{},"body":{"interfaces/LoginDetail.html":{},"interfaces/Token.html":{},"overview.html":{}}}],["intuitive",{"_index":1372,"title":{},"body":{"components/HomeComponent.html":{}}}],["irreversible",{"_index":1231,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["isauthrequest",{"_index":1992,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["isauthrequest(request",{"_index":1997,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["isdialogopen",{"_index":2113,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["isedit",{"_index":2030,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["isedit||issendingemail)?'edit",{"_index":2104,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["isedit||issendingemail)?\\'edit",{"_index":2111,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["isloadingresults",{"_index":791,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["isnew",{"_index":2031,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["isrefreshing",{"_index":1990,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["isrefreshrequest",{"_index":1993,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["isrefreshrequest(request",{"_index":1999,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["issendingemail",{"_index":2032,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["issue",{"_index":1332,"title":{"classes/Issue.html":{}},"body":{"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"coverage.html":{}}}],["issueform",{"_index":1333,"title":{},"body":{"components/HomeComponent.html":{}}}],["issueservice",{"_index":1336,"title":{"injectables/IssueService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/IssueService.html":{},"coverage.html":{}}}],["item",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["item.category",{"_index":1670,"title":{},"body":{"components/ItemListComponent.html":{}}}],["item.deposit",{"_index":1673,"title":{},"body":{"components/ItemListComponent.html":{}}}],["item.id",{"_index":1668,"title":{},"body":{"components/ItemListComponent.html":{}}}],["item.item_status",{"_index":1674,"title":{},"body":{"components/ItemListComponent.html":{}}}],["item.name",{"_index":1669,"title":{},"body":{"components/ItemListComponent.html":{}}}],["item.quantity",{"_index":1671,"title":{},"body":{"components/ItemListComponent.html":{}}}],["item_status",{"_index":402,"title":{},"body":{"classes/BookedItem.html":{},"components/ItemDetailsComponent.html":{},"classes/Items.html":{}}}],["itemarray",{"_index":474,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemcolumns",{"_index":477,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemdata",{"_index":1547,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["itemdata.item.category",{"_index":1706,"title":{},"body":{"components/ItemListDialog.html":{}}}],["itemdata.item.deposit",{"_index":1708,"title":{},"body":{"components/ItemListDialog.html":{}}}],["itemdata.item.item_status",{"_index":1709,"title":{},"body":{"components/ItemListDialog.html":{}}}],["itemdata.item.name",{"_index":1701,"title":{},"body":{"components/ItemListDialog.html":{}}}],["itemdata.item.quantity",{"_index":1707,"title":{},"body":{"components/ItemListDialog.html":{}}}],["itemdata.item.remarks",{"_index":1710,"title":{},"body":{"components/ItemListDialog.html":{}}}],["itemdetailscomponent",{"_index":198,"title":{"components/ItemDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemdialogopened",{"_index":1587,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["itemdict",{"_index":600,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemdict[ele.item",{"_index":602,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemdict[key",{"_index":604,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemfilterpredicate",{"_index":1589,"title":{},"body":{"components/ItemListComponent.html":{}}}],["itemfilterpredicate(data",{"_index":1593,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["itemform",{"_index":1548,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["itemlistcomponent",{"_index":200,"title":{"components/ItemListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemlistdialog",{"_index":201,"title":{"components/ItemListDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["items",{"_index":98,"title":{"classes/Items.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{},"injectables/BookingsService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{},"coverage.html":{}}}],["items.filter(ele",{"_index":674,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemsform",{"_index":473,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["itemsservice",{"_index":460,"title":{"injectables/ItemsService.html":{}},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"coverage.html":{}}}],["itemsservice.getitemslist().pipe(map((items",{"_index":672,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["json.stringify(user",{"_index":1896,"title":{},"body":{"injectables/LoginService.html":{}}}],["justify",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["jwt",{"_index":1751,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["jwtinterceptor",{"_index":232,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["karma",{"_index":2243,"title":{},"body":{"index.html":{}}}],["key",{"_index":603,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["know",{"_index":1392,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":1082,"title":{},"body":{"components/BookingListDialog.html":{}}}],["large",{"_index":1450,"title":{},"body":{"components/HomeComponent.html":{}}}],["later",{"_index":1925,"title":{},"body":{"injectables/LoginService.html":{}}}],["lato",{"_index":1495,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["lazy",{"_index":1384,"title":{},"body":{"components/HomeComponent.html":{}}}],["lc",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["left",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["legend",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"overview.html":{}}}],["lifetime",{"_index":1390,"title":{},"body":{"components/HomeComponent.html":{}}}],["line",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["link",{"_index":684,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/ConfirmationTemplateComponent.html":{}}}],["link_string",{"_index":1235,"title":{},"body":{"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{}}}],["list",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["list'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["list.component",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":788,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["list.component.scss",{"_index":787,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["list.component.ts",{"_index":784,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["list.component.ts:105",{"_index":1598,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:114",{"_index":1597,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:117",{"_index":832,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:123",{"_index":1594,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:136",{"_index":1602,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:139",{"_index":819,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:148",{"_index":826,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:152",{"_index":1600,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:169",{"_index":829,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:17",{"_index":2124,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:174",{"_index":1685,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:179",{"_index":1686,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:18",{"_index":2123,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:186",{"_index":806,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:187",{"_index":1693,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:189",{"_index":1689,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:19",{"_index":2120,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:191",{"_index":1691,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:192",{"_index":1692,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:194",{"_index":1680,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:195",{"_index":822,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:197",{"_index":1687,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:198",{"_index":1688,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:202",{"_index":1690,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:203",{"_index":844,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListDialog.html":{}}}],["list.component.ts:209",{"_index":1683,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:218",{"_index":1068,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:22",{"_index":2121,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:221",{"_index":1080,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:222",{"_index":1081,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:223",{"_index":1079,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:231",{"_index":1684,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:232",{"_index":1078,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:246",{"_index":1682,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:249",{"_index":1073,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:25",{"_index":2122,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:257",{"_index":1681,"title":{},"body":{"components/ItemListDialog.html":{}}}],["list.component.ts:261",{"_index":1076,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:268",{"_index":1074,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:27",{"_index":2116,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:276",{"_index":1077,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:292",{"_index":1072,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:299",{"_index":1075,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:30",{"_index":2119,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list.component.ts:306",{"_index":1070,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:315",{"_index":1069,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:329",{"_index":1071,"title":{},"body":{"components/BookingListDialog.html":{}}}],["list.component.ts:356",{"_index":1116,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:36",{"_index":1607,"title":{},"body":{"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["list.component.ts:363",{"_index":1111,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:366",{"_index":1117,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:367",{"_index":1115,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:37",{"_index":1610,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:374",{"_index":1114,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:386",{"_index":1113,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:39",{"_index":1605,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:41",{"_index":846,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["list.component.ts:411",{"_index":1112,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["list.component.ts:42",{"_index":857,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["list.component.ts:44",{"_index":847,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["list.component.ts:45",{"_index":1609,"title":{},"body":{"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["list.component.ts:46",{"_index":845,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:47",{"_index":856,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["list.component.ts:49",{"_index":848,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:50",{"_index":853,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:52",{"_index":852,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["list.component.ts:53",{"_index":805,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:55",{"_index":1608,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:61",{"_index":1596,"title":{},"body":{"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["list.component.ts:66",{"_index":816,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:74",{"_index":1595,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:79",{"_index":807,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:81",{"_index":1591,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:89",{"_index":835,"title":{},"body":{"components/BookingListComponent.html":{}}}],["list.component.ts:94",{"_index":1604,"title":{},"body":{"components/ItemListComponent.html":{}}}],["list.component.ts:99",{"_index":2118,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["list/booking",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"coverage.html":{}}}],["list/item",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"coverage.html":{}}}],["list/template",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":825,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":808,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["loading",{"_index":836,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["loan",{"_index":1047,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["loan_end_time",{"_index":406,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["loan_start_time",{"_index":407,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["loaned",{"_index":959,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/NotFoundComponent.html":{}}}],["loaning",{"_index":1361,"title":{},"body":{"components/HomeComponent.html":{}}}],["locale",{"_index":982,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["localstorage.removeitem('currentuser",{"_index":1875,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.setitem('currentuser",{"_index":1895,"title":{},"body":{"injectables/LoginService.html":{}}}],["location.reload",{"_index":734,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["login",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["login(credentials",{"_index":1842,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.service",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginapiurl",{"_index":1826,"title":{},"body":{"injectables/LoginService.html":{}}}],["logindetail",{"_index":1754,"title":{"interfaces/LoginDetail.html":{}},"body":{"interfaces/LoginDetail.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginform",{"_index":1768,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loginformcomponent",{"_index":202,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":365,"title":{"injectables/LoginService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{},"coverage.html":{}}}],["loginstatus",{"_index":1930,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logistic",{"_index":1369,"title":{},"body":{"components/HomeComponent.html":{}}}],["logistics",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["logout",{"_index":1830,"title":{},"body":{"injectables/LoginService.html":{},"components/LogoutComponent.html":{}}}],["logout'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["logout.component.html",{"_index":1929,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout.component.scss",{"_index":1928,"title":{},"body":{"components/LogoutComponent.html":{}}}],["logout/logout.component",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["logout:hover",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["logoutcomponent",{"_index":41,"title":{"components/LogoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logs",{"_index":1777,"title":{},"body":{"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{}}}],["lol",{"_index":641,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["long",{"_index":1675,"title":{},"body":{"components/ItemListComponent.html":{}}}],["lora",{"_index":1424,"title":{},"body":{"components/HomeComponent.html":{}}}],["made",{"_index":682,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/HomeComponent.html":{}}}],["mail",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["mailer",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mailerservice",{"_index":1947,"title":{"injectables/MailerService.html":{}},"body":{"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["mailerurl",{"_index":1966,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailform",{"_index":1945,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["mailsendercomponent",{"_index":205,"title":{"components/MailSenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["main_caption",{"_index":1412,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["making",{"_index":1396,"title":{},"body":{"components/HomeComponent.html":{}}}],["management",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["mandatory",{"_index":1405,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":466,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"injectables/LoginService.html":{}}}],["map((receivedtoken",{"_index":1869,"title":{},"body":{"injectables/LoginService.html":{}}}],["map(data",{"_index":882,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["margin",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["margin:auto",{"_index":1822,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["mat",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["mat_date_formats",{"_index":458,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["mat_date_locale",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["mat_dialog_data",{"_index":862,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["mat_moment_date_formats",{"_index":455,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["matbuttonmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":697,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["matdialogmodule",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":861,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["matformfieldmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["math.min(200",{"_index":575,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["math.min(pagenumber",{"_index":906,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["maticonmodule",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["matmomentdatemodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":849,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["matpaginatormodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["matripplemodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":437,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["matsnackbarmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":854,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["matsortmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":1606,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["mattablemodule",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["matters",{"_index":728,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["mattoolbarmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1061,"title":{},"body":{"components/BookingListComponent.html":{},"components/TemplateListComponent.html":{}}}],["maximum",{"_index":759,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["media",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{}}}],["mental",{"_index":1379,"title":{},"body":{"components/HomeComponent.html":{}}}],["merge",{"_index":865,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["merge(this.sort.sortchange",{"_index":877,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["message",{"_index":838,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/Email.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{}}}],["messy",{"_index":1383,"title":{},"body":{"components/HomeComponent.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["method",{"_index":582,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["miscellaneous",{"_index":2205,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":624,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["mmm",{"_index":1092,"title":{},"body":{"components/BookingListDialog.html":{}}}],["mode",{"_index":1633,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["model",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["module",{"_index":218,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":220,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"dependencies.html":{}}}],["moment(control.value).isvalid",{"_index":518,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["moment(d).isvalid",{"_index":922,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["momentdateadapter",{"_index":456,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["month",{"_index":1008,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["more",{"_index":1039,"title":{},"body":{"components/BookingListComponent.html":{},"components/TemplateListComponent.html":{},"index.html":{}}}],["ms",{"_index":986,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["multi",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["myscrollcontainer",{"_index":1334,"title":{},"body":{"components/HomeComponent.html":{}}}],["n/a",{"_index":1572,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":584,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"index.html":{}}}],["navigates",{"_index":975,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["nbsp",{"_index":1583,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["network",{"_index":1903,"title":{},"body":{"injectables/LoginService.html":{}}}],["never",{"_index":1985,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["new",{"_index":487,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/ComponentBridgingService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"index.html":{}}}],["newiteminput",{"_index":532,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["newtoken",{"_index":1850,"title":{},"body":{"injectables/LoginService.html":{}}}],["newtoken.access",{"_index":1891,"title":{},"body":{"injectables/LoginService.html":{}}}],["next",{"_index":870,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"interceptors/JwtInterceptor.html":{},"components/LogoutComponent.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{}}}],["next.handle(request",{"_index":2007,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["next.handle(this.loginservice.attachaccesstoken(request",{"_index":1752,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{}}}],["ng",{"_index":2220,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":798,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["ngmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["ngoninit",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateListComponent.html":{}}}],["no.1",{"_index":1391,"title":{},"body":{"components/HomeComponent.html":{}}}],["none",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["normal",{"_index":1494,"title":{},"body":{"components/HomeComponent.html":{}}}],["notfoundcomponent",{"_index":208,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":1360,"title":{},"body":{"components/HomeComponent.html":{}}}],["null",{"_index":519,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{}}}],["num",{"_index":1030,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["number",{"_index":393,"title":{},"body":{"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"classes/ConfirmationTemplate.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"components/TemplateListComponent.html":{}}}],["numeric",{"_index":1007,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["nus",{"_index":527,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["nussu",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":669,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"classes/ExceedAmountValidator.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"components/LogoutComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign(bookingdatacopy",{"_index":618,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["object.assign(filterparams",{"_index":902,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["observable",{"_index":465,"title":{},"body":{"components/BookingConfirmComponent.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["observableuser",{"_index":1834,"title":{},"body":{"injectables/LoginService.html":{}}}],["obtain",{"_index":1792,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["occured",{"_index":887,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/LoginFormComponent.html":{}}}],["occurred",{"_index":1904,"title":{},"body":{"injectables/LoginService.html":{}}}],["ok",{"_index":660,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["on(eventname",{"_index":1201,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["once",{"_index":756,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/ItemDetailsComponent.html":{},"components/LoginFormComponent.html":{}}}],["onchanges",{"_index":1934,"title":{},"body":{"components/LogoutComponent.html":{}}}],["ondestroy",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["one",{"_index":748,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateListComponent.html":{}}}],["oninputpagechange",{"_index":799,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["oninputpagechange(pagenumber",{"_index":818,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["onsubmit",{"_index":614,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["opencreateform",{"_index":1590,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["opendetail",{"_index":2114,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["opendetail(row",{"_index":2117,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["opendialog",{"_index":800,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["opendialog(row",{"_index":824,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["openeditform",{"_index":1659,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["opennew",{"_index":2115,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["opens",{"_index":827,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["openweeklysummary",{"_index":801,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["option",{"_index":2110,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["optional",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1005,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["order",{"_index":727,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["ordering",{"_index":903,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["organization",{"_index":408,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListDialog.html":{}}}],["organize",{"_index":1381,"title":{},"body":{"components/HomeComponent.html":{}}}],["orgs",{"_index":1638,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["origin",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["oswald",{"_index":1493,"title":{},"body":{"components/HomeComponent.html":{}}}],["otherwise",{"_index":730,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["out",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/LogoutComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1057,"title":{},"body":{"components/BookingListComponent.html":{},"components/HomeComponent.html":{}}}],["overline",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":2253,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1430,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":2189,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1083,"title":{},"body":{"components/BookingListDialog.html":{},"components/HomeComponent.html":{}}}],["page",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["page_size",{"_index":904,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["pagenumber",{"_index":821,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["paginator",{"_index":792,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["paid",{"_index":1100,"title":{},"body":{"components/BookingListDialog.html":{}}}],["paragraph",{"_index":1427,"title":{},"body":{"components/HomeComponent.html":{}}}],["param",{"_index":514,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{}}}],["parameter",{"_index":814,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1181,"title":{},"body":{"injectables/BookingsService.html":{},"components/TemplateDetailDialog.html":{}}}],["params.booking.booked_items.foreach((ele",{"_index":2077,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["params.booking.source",{"_index":2074,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["params.isedit",{"_index":2065,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["params.isnew",{"_index":2063,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["params.issendingemail",{"_index":2067,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["params.template",{"_index":2070,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["params.token",{"_index":719,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["parent",{"_index":1223,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["parsed",{"_index":834,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["parsefilterform",{"_index":802,"title":{},"body":{"components/BookingListComponent.html":{}}}],["parsefilterform(filterform",{"_index":831,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["parses",{"_index":535,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["password",{"_index":1758,"title":{},"body":{"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{}}}],["path",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payable",{"_index":573,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["pen",{"_index":620,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["people",{"_index":1630,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["personal",{"_index":1365,"title":{},"body":{"components/HomeComponent.html":{}}}],["phone",{"_index":520,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["phone_no",{"_index":409,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["phonecheck(control",{"_index":521,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["pipe",{"_index":879,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["placeholder",{"_index":1263,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["please",{"_index":658,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"injectables/LoginService.html":{}}}],["plugins",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["pointer",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/LogoutComponent.html":{}}}],["position",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["positive",{"_index":1581,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["posturl",{"_index":1267,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["pre",{"_index":1697,"title":{},"body":{"components/ItemListDialog.html":{}}}],["presses",{"_index":550,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["pressing",{"_index":704,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["print",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["prints",{"_index":610,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["printsnackbarstatus",{"_index":1066,"title":{},"body":{"components/BookingListDialog.html":{}}}],["printsnackbarstatus(status",{"_index":940,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["priority",{"_index":1388,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":377,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["problem",{"_index":990,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["process",{"_index":833,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemDetailsComponent.html":{}}}],["processandemail",{"_index":947,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["processed",{"_index":757,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["processes",{"_index":944,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["processing",{"_index":750,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["prod",{"_index":2234,"title":{},"body":{"index.html":{}}}],["production",{"_index":2236,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["progressbarvisible",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["project",{"_index":2212,"title":{},"body":{"index.html":{}}}],["properly",{"_index":811,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{}}}],["protractor",{"_index":2245,"title":{},"body":{"index.html":{}}}],["provide",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["providedin",{"_index":376,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{}}}],["providers",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"overview.html":{}}}],["public",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["publish",{"_index":1200,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["publish(eventname",{"_index":1204,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["purges",{"_index":1592,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["purpose",{"_index":765,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{}}}],["put",{"_index":999,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["putevents",{"_index":1108,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["putevents(args",{"_index":1004,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["puteventscurry",{"_index":1109,"title":{},"body":{"components/BookingSummaryDialog.html":{}}}],["puteventscurry(bookingservice",{"_index":994,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["quantity",{"_index":390,"title":{},"body":{"classes/BookedItem.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"components/TemplateDetailDialog.html":{}}}],["querylist",{"_index":2046,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["queryparams",{"_index":382,"title":{},"body":{"guards/AuthGuard.html":{}}}],["quicksand",{"_index":1464,"title":{},"body":{"components/HomeComponent.html":{}}}],["reactiveformsmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":2249,"title":{},"body":{"index.html":{}}}],["really",{"_index":970,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["reason",{"_index":410,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["receive",{"_index":677,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{}}}],["received",{"_index":432,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["received.did",{"_index":679,"title":{},"body":{"components/BookingConfirmComponent.html":{}}}],["receivedtoken",{"_index":1871,"title":{},"body":{"injectables/LoginService.html":{}}}],["recipient",{"_index":1287,"title":{},"body":{"classes/Email.html":{},"components/MailSenderComponent.html":{}}}],["redirect",{"_index":945,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/LoginFormComponent.html":{}}}],["redirected",{"_index":429,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["redirectto",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refresh",{"_index":1892,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{},"interfaces/Token.html":{}}}],["refresh(request",{"_index":2001,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["refreshaccesstoken",{"_index":1831,"title":{},"body":{"injectables/LoginService.html":{}}}],["refreshapiurl",{"_index":1827,"title":{},"body":{"injectables/LoginService.html":{}}}],["refreshinterceptor",{"_index":233,"title":{"interceptors/RefreshInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/RefreshInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["refreshtokensubject",{"_index":1991,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["regexp('(8[1",{"_index":522,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["regexp('e[0",{"_index":529,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["register",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["rej",{"_index":2083,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["reload",{"_index":736,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"index.html":{}}}],["reloaddata",{"_index":803,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["reloads",{"_index":823,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["remarks",{"_index":399,"title":{},"body":{"classes/BookedItem.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{}}}],["remove",{"_index":1104,"title":{},"body":{"components/BookingListDialog.html":{},"components/ConfirmationDialogComponent.html":{}}}],["removeiteminput(i",{"_index":558,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["removes",{"_index":555,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["rendered",{"_index":987,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["repeat",{"_index":1055,"title":{},"body":{"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["report",{"_index":1505,"title":{},"body":{"components/HomeComponent.html":{}}}],["request",{"_index":431,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["request.clone",{"_index":1879,"title":{},"body":{"injectables/LoginService.html":{}}}],["request.url.includes('refresh",{"_index":2024,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["request.url.includes('token",{"_index":2023,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["require",{"_index":2187,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1580,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["rerenderdelay",{"_index":988,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["resend",{"_index":435,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["resendconfirmation",{"_index":1270,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["resendconfirmation(value",{"_index":1274,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["resends",{"_index":444,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["resendurl",{"_index":1268,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["resent",{"_index":657,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["reset",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responded",{"_index":690,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["response",{"_index":755,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/ConfirmationDialogComponent.html":{},"injectables/LoginService.html":{}}}],["result",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.event",{"_index":742,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["result.push(this.createiteminputwithdata(element",{"_index":539,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["results",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultslength",{"_index":793,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["retrieval",{"_index":1002,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["retrieve",{"_index":1106,"title":{},"body":{"components/BookingListDialog.html":{}}}],["return",{"_index":380,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{}}}],["returned",{"_index":962,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/LoginService.html":{},"components/NotFoundComponent.html":{}}}],["returnitemgivenid(id",{"_index":568,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["returnlogistics",{"_index":963,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["returns",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["returnstatusstring",{"_index":694,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{}}}],["returnstatusstring(booked_item.status",{"_index":774,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListDialog.html":{}}}],["returnstatusstring(booking.status",{"_index":770,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{}}}],["returnstatusstring(bookingdata.source.status",{"_index":1102,"title":{},"body":{"components/BookingListDialog.html":{}}}],["returnstatusstring(code",{"_index":707,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["returnurl",{"_index":383,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginFormComponent.html":{}}}],["revoke",{"_index":703,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["revokes",{"_index":951,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["rgb(165",{"_index":1431,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(211",{"_index":1434,"title":{},"body":{"components/HomeComponent.html":{}}}],["rgb(255",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["roboto",{"_index":1437,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/BookingsService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"injectables/ItemsService.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{}}}],["root'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["route",{"_index":372,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmationComponent.html":{},"components/LoginFormComponent.html":{}}}],["router",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["routermodule",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":370,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":342,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":531,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["row:after",{"_index":781,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["rows",{"_index":541,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["run",{"_index":2219,"title":{},"body":{"index.html":{}}}],["running",{"_index":2237,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"injectables/IssueService.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":467,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["s",{"_index":1048,"title":{},"body":{"components/BookingListComponent.html":{}}}],["s/n",{"_index":1045,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{},"components/TemplateListComponent.html":{}}}],["same",{"_index":588,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["sans",{"_index":1438,"title":{},"body":{"components/HomeComponent.html":{}}}],["saying",{"_index":430,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["scaffolding",{"_index":2226,"title":{},"body":{"index.html":{}}}],["scalex(0",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["scroll",{"_index":1400,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrollgrid",{"_index":1700,"title":{},"body":{"components/ItemListDialog.html":{}}}],["search",{"_index":1044,"title":{},"body":{"components/BookingListComponent.html":{},"components/ItemListComponent.html":{}}}],["sec1",{"_index":1409,"title":{},"body":{"components/HomeComponent.html":{}}}],["sec2",{"_index":1484,"title":{},"body":{"components/HomeComponent.html":{}}}],["sec3",{"_index":1506,"title":{},"body":{"components/HomeComponent.html":{}}}],["section",{"_index":1406,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectionchange(event",{"_index":595,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["send",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["send_data",{"_index":2036,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["send_data(data",{"_index":2042,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["send_email",{"_index":1946,"title":{},"body":{"components/MailSenderComponent.html":{},"injectables/MailerService.html":{}}}],["send_email(data",{"_index":1949,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["send_email(email",{"_index":1968,"title":{},"body":{"injectables/MailerService.html":{}}}],["sender",{"_index":1942,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["sender'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["sender.component",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sender.component.html",{"_index":1944,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["sender.component.scss",{"_index":1943,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["sender.component.ts",{"_index":1941,"title":{},"body":{"components/MailSenderComponent.html":{},"coverage.html":{}}}],["sender.component.ts:15",{"_index":1951,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["sender.component.ts:17",{"_index":1948,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["sender.component.ts:40",{"_index":1950,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["sender/mail",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MailSenderComponent.html":{},"coverage.html":{}}}],["sends",{"_index":1221,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["sent",{"_index":612,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/MailSenderComponent.html":{}}}],["serif",{"_index":1426,"title":{},"body":{"components/HomeComponent.html":{}}}],["serve",{"_index":2221,"title":{},"body":{"index.html":{}}}],["server",{"_index":2218,"title":{},"body":{"index.html":{}}}],["service",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["service/bookings/bookings",{"_index":462,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/TemplateDetailDialog.html":{}}}],["service/bookings/bookings.service",{"_index":454,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["service/bookings/bookings.service.ts",{"_index":1119,"title":{},"body":{"injectables/BookingsService.html":{},"coverage.html":{}}}],["service/bookings/bookings.service.ts:10",{"_index":1177,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:11",{"_index":1175,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:12",{"_index":1141,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:16",{"_index":1160,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:20",{"_index":1169,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:24",{"_index":1161,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:28",{"_index":1163,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:32",{"_index":1165,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:36",{"_index":1148,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:40",{"_index":1146,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:44",{"_index":1173,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:48",{"_index":1171,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:52",{"_index":1156,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:56",{"_index":1152,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:60",{"_index":1154,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:64",{"_index":1150,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:68",{"_index":1149,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:72",{"_index":1167,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:76",{"_index":1158,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.service.ts:80",{"_index":1144,"title":{},"body":{"injectables/BookingsService.html":{}}}],["service/bookings/bookings.ts",{"_index":403,"title":{},"body":{"classes/Booking.html":{},"coverage.html":{}}}],["service/bookings/bookings.ts:10",{"_index":417,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:11",{"_index":413,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:12",{"_index":412,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:13",{"_index":423,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:2",{"_index":415,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:3",{"_index":419,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:4",{"_index":414,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:5",{"_index":420,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:6",{"_index":421,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:7",{"_index":422,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:8",{"_index":424,"title":{},"body":{"classes/Booking.html":{}}}],["service/bookings/bookings.ts:9",{"_index":418,"title":{},"body":{"classes/Booking.html":{}}}],["service/componentbridging.service",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["service/componentbridging.service.ts",{"_index":1198,"title":{},"body":{"injectables/ComponentBridgingService.html":{},"coverage.html":{}}}],["service/componentbridging.service.ts:12",{"_index":1207,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["service/componentbridging.service.ts:14",{"_index":1205,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["service/componentbridging.service.ts:22",{"_index":1202,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["service/confirmationtemplates/confirmationtemplates",{"_index":1253,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service",{"_index":445,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts",{"_index":1265,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{},"coverage.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts:10",{"_index":1272,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts:14",{"_index":1273,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts:18",{"_index":1277,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts:22",{"_index":1275,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts:8",{"_index":1279,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["service/confirmationtemplates/confirmationtemplates.service.ts:9",{"_index":1281,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["service/confirmationtemplates/confirmationtemplates.ts",{"_index":1234,"title":{},"body":{"classes/ConfirmationTemplate.html":{},"coverage.html":{}}}],["service/confirmationtemplates/confirmationtemplates.ts:2",{"_index":1236,"title":{},"body":{"classes/ConfirmationTemplate.html":{}}}],["service/confirmationtemplates/confirmationtemplates.ts:3",{"_index":1237,"title":{},"body":{"classes/ConfirmationTemplate.html":{}}}],["service/confirmationtemplates/confirmationtemplates.ts:4",{"_index":1238,"title":{},"body":{"classes/ConfirmationTemplate.html":{}}}],["service/confirmationtemplates/confirmationtemplates.ts:5",{"_index":1239,"title":{},"body":{"classes/ConfirmationTemplate.html":{}}}],["service/emailtemplates/email",{"_index":1952,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["service/emailtemplates/email.ts",{"_index":1286,"title":{},"body":{"classes/Email.html":{},"coverage.html":{}}}],["service/emailtemplates/email.ts:2",{"_index":1289,"title":{},"body":{"classes/Email.html":{}}}],["service/emailtemplates/email.ts:3",{"_index":1290,"title":{},"body":{"classes/Email.html":{}}}],["service/emailtemplates/email.ts:4",{"_index":1288,"title":{},"body":{"classes/Email.html":{}}}],["service/emailtemplates/emailtemplates",{"_index":2060,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["service/emailtemplates/emailtemplates.service",{"_index":2059,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["service/emailtemplates/emailtemplates.service.ts",{"_index":1298,"title":{},"body":{"injectables/EmailTemplatesService.html":{},"coverage.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:11",{"_index":1319,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:12",{"_index":1306,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:17",{"_index":1314,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:21",{"_index":1313,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:25",{"_index":1308,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:29",{"_index":1316,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:33",{"_index":1311,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.service.ts:37",{"_index":1309,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["service/emailtemplates/emailtemplates.ts",{"_index":1292,"title":{},"body":{"classes/EmailTemplate.html":{},"coverage.html":{}}}],["service/emailtemplates/emailtemplates.ts:2",{"_index":1293,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["service/emailtemplates/emailtemplates.ts:3",{"_index":1294,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["service/emailtemplates/emailtemplates.ts:4",{"_index":1295,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["service/emailtemplates/emailtemplates.ts:5",{"_index":1296,"title":{},"body":{"classes/EmailTemplate.html":{}}}],["service/emailtemplates/mailer.service",{"_index":1953,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["service/emailtemplates/mailer.service.ts",{"_index":1965,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["service/emailtemplates/mailer.service.ts:10",{"_index":1967,"title":{},"body":{"injectables/MailerService.html":{}}}],["service/emailtemplates/mailer.service.ts:14",{"_index":1969,"title":{},"body":{"injectables/MailerService.html":{}}}],["service/issue/issue.service",{"_index":1345,"title":{},"body":{"components/HomeComponent.html":{}}}],["service/issue/issue.service.ts",{"_index":1520,"title":{},"body":{"injectables/IssueService.html":{},"coverage.html":{}}}],["service/issue/issue.service.ts:10",{"_index":1528,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.service.ts:14",{"_index":1536,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.service.ts:18",{"_index":1535,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.service.ts:22",{"_index":1530,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.service.ts:26",{"_index":1538,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.service.ts:30",{"_index":1533,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.service.ts:34",{"_index":1531,"title":{},"body":{"injectables/IssueService.html":{}}}],["service/issue/issue.ts",{"_index":1514,"title":{},"body":{"classes/Issue.html":{},"coverage.html":{}}}],["service/issue/issue.ts:2",{"_index":1516,"title":{},"body":{"classes/Issue.html":{}}}],["service/issue/issue.ts:3",{"_index":1518,"title":{},"body":{"classes/Issue.html":{}}}],["service/issue/issue.ts:4",{"_index":1515,"title":{},"body":{"classes/Issue.html":{}}}],["service/issue/issue.ts:5",{"_index":1517,"title":{},"body":{"classes/Issue.html":{}}}],["service/items/items",{"_index":459,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["service/items/items.service",{"_index":461,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["service/items/items.service.ts",{"_index":1718,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["service/items/items.service.ts:10",{"_index":1723,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.service.ts:14",{"_index":1731,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.service.ts:18",{"_index":1730,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.service.ts:22",{"_index":1725,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.service.ts:26",{"_index":1733,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.service.ts:30",{"_index":1728,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.service.ts:34",{"_index":1726,"title":{},"body":{"injectables/ItemsService.html":{}}}],["service/items/items.ts",{"_index":387,"title":{},"body":{"classes/BookedItem.html":{},"classes/Items.html":{},"coverage.html":{}}}],["service/items/items.ts:10",{"_index":1714,"title":{},"body":{"classes/Items.html":{}}}],["service/items/items.ts:14",{"_index":394,"title":{},"body":{"classes/BookedItem.html":{}}}],["service/items/items.ts:15",{"_index":392,"title":{},"body":{"classes/BookedItem.html":{}}}],["service/items/items.ts:16",{"_index":395,"title":{},"body":{"classes/BookedItem.html":{}}}],["service/items/items.ts:17",{"_index":396,"title":{},"body":{"classes/BookedItem.html":{}}}],["service/items/items.ts:18",{"_index":397,"title":{},"body":{"classes/BookedItem.html":{}}}],["service/items/items.ts:4",{"_index":1713,"title":{},"body":{"classes/Items.html":{}}}],["service/items/items.ts:5",{"_index":1715,"title":{},"body":{"classes/Items.html":{}}}],["service/items/items.ts:6",{"_index":1716,"title":{},"body":{"classes/Items.html":{}}}],["service/items/items.ts:7",{"_index":1717,"title":{},"body":{"classes/Items.html":{}}}],["service/items/items.ts:8",{"_index":1711,"title":{},"body":{"classes/Items.html":{}}}],["service/items/items.ts:9",{"_index":1712,"title":{},"body":{"classes/Items.html":{}}}],["service/statustranslator",{"_index":716,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["service/statustranslator.ts",{"_index":2177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/users/auth.guard",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["service/users/auth.guard.ts",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["service/users/auth.guard.ts:14",{"_index":371,"title":{},"body":{"guards/AuthGuard.html":{}}}],["service/users/auth.guard.ts:8",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{}}}],["service/users/login",{"_index":1756,"title":{},"body":{"interfaces/LoginDetail.html":{},"coverage.html":{}}}],["service/users/login.service",{"_index":1746,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{}}}],["service/users/login.service.ts",{"_index":1824,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["service/users/login.service.ts:100",{"_index":1847,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:105",{"_index":1841,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:15",{"_index":1854,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:16",{"_index":1856,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:18",{"_index":1852,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:19",{"_index":1836,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:30",{"_index":1843,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:45",{"_index":1844,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:51",{"_index":1838,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:64",{"_index":1845,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:81",{"_index":1849,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:92",{"_index":1858,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/login.service.ts:96",{"_index":1860,"title":{},"body":{"injectables/LoginService.html":{}}}],["service/users/tokens.ts",{"_index":2135,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["service/users/users.ts",{"_index":2136,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["service/users/users.ts:4",{"_index":2138,"title":{},"body":{"classes/User.html":{}}}],["service/users/users.ts:5",{"_index":2137,"title":{},"body":{"classes/User.html":{}}}],["services",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":1599,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["seterrorstring",{"_index":1769,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["seterrorstring(str",{"_index":1780,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["setheaders",{"_index":1880,"title":{},"body":{"injectables/LoginService.html":{}}}],["sets",{"_index":1782,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["settings",{"_index":1254,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["sg",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["shadow",{"_index":1448,"title":{},"body":{"components/HomeComponent.html":{}}}],["shown",{"_index":758,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["showprogressbar",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["shows",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["side",{"_index":1902,"title":{},"body":{"injectables/LoginService.html":{}}}],["simple",{"_index":1355,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":1053,"title":{},"body":{"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateListComponent.html":{}}}],["smooth",{"_index":1402,"title":{},"body":{"components/HomeComponent.html":{}}}],["snackbar",{"_index":436,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["snackbarstring",{"_index":1960,"title":{},"body":{"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["snap",{"_index":1403,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["someone",{"_index":1982,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["something",{"_index":1920,"title":{},"body":{"injectables/LoginService.html":{}}}],["sorry",{"_index":777,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["sort",{"_index":794,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["sortcriterion",{"_index":890,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["sorting",{"_index":813,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"components/NotFoundComponent.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"index.html":{}}}],["space",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/ItemListDialog.html":{}}}],["spec\\.ts",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specify",{"_index":1366,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.ts",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statustranslator.ts",{"_index":2207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":1737,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"interceptors/RefreshInterceptor.html":{},"coverage.html":{}}}],["src/app/app",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/booking",{"_index":425,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"coverage.html":{}}}],["src/app/confirmation",{"_index":1211,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1329,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:13",{"_index":1341,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1337,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":1339,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":1344,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:33",{"_index":1338,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:37",{"_index":1340,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/item",{"_index":1546,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1760,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/logout/logout.component.ts",{"_index":1926,"title":{},"body":{"components/LogoutComponent.html":{},"coverage.html":{}}}],["src/app/logout/logout.component.ts:14",{"_index":1931,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/logout/logout.component.ts:29",{"_index":1933,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/logout/logout.component.ts:36",{"_index":1932,"title":{},"body":{"components/LogoutComponent.html":{}}}],["src/app/mail",{"_index":1940,"title":{},"body":{"components/MailSenderComponent.html":{},"coverage.html":{}}}],["src/app/model",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"classes/ConfirmationTemplate.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interfaces/LoginDetail.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/not",{"_index":1972,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/settings.ts",{"_index":2180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/template",{"_index":2025,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":2182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1020,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["startdate",{"_index":1011,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["started",{"_index":2210,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":867,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["stat",{"_index":2081,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["state",{"_index":369,"title":{},"body":{"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/TemplateDetailDialog.html":{}}}],["state.url",{"_index":384,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":670,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["stating",{"_index":939,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["status",{"_index":391,"title":{},"body":{"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["stepicon1",{"_index":1465,"title":{},"body":{"components/HomeComponent.html":{}}}],["stepicon2",{"_index":1469,"title":{},"body":{"components/HomeComponent.html":{}}}],["stepicon3",{"_index":1473,"title":{},"body":{"components/HomeComponent.html":{}}}],["stepicon4",{"_index":1475,"title":{},"body":{"components/HomeComponent.html":{}}}],["stepper",{"_index":585,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["steps",{"_index":1356,"title":{},"body":{"components/HomeComponent.html":{}}}],["sticky",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":2231,"title":{},"body":{"index.html":{}}}],["storeuser",{"_index":1832,"title":{},"body":{"injectables/LoginService.html":{}}}],["storeuser(user",{"_index":1846,"title":{},"body":{"injectables/LoginService.html":{}}}],["str",{"_index":1783,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["string",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"injectables/MailerService.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateListComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateListComponent.html":{}}}],["subject",{"_index":1206,"title":{},"body":{"injectables/ComponentBridgingService.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["subjects",{"_index":1199,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["submit",{"_index":1264,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["submits",{"_index":428,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["submitted",{"_index":442,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["subscribe",{"_index":654,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["subscribe((status",{"_index":1812,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["subscribe(data",{"_index":888,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["subscription",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{}}}],["substr(0",{"_index":1026,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["substr(0,10",{"_index":1649,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["success",{"_index":655,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["successcallback",{"_index":996,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["successcallback(bookingdata.map((element",{"_index":1018,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["successful",{"_index":1003,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["successfully",{"_index":1776,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["suffix",{"_index":925,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["summary",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["summarydialogopened",{"_index":795,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["support",{"_index":2250,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1228,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/HomeComponent.html":{}}}],["svg",{"_index":1456,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["switch",{"_index":1032,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["switchmap",{"_index":868,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"interceptors/RefreshInterceptor.html":{}}}],["switchmap((state",{"_index":2016,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["system",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":782,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{}}}],["tablecolumns",{"_index":796,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["tablecolumns_dialog",{"_index":1637,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["tablecolumnsbookeditems",{"_index":691,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":751,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"interceptors/RefreshInterceptor.html":{}}}],["take(1",{"_index":2022,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["takes",{"_index":1353,"title":{},"body":{"components/HomeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["template':'new",{"_index":2105,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["template'},{'name",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["template.component",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["template.component.html",{"_index":1242,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["template.component.scss",{"_index":1241,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["template.component.ts",{"_index":1240,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"coverage.html":{}}}],["template.component.ts:15",{"_index":1252,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["template.component.ts:16",{"_index":1248,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["template.component.ts:40",{"_index":1251,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["template.component.ts:43",{"_index":1250,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["template.id",{"_index":1257,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{},"components/TemplateListComponent.html":{}}}],["template.name",{"_index":2133,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["template/confirmation",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationTemplateComponent.html":{},"coverage.html":{}}}],["template\\':\\'new",{"_index":2112,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["templatedetaildialog",{"_index":210,"title":{"components/TemplateDetailDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templatelistcomponent",{"_index":212,"title":{"components/TemplateListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateparams",{"_index":2033,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["templates",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/TemplateListComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["term",{"_index":1368,"title":{},"body":{"components/HomeComponent.html":{}}}],["test",{"_index":2240,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2239,"title":{},"body":{"index.html":{}}}],["text",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{}}}],["th",{"_index":556,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["thank",{"_index":1395,"title":{},"body":{"components/HomeComponent.html":{}}}],["thickness",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["things",{"_index":1483,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authfailsubscription",{"_index":1801,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.authfailsubscription.unsubscribe",{"_index":1806,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.bookeditems",{"_index":723,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.bookeditems.push(ele",{"_index":2078,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.bookers.data",{"_index":1641,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.bookers.paginator",{"_index":1643,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.bookers.sort",{"_index":1644,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.booking",{"_index":721,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["this.bookingdata",{"_index":950,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingdata.booked_items",{"_index":977,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingdata.booked_items.foreach((ele",{"_index":954,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingdata.source",{"_index":929,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingdata.source.id",{"_index":942,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingdata.source.status",{"_index":932,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingdialogopened",{"_index":911,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingrecordedsubscription",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.bookingrecordedsubscription.unsubscribe",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.bookings",{"_index":889,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingservice",{"_index":991,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingservice.updatebookeditem(ele.value.id",{"_index":2084,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.bookingservice.updatebooking(this.booking.id",{"_index":2089,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.bookingsservice.confirmbookingbytoken(this.token).subscribe",{"_index":725,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.bookingsservice.createbookeditem(finalitemdata).subscribe",{"_index":634,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.bookingsservice.createbooking(finaldata).subscribe",{"_index":628,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.bookingsservice.deletebookeditemsbybooker(data.id).subscribe",{"_index":648,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.bookingsservice.deletebooking(this.bookingdata.source.id).subscribe",{"_index":967,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingsservice.deletebookingbytoken(this.token).subscribe",{"_index":744,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.bookingsservice.filterbookings(this.parsefilterform(this.filterform",{"_index":881,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingsservice.getbookeditemsbybooker(booking.id).subscribe",{"_index":722,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.bookingsservice.getbookeditemsbybooker(row.id",{"_index":909,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingsservice.getbookersbybookeditem(row.id",{"_index":1627,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.bookingsservice.getbookingbytoken(this.token).subscribe",{"_index":720,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.bookingsservice.updatebookeditem(ele.id",{"_index":955,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingsservice.updatebooking(history.state.source.id",{"_index":642,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.bookingsservice.updatebooking(this.bookingdata.source.id",{"_index":935,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.bookingsubmittedsubscription",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.bookingsubmittedsubscription.unsubscribe",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.bridgingservice.on('authfail').subscribe",{"_index":1802,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.bridgingservice.on('error').subscribe",{"_index":1798,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.bridgingservice.publish('authfail",{"_index":1918,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.bridgingservice.publish('error",{"_index":1909,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.calendarevents",{"_index":1656,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.calendarevents.push",{"_index":1645,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.calendaroptions.events",{"_index":1655,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.checkbox",{"_index":2093,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.checkbox.foreach((ele",{"_index":2080,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.checkbox.reduce((acc",{"_index":2094,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.checkforrepeat",{"_index":507,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.checkout",{"_index":510,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.closedialog",{"_index":2092,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.confirmationmailform",{"_index":1255,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["this.confirmationmailform.setvalue(template",{"_index":1258,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["this.confirmationtemplateservice.getconfirmationtemplate",{"_index":1256,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["this.confirmationtemplateservice.updatetemplate(data).subscribe",{"_index":1260,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["this.confirmationtemplatesservice.resendconfirmation",{"_index":651,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.currentuser",{"_index":1866,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentusersubject",{"_index":1864,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentusersubject.asobservable",{"_index":1867,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentusersubject.next",{"_index":1888,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentusersubject.next(null",{"_index":1876,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentusersubject.next(user",{"_index":1897,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentusersubject.value",{"_index":1894,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.currentuservalue",{"_index":1877,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.datecheck",{"_index":502,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.deletebooking",{"_index":974,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.deleteitem",{"_index":1667,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.deletetemplate",{"_index":2100,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.detailsform",{"_index":490,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.detailsform.value",{"_index":564,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.dialog.open",{"_index":912,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.dialog.open(confirmationdialogcomponent",{"_index":740,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["this.dialog.open(itemdetailscomponent",{"_index":1632,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.dialog.open(itemlistdialog",{"_index":1629,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.dialog.open(templatedetaildialog",{"_index":2128,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.dialogref.close",{"_index":937,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["this.dialogref.close({event",{"_index":1227,"title":{},"body":{"components/ConfirmationDialogComponent.html":{}}}],["this.editformopened",{"_index":1660,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.editmode",{"_index":488,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.emailcheck",{"_index":496,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["this.emailtemplatesservice.createtemplate(data).subscribe",{"_index":2091,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.emailtemplatesservice.deletetemplate(this.template.id).subscribe",{"_index":2097,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.emailtemplatesservice.gettemplatebyid(row.id",{"_index":2130,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.emailtemplatesservice.gettemplatelist",{"_index":2131,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.emailtemplatesservice.updatetemplate(this.template.id",{"_index":2079,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.errorstring",{"_index":1808,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.errorsubscription",{"_index":1797,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.errorsubscription.unsubscribe",{"_index":1805,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.filterform",{"_index":871,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.filterform.value",{"_index":894,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.form.password.value",{"_index":1811,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.username.value",{"_index":1810,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.formbuilder.group",{"_index":491,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["this.formdialogopened",{"_index":1631,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.getcolour(element.id",{"_index":1028,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.getfinaldeposit",{"_index":2088,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.getiteminputform().push(this.newiteminput",{"_index":554,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.getiteminputform().removeat(i",{"_index":559,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.gettotaldeposit",{"_index":621,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.handleerror(error",{"_index":1874,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.hideprogressbar",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http.delete(`${this.baseurl",{"_index":1545,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["this.http.delete(`${this.baseurlbookeditems",{"_index":1194,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.delete(`${this.baseurlbookeditems}/${id",{"_index":1191,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.delete(`${this.baseurlbookeditems}/booking_source_id/${id",{"_index":1192,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.delete(`${this.baseurlbookings",{"_index":1193,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.delete(`${this.baseurlbookings}/${id",{"_index":1190,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.delete(`${this.baseurlbookingtoken}/${token",{"_index":1196,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.delete(`${this.baseurltemplates",{"_index":1326,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["this.http.delete(`${this.baseurltemplate}/${id",{"_index":1325,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["this.http.delete(`${this.baseurl}/${id",{"_index":1544,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["this.http.get(`${this.baseurl",{"_index":1540,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["this.http.get(`${this.baseurlbookeditems",{"_index":1183,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.get(`${this.baseurlbookeditems}/booking_source_id/${id",{"_index":1184,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.get(`${this.baseurlbookeditems}/item_id/${id",{"_index":1185,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.get(`${this.baseurlbookings",{"_index":1180,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.get(`${this.baseurlbookings}/week",{"_index":1182,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.get(`${this.baseurlbookingtoken}/${token",{"_index":1195,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.get(`${this.baseurltemplates",{"_index":1321,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["this.http.get(`${this.baseurltemplate}/${id",{"_index":1322,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["this.http.get(`${this.baseurl}/${id",{"_index":1541,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["this.http.get(`${this.geturl",{"_index":1283,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["this.http.patch(`${this.baseurlbookingtoken}/confirm/${token",{"_index":1197,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.post(`${this.baseurl",{"_index":1542,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["this.http.post(`${this.baseurlbookeditems",{"_index":1187,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.post(`${this.baseurlbookings}/edit",{"_index":1186,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.post(`${this.baseurltemplates",{"_index":1323,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["this.http.post(`${this.mailerurl",{"_index":1971,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.http.post(`${this.posturl",{"_index":1284,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["this.http.post(`${this.resendurl",{"_index":1285,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["this.http.post(this.loginapiurl",{"_index":1868,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.refreshapiurl",{"_index":1883,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.put(`${this.baseurlbookeditems}/${id",{"_index":1189,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.put(`${this.baseurlbookings}/${id",{"_index":1188,"title":{},"body":{"injectables/BookingsService.html":{}}}],["this.http.put(`${this.baseurltemplate}/${id",{"_index":1324,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["this.http.put(`${this.baseurl}/${id",{"_index":1543,"title":{},"body":{"injectables/IssueService.html":{},"injectables/ItemsService.html":{}}}],["this.inputgroup1",{"_index":563,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.inputgroup2",{"_index":565,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.inputgroup2.items.foreach(element",{"_index":629,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.inputgroup2.items.reduce((acc",{"_index":576,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.isauthrequest(request",{"_index":2008,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.isdialogopen",{"_index":2125,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.isedit",{"_index":2064,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.isloadingresults",{"_index":880,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.isnew",{"_index":2062,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.isrefreshing",{"_index":2011,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.isrefreshrequest(request",{"_index":2009,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.issendingemail",{"_index":2066,"title":{},"body":{"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["this.issueform",{"_index":1346,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issueform.reset",{"_index":1350,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issueform.value",{"_index":1347,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.issueservice.createissue(data).subscribe",{"_index":1348,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.item",{"_index":1559,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.item.category",{"_index":1563,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.item.deposit",{"_index":1565,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.item.item_status",{"_index":1566,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.item.name",{"_index":1562,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.item.quantity",{"_index":1564,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.item.remarks",{"_index":1567,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.itemarray",{"_index":481,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemarray.filter(element",{"_index":569,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemdata.item",{"_index":1560,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemdata.item.id",{"_index":1578,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemdata.mode",{"_index":1568,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.itemdata.people",{"_index":1642,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemdialogopened",{"_index":1628,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemfilterpredicate",{"_index":1624,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemform",{"_index":1561,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.itemform.value",{"_index":1569,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.items.data",{"_index":1622,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.items.filter",{"_index":1625,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.items.filterpredicate",{"_index":1623,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.items.paginator",{"_index":1611,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.items.sort",{"_index":1613,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemsform",{"_index":504,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemsform.get('items",{"_index":548,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemsform.get('items').errors",{"_index":608,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemsform.value",{"_index":566,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemsservice.createitem(data).subscribe",{"_index":1573,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.itemsservice.deleteall",{"_index":1618,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemsservice.deleteitem(this.itemdata.item.id).subscribe",{"_index":1665,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemsservice.getitemslist",{"_index":1621,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.itemsservice.getitemslist().subscribe((data",{"_index":480,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.itemsservice.updateitem(this.itemdata.item.id",{"_index":1575,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.loginform.controls",{"_index":1807,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginservice.currentuservalue",{"_index":379,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loginservice.login",{"_index":1809,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.loginservice.logout",{"_index":1939,"title":{},"body":{"components/LogoutComponent.html":{},"interceptors/RefreshInterceptor.html":{}}}],["this.loginservice.observableuser.subscribe",{"_index":1937,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.loginservice.refreshaccesstoken().pipe",{"_index":2015,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.loginstatus",{"_index":1935,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.loginstatus.next(user",{"_index":1938,"title":{},"body":{"components/LogoutComponent.html":{}}}],["this.mailerservice.send_email(data).subscribe",{"_index":1961,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["this.mailform",{"_index":1954,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["this.mailform.setvalue",{"_index":1956,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["this.paginator",{"_index":1612,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["this.paginator.getnumberofpages",{"_index":907,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.paginator.page",{"_index":878,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.paginator.pageindex",{"_index":876,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.paginator.pagesize",{"_index":905,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.phonecheck",{"_index":499,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.printsnackbarstatus(status",{"_index":938,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.progressbarvisible",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.putevents(args",{"_index":998,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.puteventscurry(this.bookingsservice",{"_index":984,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.refresh(request",{"_index":2014,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.refreshtokensubject.next(null",{"_index":2013,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.refreshtokensubject.next(state",{"_index":2017,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.refreshtokensubject.pipe",{"_index":2020,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["this.reloaddata",{"_index":874,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["this.responded",{"_index":726,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.resultslength",{"_index":883,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.returnitemgivenid(currentitem.item).deposit",{"_index":579,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.returnurl",{"_index":1795,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":717,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":1796,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.router.navigate",{"_index":1261,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["this.router.navigate(['/bookings",{"_index":1963,"title":{},"body":{"components/MailSenderComponent.html":{}}}],["this.router.navigate(['/edit",{"_index":650,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.router.navigate(['/edit/confirmed",{"_index":635,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.router.navigate(['/login",{"_index":381,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["this.router.navigate(['/mailer",{"_index":2090,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.router.navigate(['/templates",{"_index":949,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.router.navigate([this.returnurl",{"_index":1813,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.service.on('progressbaroff').subscribe",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.service.on('progressbaron').subscribe",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.service.on('reloaddata').subscribe",{"_index":1616,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.service.publish('progressbaroff",{"_index":638,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.service.publish('progressbaron",{"_index":615,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.service.publish('reloaddata",{"_index":1663,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.seterrorstring(\"an",{"_index":1799,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.seterrorstring(\"your",{"_index":1803,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.showprogressbar",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open",{"_index":941,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.snackbar.open(\"an",{"_index":886,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.snackbar.open('booking",{"_index":737,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.snackbar.open('email",{"_index":656,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["this.snackbar.open('item",{"_index":1577,"title":{},"body":{"components/ItemDetailsComponent.html":{}}}],["this.snackbar.open('new",{"_index":1349,"title":{},"body":{"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{}}}],["this.snackbar.open('updated",{"_index":1262,"title":{},"body":{"components/ConfirmationTemplateComponent.html":{}}}],["this.snackbar.open(`booking",{"_index":968,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.snackbar.open(`item",{"_index":1666,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.snackbar.open(`template",{"_index":2098,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.snackbar.open(snackbarstring",{"_index":1964,"title":{},"body":{"components/MailSenderComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["this.sort",{"_index":1614,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["this.sort.direction",{"_index":892,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.sort.sortchange.subscribe",{"_index":875,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.storeuser(user",{"_index":1872,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.subjects[eventname",{"_index":1208,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["this.subjects[eventname].asobservable",{"_index":1210,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["this.subjects[eventname].next",{"_index":1209,"title":{},"body":{"injectables/ComponentBridgingService.html":{}}}],["this.subscription",{"_index":1615,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.subscription.unsubscribe",{"_index":1617,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["this.summarydialogopened",{"_index":916,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.template",{"_index":2069,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.template.id",{"_index":2099,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.templateparams",{"_index":2071,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.templateparams.id",{"_index":2072,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.templates.data",{"_index":2132,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.templates.paginator",{"_index":2126,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.templates.sort",{"_index":2127,"title":{},"body":{"components/TemplateListComponent.html":{}}}],["this.token",{"_index":718,"title":{},"body":{"components/BookingConfirmationComponent.html":{}}}],["this.updateaccesstoken(receivedtoken",{"_index":1886,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.updateform",{"_index":2068,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.updateform.get('name').disable",{"_index":2075,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.updateform.get('subject').disable",{"_index":2076,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.updateform.setvalue(this.templateparams",{"_index":2073,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["this.updatestatus('get",{"_index":961,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.updatestatus('pen",{"_index":953,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.updatestatus('pro",{"_index":948,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.updatestatus('ret",{"_index":964,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["this.waitfortoken(request",{"_index":2012,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["throwerror",{"_index":1861,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{}}}],["throwerror(err",{"_index":2019,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["throwerror(error",{"_index":2010,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["time",{"_index":589,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["time_booked",{"_index":411,"title":{},"body":{"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["tinymce/tinymce",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["title",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["title2",{"_index":1485,"title":{},"body":{"components/HomeComponent.html":{}}}],["todate",{"_index":873,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["toisostring",{"_index":1025,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["token",{"_index":692,"title":{"interfaces/Token.html":{}},"body":{"components/BookingConfirmationComponent.html":{},"injectables/BookingsService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LoginService.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{}}}],["tokens",{"_index":1862,"title":{},"body":{"injectables/LoginService.html":{},"classes/User.html":{}}}],["toolbar",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/BookingListDialog.html":{},"components/HomeComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["total",{"_index":572,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["touchwood",{"_index":639,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["transform",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["transform:scalex(1",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["transition",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["true",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateListComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1923,"title":{},"body":{"injectables/LoginService.html":{}}}],["trying",{"_index":1981,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["tslib",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":869,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["turn",{"_index":839,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["turned",{"_index":842,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["tutorial_caption",{"_index":1460,"title":{},"body":{"components/HomeComponent.html":{}}}],["tutorial_icon",{"_index":1461,"title":{},"body":{"components/HomeComponent.html":{}}}],["tutorial_title",{"_index":1459,"title":{},"body":{"components/HomeComponent.html":{}}}],["tutorials",{"_index":1408,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/BookedItem.html":{},"classes/Booking.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"classes/ConfirmationTemplate.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"classes/Email.html":{},"classes/EmailTemplate.html":{},"injectables/EmailTemplatesService.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"classes/Issue.html":{},"injectables/IssueService.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"interfaces/Token.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":920,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["ul",{"_index":2102,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["undefined",{"_index":992,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["underline",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["understand",{"_index":1374,"title":{},"body":{"components/HomeComponent.html":{}}}],["undo",{"_index":1105,"title":{},"body":{"components/BookingListDialog.html":{}}}],["unit",{"_index":2238,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1800,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["unsubscribe",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginFormComponent.html":{}}}],["unsuccessful",{"_index":1910,"title":{},"body":{"injectables/LoginService.html":{}}}],["until",{"_index":840,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["updateaccesstoken",{"_index":1833,"title":{},"body":{"injectables/LoginService.html":{}}}],["updateaccesstoken(newtoken",{"_index":1848,"title":{},"body":{"injectables/LoginService.html":{}}}],["updatebookeditem",{"_index":1137,"title":{},"body":{"injectables/BookingsService.html":{}}}],["updatebookeditem(id",{"_index":1170,"title":{},"body":{"injectables/BookingsService.html":{}}}],["updatebooking",{"_index":1138,"title":{},"body":{"injectables/BookingsService.html":{}}}],["updatebooking(id",{"_index":1172,"title":{},"body":{"injectables/BookingsService.html":{}}}],["updated",{"_index":843,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["updateform",{"_index":2034,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["updateissue",{"_index":1527,"title":{},"body":{"injectables/IssueService.html":{}}}],["updateissue(id",{"_index":1537,"title":{},"body":{"injectables/IssueService.html":{}}}],["updateitem",{"_index":1722,"title":{},"body":{"injectables/ItemsService.html":{}}}],["updateitem(id",{"_index":1732,"title":{},"body":{"injectables/ItemsService.html":{}}}],["updates",{"_index":560,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{}}}],["updatestatus",{"_index":1067,"title":{},"body":{"components/BookingListDialog.html":{}}}],["updatestatus(status",{"_index":928,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["updatetemplate",{"_index":1271,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{}}}],["updatetemplate(id",{"_index":1315,"title":{},"body":{"injectables/EmailTemplatesService.html":{}}}],["updatetemplate(value",{"_index":1276,"title":{},"body":{"injectables/ConfirmationTemplatesService.html":{}}}],["updating",{"_index":590,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["uppercase",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["url(\"../../assets/blue.jpg",{"_index":1052,"title":{},"body":{"components/BookingListComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/TemplateListComponent.html":{}}}],["url(\"../../assets/homepage",{"_index":1453,"title":{},"body":{"components/HomeComponent.html":{}}}],["url(\"../../assets/orange.jpg",{"_index":1585,"title":{},"body":{"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/LoginFormComponent.html":{},"components/MailSenderComponent.html":{}}}],["use",{"_index":592,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"index.html":{}}}],["useclass",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["user",{"_index":427,"title":{"classes/User.html":{}},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user's",{"_index":1222,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/ItemDetailsComponent.html":{}}}],["user_button",{"_index":1441,"title":{},"body":{"components/HomeComponent.html":{}}}],["username",{"_index":1759,"title":{},"body":{"interfaces/LoginDetail.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"classes/User.html":{}}}],["users",{"_index":1601,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/LoginService.html":{}}}],["usevalue",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"components/BookingConfirmComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"classes/ExceedAmountValidator.html":{}}}],["valid",{"_index":1043,"title":{},"body":{"components/BookingListComponent.html":{},"components/HomeComponent.html":{},"components/LoginFormComponent.html":{}}}],["validation",{"_index":668,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["validationerrors",{"_index":451,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["validators",{"_index":448,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["validators.min(1",{"_index":534,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["validators.required",{"_index":494,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/TemplateDetailDialog.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/BookingsService.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationTemplateComponent.html":{},"injectables/ConfirmationTemplatesService.html":{},"injectables/EmailTemplatesService.html":{},"injectables/IssueService.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"injectables/ItemsService.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/MailSenderComponent.html":{},"injectables/MailerService.html":{},"interceptors/RefreshInterceptor.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["variable",{"_index":1636,"title":{},"body":{"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"coverage.html":{}}}],["variables",{"_index":2257,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2215,"title":{},"body":{"index.html":{}}}],["via",{"_index":2242,"title":{},"body":{"index.html":{}}}],["view",{"_index":810,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["viewchild",{"_index":859,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["viewchild('target",{"_index":1343,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(matpaginator",{"_index":851,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["viewchild(matsort",{"_index":855,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["viewchildren",{"_index":2061,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["viewchildren('checkbox",{"_index":2047,"title":{},"body":{"components/TemplateDetailDialog.html":{}}}],["visibility",{"_index":1816,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["visibility_off",{"_index":1815,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["void",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"injectables/ComponentBridgingService.html":{},"components/ConfirmationDialogComponent.html":{},"components/ConfirmationTemplateComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{},"components/ItemDetailsComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"injectables/LoginService.html":{},"components/LogoutComponent.html":{},"components/MailSenderComponent.html":{},"components/NotFoundComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["w",{"_index":1059,"title":{},"body":{"components/BookingListComponent.html":{},"components/TemplateListComponent.html":{}}}],["wait",{"_index":659,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/HomeComponent.html":{}}}],["waitfortoken",{"_index":1994,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["waitfortoken(request",{"_index":2003,"title":{},"body":{"interceptors/RefreshInterceptor.html":{}}}],["want",{"_index":1229,"title":{},"body":{"components/ConfirmationDialogComponent.html":{},"components/HomeComponent.html":{}}}],["website",{"_index":1370,"title":{},"body":{"components/HomeComponent.html":{}}}],["weekly",{"_index":830,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["weight",{"_index":1420,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":1912,"title":{},"body":{"injectables/LoginService.html":{}}}],["whether",{"_index":484,"title":{},"body":{"components/BookingConfirmComponent.html":{},"classes/ExceedAmountValidator.html":{},"components/ItemDetailsComponent.html":{}}}],["white",{"_index":1696,"title":{},"body":{"components/ItemListDialog.html":{}}}],["whoops",{"_index":1979,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["width",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/HomeComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/LoginFormComponent.html":{},"components/TemplateDetailDialog.html":{},"components/TemplateListComponent.html":{}}}],["width:100",{"_index":1817,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["width:300px",{"_index":1820,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["window.print",{"_index":611,"title":{},"body":{"components/BookingConfirmComponent.html":{},"components/BookingConfirmationComponent.html":{},"classes/ExceedAmountValidator.html":{}}}],["worry",{"_index":1385,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrap",{"_index":1698,"title":{},"body":{"components/ItemListDialog.html":{}}}],["wrong",{"_index":1913,"title":{},"body":{"injectables/LoginService.html":{}}}],["x",{"_index":908,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateListComponent.html":{}}}],["xx",{"_index":1509,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":1404,"title":{},"body":{"components/HomeComponent.html":{}}}],["year",{"_index":1006,"title":{},"body":{"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{}}}],["yes",{"_index":743,"title":{},"body":{"components/BookingConfirmationComponent.html":{},"components/BookingListComponent.html":{},"components/BookingListDialog.html":{},"components/BookingSummaryDialog.html":{},"components/ConfirmationDialogComponent.html":{},"components/ItemListComponent.html":{},"components/ItemListDialog.html":{},"components/TemplateDetailDialog.html":{}}}],["yyyy",{"_index":1093,"title":{},"body":{"components/BookingListDialog.html":{}}}],["z",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["z8",{"_index":1819,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["zone.js",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the page layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookingRecordedSubscription\n                            \n                            \n                                bookingSubmittedSubscription\n                            \n                            \n                                    Public\n                                lc\n                            \n                            \n                                progressBarVisible\n                            \n                            \n                                    Public\n                                service\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideProgressBar\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showProgressBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(lc: LogoutComponent, service: ComponentBridgingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lc\n                                                  \n                                                        \n                                                                        LogoutComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ComponentBridgingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideProgressBar\n                        \n                        \n                    \n                \n            \n            \n                \nhideProgressBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:51\n                \n            \n\n\n            \n                \n                    Hides the progress bar.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:36\n                \n            \n\n\n            \n                \n                    Unsubscribe from the broadcasts.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:28\n                \n            \n\n\n            \n                \n                    Initializes the behaviour of progress bar.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showProgressBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowProgressBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n                    Shows the progress bar.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookingRecordedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookingSubmittedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressBarVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentBridgingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'NUSSU Logistics Management System'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ComponentBridgingService } from './model-service/componentbridging.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Component for the page layout.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'NUSSU Logistics Management System';\n  progressBarVisible = false;\n  bookingSubmittedSubscription: Subscription;\n  bookingRecordedSubscription: Subscription;\n\n  constructor(\n    public lc: LogoutComponent,\n    public service: ComponentBridgingService\n  ) { }\n\n  /**\n   * Initializes the behaviour of progress bar.\n   */\n  ngOnInit(): void {\n    this.bookingSubmittedSubscription = this.service.on('progressBarOn').subscribe(() => this.showProgressBar());\n    this.bookingRecordedSubscription = this.service.on('progressBarOff').subscribe(() => this.hideProgressBar());\n  }\n\n  /**\n   * Unsubscribe from the broadcasts.\n   */\n  ngOnDestroy(): void {\n    this.bookingSubmittedSubscription.unsubscribe();\n    this.bookingRecordedSubscription.unsubscribe();\n  }\n\n  /**\n   * Shows the progress bar.\n   */\n  showProgressBar() {\n    this.progressBarVisible = true;\n  }\n\n  /**\n   * Hides the progress bar.\n   */\n  hideProgressBar() {\n    this.progressBarVisible = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        NUSSU Logistics Management System\n      \n      \n\n      \n        Booking List\n        Items\n        Email templates\n        Send email\n        Confirmation template\n        Make a Booking\n      \n\n      \n         Admin Login\n      \n\n      \n        \n      \n\n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @media print {\n    a,\n    app-logout:hover {\n        display: none;\n    }\n}\n\n.fast-fade {\n    transition: all 0.1s;\n}\n\n.sticky {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n}\n\n#main-title {\n    cursor: pointer;\n    margin-left: 15px;\n}\n\n.mat-toolbar {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    text-transform: uppercase;\n    background-color: #fefefe;\n    height: 10vh;\n    border-bottom: 1px #000 solid;\n    position: sticky;\n}\n\n.NUSSU {\n    text-decoration-line: underline overline;\n    text-decoration-style: solid;\n    text-decoration-color: rgb(255, 166, 0);\n    text-decoration-thickness: 3px;\n}\n\n\n.services a::before,\n.services a::after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 2px;\n    background-color: darkorange;\n    left: 0;\n    transform: scaleX(0);\n    transition: all .5s;\n}\n\n.services a::before {\n    top: 0;\n    transform-origin: left;\n}\n\n.services a::after {\n    bottom: 0;\n    transform-origin: right;\n}\n\n.services a:hover::before,\n.services a:hover::after{\n    transform:scaleX(1);\n    background-color: darkblue;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    NUSSU Logistics Management System                          Booking List        Items        Email templates        Send email        Confirmation template        Make a Booking                     Admin Login                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookingConfirmComponent\n\nBookingConfirmComponent\n\nAppModule -->\n\nBookingConfirmComponent->AppModule\n\n\n\n\n\nBookingConfirmationComponent\n\nBookingConfirmationComponent\n\nAppModule -->\n\nBookingConfirmationComponent->AppModule\n\n\n\n\n\nBookingDetailsComponent\n\nBookingDetailsComponent\n\nAppModule -->\n\nBookingDetailsComponent->AppModule\n\n\n\n\n\nBookingListComponent\n\nBookingListComponent\n\nAppModule -->\n\nBookingListComponent->AppModule\n\n\n\n\n\nBookingListDialog\n\nBookingListDialog\n\nAppModule -->\n\nBookingListDialog->AppModule\n\n\n\n\n\nBookingSummaryDialog\n\nBookingSummaryDialog\n\nAppModule -->\n\nBookingSummaryDialog->AppModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nAppModule -->\n\nConfirmationDialogComponent->AppModule\n\n\n\n\n\nConfirmationTemplateComponent\n\nConfirmationTemplateComponent\n\nAppModule -->\n\nConfirmationTemplateComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nItemDetailsComponent\n\nItemDetailsComponent\n\nAppModule -->\n\nItemDetailsComponent->AppModule\n\n\n\n\n\nItemListComponent\n\nItemListComponent\n\nAppModule -->\n\nItemListComponent->AppModule\n\n\n\n\n\nItemListDialog\n\nItemListDialog\n\nAppModule -->\n\nItemListDialog->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nMailSenderComponent\n\nMailSenderComponent\n\nAppModule -->\n\nMailSenderComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nTemplateDetailDialog\n\nTemplateDetailDialog\n\nAppModule -->\n\nTemplateDetailDialog->AppModule\n\n\n\n\n\nTemplateListComponent\n\nTemplateListComponent\n\nAppModule -->\n\nTemplateListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nComponentBridgingService\n\nComponentBridgingService\n\nAppModule -->\n\nComponentBridgingService->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nRefreshInterceptor\n\nRefreshInterceptor\n\nAppModule -->\n\nRefreshInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BookingConfirmComponent\n                        \n                        \n                            BookingConfirmationComponent\n                        \n                        \n                            BookingDetailsComponent\n                        \n                        \n                            BookingListComponent\n                        \n                        \n                            BookingListDialog\n                        \n                        \n                            BookingSummaryDialog\n                        \n                        \n                            ConfirmationDialogComponent\n                        \n                        \n                            ConfirmationTemplateComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            ItemDetailsComponent\n                        \n                        \n                            ItemListComponent\n                        \n                        \n                            ItemListDialog\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            LogoutComponent\n                        \n                        \n                            MailSenderComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            TemplateDetailDialog\n                        \n                        \n                            TemplateListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ComponentBridgingService\n                        \n                        \n                            JwtInterceptor\n                        \n                        \n                            RefreshInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FullCalendarModule } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n\nimport { TemplateDetailDialog } from './template-list/template-detail.dialog';\nimport { RefreshInterceptor } from './api-auth/refresh.interceptor';\nimport { JwtInterceptor } from './api-auth/jwt.interceptor';\nimport { ComponentBridgingService } from './model-service/componentbridging.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MAT_DATE_LOCALE, MatRippleModule } from '@angular/material/core';\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { EditorModule } from '@tinymce/tinymce-angular';\n\nimport { ItemDetailsComponent } from './item-details/item-details.component';\nimport { BookingDetailsComponent, BookingConfirmComponent } from './booking-details/booking-details.component';\nimport { ItemListComponent, ItemListDialog } from './item-list/item-list.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { BookingListComponent, BookingListDialog, BookingSummaryDialog } from './booking-list/booking-list.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { TemplateListComponent } from './template-list/template-list.component';\nimport { MailSenderComponent } from './mail-sender/mail-sender.component';\nimport { ConfirmationDialogComponent } from './confirmation-dialog/confirmation-dialog.component';\nimport { ConfirmationTemplateComponent } from './confirmation-template/confirmation-template.component';\nimport { BookingConfirmationComponent } from './booking-confirmation/booking-confirmation.component';\nimport { HomeComponent } from './home/home.component';\n\nFullCalendarModule.registerPlugins([ // register FullCalendar plugins\n  dayGridPlugin\n]);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemDetailsComponent,\n    BookingDetailsComponent,\n    ItemListComponent,\n    ItemListDialog,\n    NotFoundComponent,\n    BookingListComponent,\n    BookingListDialog,\n    BookingSummaryDialog,\n    LoginFormComponent,\n    LogoutComponent,\n    TemplateListComponent,\n    TemplateDetailDialog,\n    MailSenderComponent,\n    BookingConfirmComponent,\n    ConfirmationDialogComponent,\n    ConfirmationTemplateComponent,\n    BookingConfirmationComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatMomentDateModule,\n    MatPaginatorModule,\n    MatRippleModule,\n    MatSortModule,\n    MatCardModule,\n    MatSnackBarModule,\n    EditorModule,\n    MatSelectModule,\n    MatStepperModule,\n    MatListModule,\n    MatCheckboxModule,\n    MatTabsModule,\n    MatProgressBarModule,\n    FullCalendarModule,\n    EditorModule\n  ],\n  providers: [\n    { provide: MAT_DATE_LOCALE, useValue: 'en-SG' },\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: RefreshInterceptor, multi: true },\n    ComponentBridgingService,\n    LogoutComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { BookingConfirmationComponent } from './booking-confirmation/booking-confirmation.component';\nimport { ConfirmationTemplateComponent } from './confirmation-template/confirmation-template.component';\nimport { MailSenderComponent } from './mail-sender/mail-sender.component';\nimport { AuthGuard } from './model-service/users/auth.guard';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ItemListComponent } from './item-list/item-list.component';\nimport { BookingListComponent } from './booking-list/booking-list.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { TemplateListComponent } from './template-list/template-list.component';\nimport { BookingDetailsComponent, BookingConfirmComponent } from './booking-details/booking-details.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n    { path: 'home', component: HomeComponent },\n    { path: 'items', component: ItemListComponent },\n    { path: 'bookings', component: BookingListComponent, canActivate: [AuthGuard] },\n    { path: '', redirectTo: 'bookings', pathMatch: 'full', canActivate: [AuthGuard] },\n    { path: 'login', component: LoginFormComponent },\n    { path: 'confirmation_template', component: ConfirmationTemplateComponent, canActivate: [AuthGuard] },\n    { path: 'confirm_booking', component: BookingConfirmationComponent },\n    { path: 'templates', component: TemplateListComponent, canActivate: [AuthGuard] },\n    { path: 'mailer', component: MailSenderComponent, canActivate: [AuthGuard] },\n    { path: 'edit', component: BookingDetailsComponent},\n    { path: 'edit/confirmed', component: BookingConfirmComponent},\n    { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/model-service/users/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/users/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private loginService: LoginService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.loginService.currentUserValue;\n\n    if (currentUser) {\n        return true;\n    }\n\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookedItem.html":{"url":"classes/BookedItem.html","title":"class - BookedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/items/items.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                booking_source\n                            \n                            \n                                id\n                            \n                            \n                                item\n                            \n                            \n                                quantity\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            booking_source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Booking\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Items\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Booking } from '../bookings/bookings';\n\nexport class Items{\n    id: number;\n    name: string;\n    quantity: number;\n    remarks: string;\n    category: string;\n    deposit: number;\n    item_status: string;\n}\n\nexport class BookedItem {\n    id: number;\n    booking_source: Booking;\n    item: Items;\n    quantity: number;\n    status: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Booking.html":{"url":"classes/Booking.html","title":"class - Booking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/bookings/bookings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount_paid\n                            \n                            \n                                deposit_left\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                loan_end_time\n                            \n                            \n                                loan_start_time\n                            \n                            \n                                name\n                            \n                            \n                                organization\n                            \n                            \n                                phone_no\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                time_booked\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount_paid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deposit_left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loan_end_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loan_start_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone_no\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time_booked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Booking{\n    id: number;\n    name: string;\n    email: string;\n    organization: string;\n    phone_no: string;\n    reason: string;\n    time_booked: Date;\n    loan_start_time: Date;\n    loan_end_time: Date;\n    deposit_left: number;\n    amount_paid: number;\n    status: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingConfirmComponent.html":{"url":"components/BookingConfirmComponent.html","title":"component - BookingConfirmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookingConfirmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/booking-details/booking-details.component.ts\n\n\n    \n        Description\n    \n    \n        After the user submits a booking, the user will be redirected to a page saying that their booking request has been received.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-booking-confirm\n            \n\n\n\n\n            \n                templateUrl\n                ./booking-confirm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackbar: MatSnackBar, confirmationTemplatesService: ConfirmationTemplatesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking-details/booking-details.component.ts:278\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationTemplatesService\n                                                  \n                                                        \n                                                                        ConfirmationTemplatesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-details/booking-details.component.ts:289\n                \n            \n\n\n            \n                \n                    If the form is not submitted, the user will be redirected to the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resend\n                        \n                        \n                    \n                \n            \n            \n                \nresend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-details/booking-details.component.ts:298\n                \n            \n\n\n            \n                \n                    Resends the confirmation email.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationTemplatesService } from './../model-service/confirmationtemplates/confirmationtemplates.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormArray, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\nimport { BookingsService } from '../model-service/bookings/bookings.service';\n\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport moment from 'moment';\nimport { Items, BookedItem } from '../model-service/items/items';\nimport { ItemsService } from '../model-service/items/items.service';\nimport { Booking } from '../model-service/bookings/bookings';\nimport { Router } from '@angular/router';\nimport { Dictionary } from '@fullcalendar/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\n/**\n * Main component for the booking form.\n */\n@Component({\n  selector: 'app-booking-details',\n  templateUrl: './booking-details.component.html',\n  styleUrls: ['./booking-details.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\nexport class BookingDetailsComponent implements OnInit {\n\n  detailsForm: FormGroup;\n  itemsForm: FormGroup;\n\n  itemArray: Items[];\n\n  inputGroup1: any;\n  inputGroup2: any;\n\n  itemColumns = ['item', 'quantity'];\n\n  editMode: boolean;\n  bookingSubmitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private bookingsService: BookingsService,\n    private itemsService: ItemsService,\n    private service: ComponentBridgingService,\n    private router: Router\n  ) { this.itemsService.getItemsList().subscribe((data) => this.itemArray = data); }\n\n  /**\n   * Initializes the booking form based on whether the user is editing a booking or creating a new booking.\n   */\n  ngOnInit() {\n    this.editMode = history.state.edit ? true : false;\n\n    this.detailsForm = this.formBuilder.group({\n      name: [history.state.source ? history.state.source.name : '', Validators.required],\n      email: [history.state.source ? history.state.source.email : '', [Validators.required, this.emailCheck]],\n      organization: [history.state.source ? history.state.source.organization : '', Validators.required],\n      phone_no: [history.state.source ? history.state.source.phone_no : '', [Validators.required, this.phoneCheck]],\n      reason: [history.state.source ? history.state.source.reason : '', Validators.required],\n      loan_start_time: [history.state.source ? history.state.source.loan_start_time : '', [Validators.required, this.dateCheck]],\n      loan_end_time: [history.state.source ? history.state.source.loan_end_time : '', [Validators.required, this.dateCheck]],\n    });\n    this.itemsForm = this.formBuilder.group({\n      items: history.state.booked_items ?\n        new FormArray(this.initialItemInput(history.state.booked_items),\n          [this.checkForRepeat], ExceedAmountValidator.createExceedAmountValidator(this.itemsService)) :\n        new FormArray([this.newItemInput()],\n          [this.checkForRepeat], ExceedAmountValidator.createExceedAmountValidator(this.itemsService))\n    });\n\n    this.checkout();\n  }\n\n  /**\n   * Checks if the date is of correct format.\n   * @param control Date input.\n   */\n  dateCheck(control: AbstractControl): any {\n    return moment(control.value).isValid() ? null : { date: true };\n  }\n\n  /**\n   * Checks if the phone number is of correct format.\n   * @param control Phone number input.\n   */\n  phoneCheck(control: AbstractControl): any {\n    return new RegExp('(8[1-8][0-9]{6}|9[0-8][0-9]{6})').test(control.value) ? null : { phone: true };\n  }\n\n  /**\n   * Checks if the email follows the NUS email format.\n   * @param control Email input.\n   */\n  emailCheck(control: AbstractControl): any {\n    return new RegExp('e[0-9]{7}@u\\.nus\\.edu').test(control.value) ? null : { email: true };\n  }\n\n  /**\n   * Returns a new row.\n   */\n  newItemInput(): FormGroup {\n    return this.formBuilder.group({\n      item: [2, [Validators.required]],\n      quantity: [1, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  /**\n   * Parses the booking data from history.state.source into an array.\n   * @param data Booking data.\n   */\n  initialItemInput(data: any) {\n    const result = [];\n    data.forEach((element: BookedItem) => {\n      result.push(this.createItemInputWithData(element));\n    });\n    return result;\n  }\n\n  /**\n   * Returns filled rows when the user is editing a booking.\n   * @param bookedItem Initial booked items.\n   */\n  createItemInputWithData(bookedItem: BookedItem): FormGroup {\n    return this.formBuilder.group({\n      item: [bookedItem.item.id, Validators.required],\n      quantity: [bookedItem.quantity, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  /**\n   * Returns the list of items to be booked.\n   */\n  getItemInputForm(): FormArray {\n    return this.itemsForm.get('items') as FormArray;\n  }\n\n  /**\n   * Adds a new row to the form when the user presses add row button.\n   */\n  addBlankItem() {\n    this.getItemInputForm().push(this.newItemInput());\n  }\n\n  /**\n   * Removes the i-th row when the user presses the delete button.\n   * @param i Row number.\n   */\n  removeItemInput(i: number) {\n    this.getItemInputForm().removeAt(i);\n  }\n\n  /**\n   * Updates the current form input.\n   */\n  checkout() {\n    this.inputGroup1 = this.detailsForm.value;\n    this.inputGroup2 = this.itemsForm.value;\n  }\n\n  /**\n   * Returns the item given the item id.\n   * @param id Item id.\n   */\n  returnItemGivenId(id: number) {\n    return this.itemArray.filter(element => element.id === id)[0];\n  }\n\n  /**\n   * Returns the total deposit payable.\n   */\n  getTotalDeposit() {\n    return this.itemArray ? Math.min(200, this.inputGroup2.items.reduce((acc: number, currentItem: any) =>\n      acc + this.returnItemGivenId(currentItem.item).deposit * currentItem.quantity\n      , 0)) : 0;\n  }\n\n  /**\n   * Helper method to allow user to navigate the stepper back and forth \n   * while at the same time updating the form contents for use in the checkout page\n   * @param event Page change event\n   */\n  selectionChange(event) {\n    if (event.selectedIndex === 2) {\n      this.checkout();\n    }\n  }\n\n  /**\n   * Helper method to check if there are duplicate items in the form.\n   * @param formArray Item input form.\n   */\n  checkForRepeat(formArray: FormArray) {\n    const itemDict: Dictionary = {};\n    formArray.value.forEach((ele) => {\n      if (itemDict[ele.item]) {\n        itemDict[ele.item] += 1;\n      } else {\n        itemDict[ele.item] = 1;\n      }\n    });\n    for (const key in itemDict) {\n      if (itemDict[key] > 1) {\n        return { duplicate: true };\n      }\n    }\n  }\n\n  /**\n   * Checks if the form returns duplicate error.\n   */\n  checkForErrors() {\n    const controlErrors: ValidationErrors = this.itemsForm.get('items').errors;\n    return controlErrors ? controlErrors : { duplicate: false, exceed: false };\n  }\n\n  /**\n   * Prints the current page.\n   */\n  print() {\n    window.print();\n  }\n\n  /**\n   * Parses the data to be sent to the backend.\n   */\n  onSubmit() {\n    this.service.publish('progressBarOn');\n    const bookingDataCopy = { ...this.inputGroup1 };\n    const finalData: Booking = Object.assign(bookingDataCopy,\n      {\n        time_booked: (history.state.source ? history.state.source.time_booked : new Date()),\n        status: 'PEN',\n        deposit_left: this.getTotalDeposit(),\n        amount_paid: 0\n      }) as Booking;\n    if (!history.state.edit) {\n      bookingDataCopy.loan_start_time = bookingDataCopy.loan_start_time.format('YYYY-MM-DD');\n      bookingDataCopy.loan_end_time = bookingDataCopy.loan_end_time.format('YYYY-MM-DD');\n      this.bookingsService.createBooking(finalData).subscribe(\n        (data: any) => {\n          this.inputGroup2.items.forEach(element => {\n            const finalItemData = { booking_source: data.id, item: element.item, quantity: element.quantity, status: 'PEN' };\n            this.bookingsService.createBookedItem(finalItemData).subscribe();\n          });\n          this.router.navigate(['/edit/confirmed'], { state: { id: data.id, name: data.name, email: data.email, submitted: true } });\n          this.service.publish('progressBarOff');\n        });\n    } else if (history.state.edit === true) { // touchwood condition lol\n      this.bookingsService.updateBooking(history.state.source.id, finalData).subscribe(\n        (data: any) => {\n          // reason for deletion: I don't bother to check whether the booked item exists or not\n          this.bookingsService.deleteBookedItemsByBooker(data.id).subscribe();\n          this.inputGroup2.items.forEach(element => {\n            const finalItemData = { booking_source: data.id, item: element.item, quantity: element.quantity, status: 'PEN' };\n            this.bookingsService.createBookedItem(finalItemData).subscribe();\n          });\n          this.router.navigate(['/edit/confirmed'], { state: { id: data.id, name: data.name, email: data.email, submitted: true } });\n          this.service.publish('progressBarOff');\n        });\n    }\n  }\n}\n\n/**\n * After the user submits a booking, the user will be redirected to a page saying that their booking request has been received.\n */\n@Component({\n  selector: 'app-booking-confirm',\n  templateUrl: './booking-confirm.component.html',\n})\nexport class BookingConfirmComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private snackbar: MatSnackBar,\n    private confirmationTemplatesService: ConfirmationTemplatesService\n  ) { }\n\n  /**\n   * If the form is not submitted, the user will be redirected to the page.\n   */\n  ngOnInit(): void {\n    if (!history.state.submitted) {\n      this.router.navigate(['/edit']);\n    }\n  }\n\n  /**\n   * Resends the confirmation email.\n   */\n  resend(): void {\n    this.confirmationTemplatesService.resendConfirmation({\n      id: history.state.id,\n      email: history.state.email\n    }).subscribe(\n      (success: any) => {\n        this.snackbar.open('Email resent. Please wait...', 'OK', { duration: 5000, });\n      }\n    );\n  }\n}\n\n/**\n * Helper class to check if the number of items booked exceeds the number available in the database.\n */\nexport class ExceedAmountValidator {\n  /**\n   * Returns a method to carry out the validation.\n   * @param itemsService ItemsService object.\n   */\n  static createExceedAmountValidator(itemsService: ItemsService): AsyncValidatorFn {\n    return (formArray: FormArray): Observable => {\n      return itemsService.getItemsList().pipe(map((items) => {\n        for (const element of formArray.value) {\n          if (element.quantity > items.filter(ele => ele.id === element.item)[0].quantity) {\n            return { exceed: true };\n          }\n        }\n      }));\n    };\n  }\n}\n\n    \n\n    \n        \nYour booking request is received.\nDid not receive a confirmation email? Click to resend the email.\nResend\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Your booking request is received.Did not receive a confirmation email? Click to resend the email.Resend'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingConfirmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingConfirmationComponent.html":{"url":"components/BookingConfirmationComponent.html","title":"component - BookingConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookingConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/booking-confirmation/booking-confirmation.component.ts\n\n\n    \n        Description\n    \n    \n        After a user has made a booking, the user will receive a confirmation email that contains a link to confirm that the booking is indeed made by the user.\nThis is the component for the confirmation page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-booking-confirmation\n            \n\n            \n                styleUrls\n                ./booking-confirmation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./booking-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookedItems\n                            \n                            \n                                booking\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                responded\n                            \n                            \n                                tableColumnsBookedItems\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirm_booking\n                            \n                            \n                                delete_booking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                print\n                            \n                            \n                                returnStatusString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, bookingsService: BookingsService, snackbar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking-confirmation/booking-confirmation.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingsService\n                                                  \n                                                        \n                                                                        BookingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirm_booking\n                        \n                        \n                    \n                \n            \n            \n                \nconfirm_booking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:73\n                \n            \n\n\n            \n                \n                    Called when the user presses confirm button.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete_booking\n                        \n                        \n                    \n                \n            \n            \n                \ndelete_booking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:86\n                \n            \n\n\n            \n                \n                    Called when the user decides to revoke the booking by pressing the delete button.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:40\n                \n            \n\n\n            \n                \n                    Initializes the booking based on the token.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            print\n                        \n                        \n                    \n                \n            \n            \n                \nprint()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:66\n                \n            \n\n\n            \n                \n                    Prints the page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnStatusString\n                        \n                        \n                    \n                \n            \n            \n                \nreturnStatusString(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:59\n                \n            \n\n\n            \n                \n                    Returns the full string given the status code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status code.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BookedItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            booking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Booking\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            responded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableColumnsBookedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'quantity', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-confirmation/booking-confirmation.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Booking } from './../model-service/bookings/bookings';\nimport { BookingsService } from '../model-service/bookings/bookings.service';\nimport { BookedItem } from '../model-service/items/items';\nimport { getStatus } from '../model-service/statustranslator';\n\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * After a user has made a booking, the user will receive a confirmation email that contains a link to confirm that the booking is indeed made by the user.\n * This is the component for the confirmation page.\n */\n@Component({\n  selector: 'app-booking-confirmation',\n  templateUrl: './booking-confirmation.component.html',\n  styleUrls: ['./booking-confirmation.component.scss']\n})\nexport class BookingConfirmationComponent implements OnInit {\n  booking: Booking;\n  token: string;\n  tableColumnsBookedItems: string[] = ['name', 'quantity', 'status'];\n  bookedItems: BookedItem[];\n  responded: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private bookingsService: BookingsService,\n    private snackbar: MatSnackBar,\n    public dialog: MatDialog\n  ) { }\n\n  /**\n   * Initializes the booking based on the token.\n   */\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.token = params.token;\n    });\n    this.bookingsService.getBookingByToken(this.token).subscribe(\n      (booking: Booking) => {\n        this.booking = booking;\n        this.bookingsService.getBookedItemsByBooker(booking.id).subscribe(\n          (data: BookedItem[]) => {\n            this.bookedItems = data;\n          });\n      }\n    );\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code.\n   */\n  returnStatusString(code: string){\n    return getStatus(code);\n  }\n\n  /**\n   * Prints the page.\n   */\n  print(){\n    window.print();\n  }\n\n  /**\n   * Called when the user presses confirm button.\n   */\n  confirm_booking() {\n    this.bookingsService.confirmBookingByToken(this.token).subscribe(\n      (success: any) => {\n        this.responded = true; // order matters here, otherwise user can't do any actions then gg\n        location.reload(); // force reload\n        this.snackbar.open('Booking confirmed', 'OK', { duration: 5000, });\n      }\n    );\n  }\n\n  /**\n   * Called when the user decides to revoke the booking by pressing the delete button.\n   */\n  delete_booking() {\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, { data: 'this booking' });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result.event === 'yes') {\n        this.bookingsService.deleteBookingByToken(this.token).subscribe(\n          (success: any) => {\n            this.responded = true;\n            location.reload(); // force reload\n            this.snackbar.open('Booking deleted', 'OK', { duration: 5000, });\n          }\n        );\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  Before you are able to check the status\n    of your booking, you are to declare that you are the one who made the following booking.\n  Here are the booking details. Processing may take a few days to complete, and you will receive\n    an email response once the booking is processed. The deposit shown here is the maximum payable\n      deposit and may decrease after the booking is processed.\n  Booking Details\n  \n    \n      \n        Booking No.: {{booking.id}}\n        Name: {{booking.name}}\n        Email: {{booking.email}}\n        Organization: {{booking.organization}}\n        Purpose: {{booking.reason}}\n        From: {{booking.loan_start_time|date: 'd/M/yyyy'}}\n        To: {{booking.loan_end_time|date: 'd/M/yyyy'}}\n        Status: {{returnStatusString(booking.status)}}\n        \n      \n    \n    \n      Items\n      \n        \n           Item \n           {{booked_item.item.name}} \n          Deposit Payable\n        \n        \n           Quantity \n           {{booked_item.quantity}} \n          {{booking.deposit_left|currency}}\n        \n        \n           Status \n           {{returnStatusString(booked_item.status)}} \n          \n        \n        \n        \n        \n      \n    \n  \n  \n    done\n    Confirm\n  \n  \n    print\n    Print\n  \n  \n    clear\n    Delete\n  \n\n\n\n\n  Sorry, this booking has been deleted.\n\n    \n\n    \n                \n                    ./booking-confirmation.component.scss\n                \n                @media print {\n    button {\n        display: none;\n    }\n}\n\n.column-left {\n    float: left;\n    width: 50%;\n  }\n\n  .column-right {\n    float: right;\n    width: 50%;\n  }\n\n  .row:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Before you are able to check the status    of your booking, you are to declare that you are the one who made the following booking.  Here are the booking details. Processing may take a few days to complete, and you will receive    an email response once the booking is processed. The deposit shown here is the maximum payable      deposit and may decrease after the booking is processed.  Booking Details                    Booking No.: {{booking.id}}        Name: {{booking.name}}        Email: {{booking.email}}        Organization: {{booking.organization}}        Purpose: {{booking.reason}}        From: {{booking.loan_start_time|date: \\'d/M/yyyy\\'}}        To: {{booking.loan_end_time|date: \\'d/M/yyyy\\'}}        Status: {{returnStatusString(booking.status)}}                            Items                         Item            {{booked_item.item.name}}           Deposit Payable                           Quantity            {{booked_item.quantity}}           {{booking.deposit_left|currency}}                           Status            {{returnStatusString(booked_item.status)}}                                                             done    Confirm        print    Print        clear    Delete    Sorry, this booking has been deleted.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingListComponent.html":{"url":"components/BookingListComponent.html","title":"component - BookingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/booking-list/booking-list.component.ts\n\n\n    \n        Description\n    \n    \n        Main component for displaying the list of bookings.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] }\n                            { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }\n                \n            \n\n\n            \n                selector\n                booking-list\n            \n\n            \n                styleUrls\n                ./booking-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./booking-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookingDialogOpened\n                            \n                            \n                                bookings\n                            \n                            \n                                filterForm\n                            \n                            \n                                isLoadingResults\n                            \n                            \n                                paginator\n                            \n                            \n                                resultsLength\n                            \n                            \n                                sort\n                            \n                            \n                                summaryDialogOpened\n                            \n                            \n                                tableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateCheck\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputPageChange\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openWeeklySummary\n                            \n                            \n                                parseFilterForm\n                            \n                            \n                                reloadData\n                            \n                            \n                                returnStatusString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingsService: BookingsService, dialog: MatDialog, service: ComponentBridgingService, snackbar: MatSnackBar, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking-list/booking-list.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookingsService\n                                                  \n                                                        \n                                                                        BookingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ComponentBridgingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dateCheck\n                        \n                        \n                    \n                \n            \n            \n                \ndateCheck(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:186\n                \n            \n\n\n            \n                \n                    Checks if the date format is correct.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:79\n                \n            \n\n\n            \n                \n                    Load the data after the component's view has been properly initialized.\nIt also initializes the behaviour when the sorting parameter changes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:66\n                \n            \n\n\n            \n                \n                    Initializes the filter form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputPageChange\n                        \n                        \n                    \n                \n            \n            \n                \nonInputPageChange(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:139\n                \n            \n\n\n            \n                \n                    Reload the data after the page number has changed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Page number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:195\n                \n            \n\n\n            \n                \n                    Reloads the data after the filter form is submitted.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(row: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:148\n                \n            \n\n\n            \n                \n                    Opens a dialog with booking details when a row of table is clicked.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table row\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openWeeklySummary\n                        \n                        \n                    \n                \n            \n            \n                \nopenWeeklySummary()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:169\n                \n            \n\n\n            \n                \n                    Opens a dialog with weekly summary of bookings.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseFilterForm\n                        \n                        \n                    \n                \n            \n            \n                \nparseFilterForm(filterForm: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:117\n                \n            \n\n\n            \n                \n                    Process the filter form so that the data format can be parsed by the backend.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filterForm\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Filter form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \nreloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:89\n                \n            \n\n\n            \n                \n                    Method to load data. When the data is loading, this method will broadcast a message\nto turn on the progress bar, until the data is done loading, in which case the\nprogress bar is turned off and the bookings data are updated.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnStatusString\n                        \n                        \n                    \n                \n            \n            \n                \nreturnStatusString(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:203\n                \n            \n\n\n            \n                \n                    Returns the full string given the status code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookingDialogOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Booking[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultsLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            summaryDialogOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'time_booked', 'loan_start_time', 'loan_end_time', 'deposit_left', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Component, OnInit, Inject, ViewChild, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { BookingsService } from '../model-service/bookings/bookings.service';\nimport { Booking } from '../model-service/bookings/bookings';\nimport { BookedItem } from '../model-service/items/items';\nimport { getStatus, addHyphen } from '../model-service/statustranslator';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport moment from 'moment';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { CalendarOptions } from '@fullcalendar/angular';\nimport { formatDate } from '@fullcalendar/core'\nimport { merge, of } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\n/**\n * Main component for displaying the list of bookings.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'booking-list',\n  templateUrl: './booking-list.component.html',\n  styleUrls: ['./booking-list.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\n\nexport class BookingListComponent implements OnInit, AfterViewInit {\n\n  bookings: Booking[];\n  tableColumns: string[] = ['id', 'name', 'time_booked', 'loan_start_time', 'loan_end_time', 'deposit_left', 'status'];\n\n  filterForm: FormGroup;\n\n  bookingDialogOpened = false;\n  summaryDialogOpened = false;\n\n  isLoadingResults = true;\n  resultsLength = 0;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(\n    private bookingsService: BookingsService,\n    private dialog: MatDialog,\n    private service: ComponentBridgingService,\n    private snackbar: MatSnackBar,\n    private formBuilder: FormBuilder\n  ) { }\n\n  /**\n   * Initializes the filter form.\n   */\n  ngOnInit() {\n    this.filterForm = this.formBuilder.group({\n      name: ['', ''],\n      fromDate: ['', this.dateCheck],\n      toDate: ['', this.dateCheck],\n      status: ['', '']\n    });\n  }\n\n  /**\n   * Load the data after the component's view has been properly initialized.\n   * It also initializes the behaviour when the sorting parameter changes.\n   */\n  ngAfterViewInit(): void {\n    this.reloadData();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n  }\n\n  /**\n   * Method to load data. When the data is loading, this method will broadcast a message\n   * to turn on the progress bar, until the data is done loading, in which case the\n   * progress bar is turned off and the bookings data are updated.\n   */\n  reloadData() {\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          this.service.publish('progressBarOn');\n          return this.bookingsService.filterBookings(this.parseFilterForm(this.filterForm));\n        }),\n        map(data => {\n          this.isLoadingResults = false;\n          this.service.publish('progressBarOff');\n          this.resultsLength = data.count;\n          return data.results\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          this.service.publish('progressBarOff');\n          this.snackbar.open(\"An error occured.\", \"OK\", { duration: 5000 });\n          return of([]);\n        })\n      ).subscribe(data => { this.bookings = data; });\n  }\n\n  /**\n   * Process the filter form so that the data format can be parsed by the backend.\n   * @param filterForm Filter form\n   */\n  parseFilterForm(filterForm: FormGroup) {\n    const sortCriterion = addHyphen(this.sort.active, this.sort.direction);\n    let filterParams = { ...this.filterForm.value }\n    if (filterForm.value.fromDate) {\n      filterParams.fromDate = filterParams.fromDate.format(\"YYYY-MM-DD HH:mm\");\n    }\n    if (filterForm.value.endDate) {\n      filterParams.endDate = filterParams.endDate.format(\"YYYY-MM-DD HH:mm\");\n    }\n    filterParams = Object.assign(filterParams,\n      {\n        ordering: sortCriterion ? sortCriterion : 'id',\n        page: this.paginator.pageIndex + 1,\n        page_size: this.paginator.pageSize\n      });\n    return filterParams;\n  }\n\n  /**\n   * Reload the data after the page number has changed.\n   * @param pageNumber Page number.\n   */\n  onInputPageChange(pageNumber: number) {\n    this.paginator.pageIndex = Math.min(pageNumber - 1, this.paginator.getNumberOfPages() - 1);\n    this.reloadData();\n  }\n\n  /**\n   * Opens a dialog with booking details when a row of table is clicked.\n   * @param row Table row\n   */\n  openDialog(row: { [x: string]: number; }) {\n    this.bookingsService.getBookedItemsByBooker(row.id)\n      .subscribe(\n        (bookedItemData: BookedItem[]) => {\n          if (!this.bookingDialogOpened) {\n            this.bookingDialogOpened = true;\n            const dialogRef = this.dialog.open(\n              BookingListDialog,\n              { width: '600px', data: { source: row, booked_items: bookedItemData } });\n            dialogRef.afterClosed().subscribe(() => {\n              this.reloadData();\n              this.bookingDialogOpened = false;\n            });\n          }\n        }\n      );\n  }\n\n  /**\n   * Opens a dialog with weekly summary of bookings.\n   */\n  openWeeklySummary() {\n    if (!this.summaryDialogOpened) {\n      this.summaryDialogOpened = true;\n      const dialogRef = this.dialog.open(\n        BookingSummaryDialog,\n        { width: '1200px', height: '600px' }\n      );\n      dialogRef.afterClosed().subscribe(\n        () => { this.summaryDialogOpened = false; }\n      );\n    }\n  }\n\n  /**\n   * Checks if the date format is correct.\n   * @param control Date input\n   */\n  dateCheck(control: AbstractControl): any {\n    const d = control.value;\n    return (d === null || (typeof d === 'string') &&\n      d.length === 0 || moment(d).isValid()) ? null : { date: true };\n  }\n\n  /**\n   * Reloads the data after the filter form is submitted.\n   */\n  onSubmit() {\n    this.reloadData();\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code\n   */\n  returnStatusString(code: string) {\n    return getStatus(code);\n  }\n}\n\n/**\n * Dialog with each booking details.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'booking-list-dialog',\n  templateUrl: './booking-list-dialog.html',\n})\n// tslint:disable-next-line: component-class-suffix\nexport class BookingListDialog {\n  tableColumnsBookedItems: string[] = ['name', 'quantity', 'status'];\n  constructor(\n    private bookingsService: BookingsService,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public bookingData: any,\n    private snackbar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * Updates the status of the booking.\n   * @param status New status\n   */\n  updateStatus(status: string) {\n    const bookingDataCopy = { ...this.bookingData.source };\n    delete bookingDataCopy.id;\n    bookingDataCopy.status = status;\n    this.bookingData.source.status = status;\n    if (status === 'GET') {\n      bookingDataCopy.amount_paid = bookingDataCopy.deposit_left;\n    }\n    this.bookingsService.updateBooking(this.bookingData.source.id, bookingDataCopy).subscribe();\n    this.dialogRef.close();\n    this.printSnackBarStatus(status);\n  }\n\n  /**\n   * Opens a snackbar stating the status of booking has changed.\n   * @param status New status\n   */\n  printSnackBarStatus(status: string) {\n    this.snackbar.open(\n      `Status of Booking #${this.bookingData.source.id} changed to: ${getStatus(status)}`,\n      'OK',\n      { duration: 5000, }\n    );\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code\n   */\n  returnStatusString(code: string) {\n    return getStatus(code);\n  }\n\n  /**\n   * Processes the booking and redirect user to choose an email template.\n   */\n  processAndEmail() {\n    this.updateStatus('PRO');\n    this.router.navigate(['/templates'], { state: { booking: this.bookingData } });\n  }\n\n  /**\n   * Revokes the approval.\n   */\n  revoke() {\n    this.updateStatus('PEN');\n    this.bookingData.booked_items.forEach((ele) => {\n      this.bookingsService.updateBookedItem(ele.id,\n        {\n          booking_source: ele.booking_source.id,\n          item: ele.item.id,\n          quantity: ele.quantity,\n          status: 'PEN'\n        }).subscribe();\n    });\n  }\n\n  /**\n   * Called when the logistics booked are loaned.\n   */\n  getLogistics() {\n    this.updateStatus('GET');\n  }\n\n  /**\n   * Called when the logistics are returned.\n   */\n  returnLogistics() {\n    this.updateStatus('RET');\n  }\n\n  /**\n   * Deletes the booking.\n   */\n  deleteBooking() {\n    this.bookingsService.deleteBooking(this.bookingData.source.id).subscribe();\n    this.dialogRef.close();\n    this.snackbar.open(`Booking #${this.bookingData.source.id} deleted`, 'OK', { duration: 5000 });\n  }\n\n  /**\n   * Opens a confirmation dialog to ensure that the user really wants to delete the booking.\n   */\n  confirmDelete() {\n    const dialogR = this.dialog.open(ConfirmationDialogComponent,\n      { data: `booking #${this.bookingData.source.id}` });\n    dialogR.afterClosed().subscribe(\n      (result) => {\n        if (result.event === 'yes') {\n          this.deleteBooking();\n        }\n      });\n  }\n\n  /**\n   * Navigates the user to edit the booking.\n   */\n  editBooking() {\n    this.dialogRef.close();\n    this.router.navigate(['/edit'],\n      {\n        state:\n        {\n          source: this.bookingData.source,\n          booked_items: this.bookingData.booked_items,\n          edit: true\n        }\n      }\n    );\n  }\n}\n\n/**\n * Component for the weekly summary table.\n */\n@Component({\n  selector: 'booking-summary-dialog',\n  templateUrl: './booking-summary-dialog.html',\n})\nexport class BookingSummaryDialog {\n\n  /**\n   * Initializes the calendar component.\n   */\n  calendarOptions: CalendarOptions = {\n    initialView: 'dayGridWeek',\n    height: '500px',\n    locale: 'en-sg',\n    events: this.putEventsCurry(this.bookingsService),\n    // delay (ms) is here so that events can be rendered properly on initial load\n    rerenderDelay: 100\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public bookingsService: BookingsService\n  ) { }\n\n  /**\n   * Helper method to circumvent the problem that this.bookingService is undefined.\n   * @param bookingService BookingService object.\n   */\n  putEventsCurry(bookingService: BookingsService) {\n    return (args, successCallback, failureCallback) =>\n      this.putEvents(args, successCallback, failureCallback, bookingService);\n  }\n\n  /**\n   * Returns the events to be put in the calendar.\n   * @param args Current configuration of the calendar\n   * @param successCallback Callback method if the data retrieval is successful.\n   * @param failureCallback Callback method if the data retrieval is not successful.\n   * @param bookingsService BookingService object\n   */\n  putEvents(args: any, successCallback, failureCallback, bookingsService: BookingsService) {\n    const options = { year: 'numeric', month: 'numeric', day: 'numeric', locale: 'en-ca' }\n    const startDate = formatDate(args.start, options);\n    const endDate = formatDate(args.end - 86400000, options);\n    bookingsService.getBookingsByDateRange(startDate, endDate).subscribe(\n      (bookingData: Booking[]) => {\n        successCallback(bookingData.map((element) => {\n          return {\n            title: `#${element.id} - ${element.name}`,\n            start: element.loan_start_time,\n            end: new Date(new Date(element.loan_end_time).getTime() + 86400000)\n              .toISOString()\n              .substr(0, 10),\n            color: this.getColour(element.id)\n          };\n        }));\n      },\n      failureCallback\n    );\n  }\n\n  /**\n   * Returns a colour based on the booking id\n   * @param num Booking id.\n   */\n  getColour(num: number) {\n    switch (num % 4) {\n      case 0:\n        return '#3c78b5';\n      case 1:\n        return '#54a8ff';\n      case 2:\n        return '#10b336';\n      case 3:\n        return '#0dd186';\n    }\n  }\n}\n\n    \n\n    \n        \n  Booking List\n  \n    \n      Click each row for more details.\n    \n    \n      \n        date_range\n        Weekly Summary\n      \n    \n  \n  \n    \n      Filter\n      \n        Filter by name\n        \n        \n          Name\n          \n        \n\n        \n        Filter by booking date\n        \n        \n          From (dd/mm/yyyy)\n          \n          \n          \n          Please enter a valid date.\n        \n        \n        \n          To (dd/mm/yyyy)\n          \n          \n          \n          Please enter a valid date.\n        \n\n        \n        Filter by booking status\n        \n        \n          Status\n          \n        \n        \n        \n          search\n          Filter\n        \n      \n    \n    \n      \n        \n          S/N\n          {{booking.id}}\n        \n        \n          Name\n          {{booking.name}}\n        \n        \n          Time Booked\n          {{booking.time_booked|date: 'd/M/yyyy'}}\n        \n        \n          Loan date\n          {{booking.loan_start_time|date: 'd/M/yyyy'}}\n        \n        \n          Return date\n          {{booking.loan_end_time|date: 'd/M/yyyy'}}\n        \n        \n          Deposit Left (S$)\n          {{booking.deposit_left}}\n        \n        \n          Status\n          {{returnStatusString(booking.status)}}\n        \n        \n        \n      \n      \n        \n          \n        \n        Page: \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./booking-list.component.scss\n                \n                .container {\n    background-image: url(\"../../assets/Blue.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100vh;\n    overflow: hidden;\n}\n\n.w-40 {\nmax-width: 40px;\n}\n\n.w-100 {\nmax-width: 100px;\n}\n\n.column-left {\nfloat: left;\nwidth: 20%;\n}\n\n.column-right {\nfloat: right;\nwidth: 80%;\n}\n\n.row:after {\ncontent: \"\";\ndisplay: table;\nclear: both;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Booking List            Click each row for more details.                      date_range        Weekly Summary                        Filter              Filter by name                          Name                                  Filter by booking date                          From (dd/mm/yyyy)                                        Please enter a valid date.                                  To (dd/mm/yyyy)                                        Please enter a valid date.                        Filter by booking status                          Status                                            search          Filter                                              S/N          {{booking.id}}                          Name          {{booking.name}}                          Time Booked          {{booking.time_booked|date: \\'d/M/yyyy\\'}}                          Loan date          {{booking.loan_start_time|date: \\'d/M/yyyy\\'}}                          Return date          {{booking.loan_end_time|date: \\'d/M/yyyy\\'}}                          Deposit Left (S$)          {{booking.deposit_left}}                          Status          {{returnStatusString(booking.status)}}                                                                      Page:                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingListDialog.html":{"url":"components/BookingListDialog.html","title":"component - BookingListDialog","body":"\n                   \n\n\n\n\n\n  Components\n  BookingListDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/booking-list/booking-list.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog with each booking details.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                booking-list-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./booking-list-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookingData\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                tableColumnsBookedItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmDelete\n                            \n                            \n                                deleteBooking\n                            \n                            \n                                editBooking\n                            \n                            \n                                getLogistics\n                            \n                            \n                                printSnackBarStatus\n                            \n                            \n                                processAndEmail\n                            \n                            \n                                returnLogistics\n                            \n                            \n                                returnStatusString\n                            \n                            \n                                revoke\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingsService: BookingsService, dialog: MatDialog, dialogRef: MatDialogRef, bookingData: any, snackbar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking-list/booking-list.component.ts:218\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookingsService\n                                                  \n                                                        \n                                                                        BookingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmDelete\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:315\n                \n            \n\n\n            \n                \n                    Opens a confirmation dialog to ensure that the user really wants to delete the booking.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBooking\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBooking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:306\n                \n            \n\n\n            \n                \n                    Deletes the booking.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editBooking\n                        \n                        \n                    \n                \n            \n            \n                \neditBooking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:329\n                \n            \n\n\n            \n                \n                    Navigates the user to edit the booking.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogistics\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogistics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:292\n                \n            \n\n\n            \n                \n                    Called when the logistics booked are loaned.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printSnackBarStatus\n                        \n                        \n                    \n                \n            \n            \n                \nprintSnackBarStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:249\n                \n            \n\n\n            \n                \n                    Opens a snackbar stating the status of booking has changed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processAndEmail\n                        \n                        \n                    \n                \n            \n            \n                \nprocessAndEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:268\n                \n            \n\n\n            \n                \n                    Processes the booking and redirect user to choose an email template.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnLogistics\n                        \n                        \n                    \n                \n            \n            \n                \nreturnLogistics()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:299\n                \n            \n\n\n            \n                \n                    Called when the logistics are returned.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            returnStatusString\n                        \n                        \n                    \n                \n            \n            \n                \nreturnStatusString(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:261\n                \n            \n\n\n            \n                \n                    Returns the full string given the status code.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Status code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revoke\n                        \n                        \n                    \n                \n            \n            \n                \nrevoke()\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:276\n                \n            \n\n\n            \n                \n                    Revokes the approval.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateStatus(status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:232\n                \n            \n\n\n            \n                \n                    Updates the status of the booking.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New status\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bookingData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:223\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:221\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:222\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableColumnsBookedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'quantity', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:218\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Component, OnInit, Inject, ViewChild, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { BookingsService } from '../model-service/bookings/bookings.service';\nimport { Booking } from '../model-service/bookings/bookings';\nimport { BookedItem } from '../model-service/items/items';\nimport { getStatus, addHyphen } from '../model-service/statustranslator';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport moment from 'moment';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { CalendarOptions } from '@fullcalendar/angular';\nimport { formatDate } from '@fullcalendar/core'\nimport { merge, of } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\n/**\n * Main component for displaying the list of bookings.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'booking-list',\n  templateUrl: './booking-list.component.html',\n  styleUrls: ['./booking-list.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\n\nexport class BookingListComponent implements OnInit, AfterViewInit {\n\n  bookings: Booking[];\n  tableColumns: string[] = ['id', 'name', 'time_booked', 'loan_start_time', 'loan_end_time', 'deposit_left', 'status'];\n\n  filterForm: FormGroup;\n\n  bookingDialogOpened = false;\n  summaryDialogOpened = false;\n\n  isLoadingResults = true;\n  resultsLength = 0;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(\n    private bookingsService: BookingsService,\n    private dialog: MatDialog,\n    private service: ComponentBridgingService,\n    private snackbar: MatSnackBar,\n    private formBuilder: FormBuilder\n  ) { }\n\n  /**\n   * Initializes the filter form.\n   */\n  ngOnInit() {\n    this.filterForm = this.formBuilder.group({\n      name: ['', ''],\n      fromDate: ['', this.dateCheck],\n      toDate: ['', this.dateCheck],\n      status: ['', '']\n    });\n  }\n\n  /**\n   * Load the data after the component's view has been properly initialized.\n   * It also initializes the behaviour when the sorting parameter changes.\n   */\n  ngAfterViewInit(): void {\n    this.reloadData();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n  }\n\n  /**\n   * Method to load data. When the data is loading, this method will broadcast a message\n   * to turn on the progress bar, until the data is done loading, in which case the\n   * progress bar is turned off and the bookings data are updated.\n   */\n  reloadData() {\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          this.service.publish('progressBarOn');\n          return this.bookingsService.filterBookings(this.parseFilterForm(this.filterForm));\n        }),\n        map(data => {\n          this.isLoadingResults = false;\n          this.service.publish('progressBarOff');\n          this.resultsLength = data.count;\n          return data.results\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          this.service.publish('progressBarOff');\n          this.snackbar.open(\"An error occured.\", \"OK\", { duration: 5000 });\n          return of([]);\n        })\n      ).subscribe(data => { this.bookings = data; });\n  }\n\n  /**\n   * Process the filter form so that the data format can be parsed by the backend.\n   * @param filterForm Filter form\n   */\n  parseFilterForm(filterForm: FormGroup) {\n    const sortCriterion = addHyphen(this.sort.active, this.sort.direction);\n    let filterParams = { ...this.filterForm.value }\n    if (filterForm.value.fromDate) {\n      filterParams.fromDate = filterParams.fromDate.format(\"YYYY-MM-DD HH:mm\");\n    }\n    if (filterForm.value.endDate) {\n      filterParams.endDate = filterParams.endDate.format(\"YYYY-MM-DD HH:mm\");\n    }\n    filterParams = Object.assign(filterParams,\n      {\n        ordering: sortCriterion ? sortCriterion : 'id',\n        page: this.paginator.pageIndex + 1,\n        page_size: this.paginator.pageSize\n      });\n    return filterParams;\n  }\n\n  /**\n   * Reload the data after the page number has changed.\n   * @param pageNumber Page number.\n   */\n  onInputPageChange(pageNumber: number) {\n    this.paginator.pageIndex = Math.min(pageNumber - 1, this.paginator.getNumberOfPages() - 1);\n    this.reloadData();\n  }\n\n  /**\n   * Opens a dialog with booking details when a row of table is clicked.\n   * @param row Table row\n   */\n  openDialog(row: { [x: string]: number; }) {\n    this.bookingsService.getBookedItemsByBooker(row.id)\n      .subscribe(\n        (bookedItemData: BookedItem[]) => {\n          if (!this.bookingDialogOpened) {\n            this.bookingDialogOpened = true;\n            const dialogRef = this.dialog.open(\n              BookingListDialog,\n              { width: '600px', data: { source: row, booked_items: bookedItemData } });\n            dialogRef.afterClosed().subscribe(() => {\n              this.reloadData();\n              this.bookingDialogOpened = false;\n            });\n          }\n        }\n      );\n  }\n\n  /**\n   * Opens a dialog with weekly summary of bookings.\n   */\n  openWeeklySummary() {\n    if (!this.summaryDialogOpened) {\n      this.summaryDialogOpened = true;\n      const dialogRef = this.dialog.open(\n        BookingSummaryDialog,\n        { width: '1200px', height: '600px' }\n      );\n      dialogRef.afterClosed().subscribe(\n        () => { this.summaryDialogOpened = false; }\n      );\n    }\n  }\n\n  /**\n   * Checks if the date format is correct.\n   * @param control Date input\n   */\n  dateCheck(control: AbstractControl): any {\n    const d = control.value;\n    return (d === null || (typeof d === 'string') &&\n      d.length === 0 || moment(d).isValid()) ? null : { date: true };\n  }\n\n  /**\n   * Reloads the data after the filter form is submitted.\n   */\n  onSubmit() {\n    this.reloadData();\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code\n   */\n  returnStatusString(code: string) {\n    return getStatus(code);\n  }\n}\n\n/**\n * Dialog with each booking details.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'booking-list-dialog',\n  templateUrl: './booking-list-dialog.html',\n})\n// tslint:disable-next-line: component-class-suffix\nexport class BookingListDialog {\n  tableColumnsBookedItems: string[] = ['name', 'quantity', 'status'];\n  constructor(\n    private bookingsService: BookingsService,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public bookingData: any,\n    private snackbar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * Updates the status of the booking.\n   * @param status New status\n   */\n  updateStatus(status: string) {\n    const bookingDataCopy = { ...this.bookingData.source };\n    delete bookingDataCopy.id;\n    bookingDataCopy.status = status;\n    this.bookingData.source.status = status;\n    if (status === 'GET') {\n      bookingDataCopy.amount_paid = bookingDataCopy.deposit_left;\n    }\n    this.bookingsService.updateBooking(this.bookingData.source.id, bookingDataCopy).subscribe();\n    this.dialogRef.close();\n    this.printSnackBarStatus(status);\n  }\n\n  /**\n   * Opens a snackbar stating the status of booking has changed.\n   * @param status New status\n   */\n  printSnackBarStatus(status: string) {\n    this.snackbar.open(\n      `Status of Booking #${this.bookingData.source.id} changed to: ${getStatus(status)}`,\n      'OK',\n      { duration: 5000, }\n    );\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code\n   */\n  returnStatusString(code: string) {\n    return getStatus(code);\n  }\n\n  /**\n   * Processes the booking and redirect user to choose an email template.\n   */\n  processAndEmail() {\n    this.updateStatus('PRO');\n    this.router.navigate(['/templates'], { state: { booking: this.bookingData } });\n  }\n\n  /**\n   * Revokes the approval.\n   */\n  revoke() {\n    this.updateStatus('PEN');\n    this.bookingData.booked_items.forEach((ele) => {\n      this.bookingsService.updateBookedItem(ele.id,\n        {\n          booking_source: ele.booking_source.id,\n          item: ele.item.id,\n          quantity: ele.quantity,\n          status: 'PEN'\n        }).subscribe();\n    });\n  }\n\n  /**\n   * Called when the logistics booked are loaned.\n   */\n  getLogistics() {\n    this.updateStatus('GET');\n  }\n\n  /**\n   * Called when the logistics are returned.\n   */\n  returnLogistics() {\n    this.updateStatus('RET');\n  }\n\n  /**\n   * Deletes the booking.\n   */\n  deleteBooking() {\n    this.bookingsService.deleteBooking(this.bookingData.source.id).subscribe();\n    this.dialogRef.close();\n    this.snackbar.open(`Booking #${this.bookingData.source.id} deleted`, 'OK', { duration: 5000 });\n  }\n\n  /**\n   * Opens a confirmation dialog to ensure that the user really wants to delete the booking.\n   */\n  confirmDelete() {\n    const dialogR = this.dialog.open(ConfirmationDialogComponent,\n      { data: `booking #${this.bookingData.source.id}` });\n    dialogR.afterClosed().subscribe(\n      (result) => {\n        if (result.event === 'yes') {\n          this.deleteBooking();\n        }\n      });\n  }\n\n  /**\n   * Navigates the user to edit the booking.\n   */\n  editBooking() {\n    this.dialogRef.close();\n    this.router.navigate(['/edit'],\n      {\n        state:\n        {\n          source: this.bookingData.source,\n          booked_items: this.bookingData.booked_items,\n          edit: true\n        }\n      }\n    );\n  }\n}\n\n/**\n * Component for the weekly summary table.\n */\n@Component({\n  selector: 'booking-summary-dialog',\n  templateUrl: './booking-summary-dialog.html',\n})\nexport class BookingSummaryDialog {\n\n  /**\n   * Initializes the calendar component.\n   */\n  calendarOptions: CalendarOptions = {\n    initialView: 'dayGridWeek',\n    height: '500px',\n    locale: 'en-sg',\n    events: this.putEventsCurry(this.bookingsService),\n    // delay (ms) is here so that events can be rendered properly on initial load\n    rerenderDelay: 100\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public bookingsService: BookingsService\n  ) { }\n\n  /**\n   * Helper method to circumvent the problem that this.bookingService is undefined.\n   * @param bookingService BookingService object.\n   */\n  putEventsCurry(bookingService: BookingsService) {\n    return (args, successCallback, failureCallback) =>\n      this.putEvents(args, successCallback, failureCallback, bookingService);\n  }\n\n  /**\n   * Returns the events to be put in the calendar.\n   * @param args Current configuration of the calendar\n   * @param successCallback Callback method if the data retrieval is successful.\n   * @param failureCallback Callback method if the data retrieval is not successful.\n   * @param bookingsService BookingService object\n   */\n  putEvents(args: any, successCallback, failureCallback, bookingsService: BookingsService) {\n    const options = { year: 'numeric', month: 'numeric', day: 'numeric', locale: 'en-ca' }\n    const startDate = formatDate(args.start, options);\n    const endDate = formatDate(args.end - 86400000, options);\n    bookingsService.getBookingsByDateRange(startDate, endDate).subscribe(\n      (bookingData: Booking[]) => {\n        successCallback(bookingData.map((element) => {\n          return {\n            title: `#${element.id} - ${element.name}`,\n            start: element.loan_start_time,\n            end: new Date(new Date(element.loan_end_time).getTime() + 86400000)\n              .toISOString()\n              .substr(0, 10),\n            color: this.getColour(element.id)\n          };\n        }));\n      },\n      failureCallback\n    );\n  }\n\n  /**\n   * Returns a colour based on the booking id\n   * @param num Booking id.\n   */\n  getColour(num: number) {\n    switch (num % 4) {\n      case 0:\n        return '#3c78b5';\n      case 1:\n        return '#54a8ff';\n      case 2:\n        return '#10b336';\n      case 3:\n        return '#0dd186';\n    }\n  }\n}\n\n    \n\n    \n        \n  .column-left {\n    float: left;\n    width: 50%;\n  }\n\n  .column-right {\n    float: right;\n    width: 50%;\n  }\n\n  .row:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  mat-label {\n    padding-top: 20px;\n  }\n\nBooking #{{bookingData.source.id}}\n\n\n  \n    Booking details\n    Booked by: {{bookingData.source.name}}\n    \n    Organization: {{bookingData.source.organization}}\n    \n    Email: {{bookingData.source.email}}\n    \n    Contact Number: {{bookingData.source.phone_no}}\n    \n    Time booked: {{bookingData.source.time_booked|date: 'd MMM yyyy HH:mm:ss'}}\n    \n    Purpose: {{bookingData.source.reason}}\n    \n    Loan date: {{bookingData.source.loan_start_time|date: 'd MMM yyyy'}}\n    \n    Return date: {{bookingData.source.loan_end_time|date: 'd MMM yyyy'}}\n    \n    Deposit left: ${{bookingData.source.deposit_left}}\n    \n    Amount paid: ${{bookingData.source.amount_paid}}\n    \n    Status: {{returnStatusString(bookingData.source.status)}}\n    \n  \n  \n    Items\n    \n      \n         Item \n         {{booked_item.item.name}} \n      \n      \n         Quantity \n         {{booked_item.quantity}} \n      \n      \n         Status \n         {{returnStatusString(booked_item.status)}} \n      \n      \n      \n    \n  \n\n\n\n  \n    delete_forever\n    Remove\n  \n\n\n\n  \n    edit\n    Edit\n  \n\n  \n    email\n    Process and Email\n  \n\n\n\n\n  \n    undo\n    Revoke\n  \n\n  \n    Retrieve Logistics\n  \n\n\n\n  \n    Return Logistics\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .column-left {    float: left;    width: 50%;  }  .column-right {    float: right;    width: 50%;  }  .row:after {    content: \"\";    display: table;    clear: both;  }  mat-label {    padding-top: 20px;  }Booking #{{bookingData.source.id}}      Booking details    Booked by: {{bookingData.source.name}}        Organization: {{bookingData.source.organization}}        Email: {{bookingData.source.email}}        Contact Number: {{bookingData.source.phone_no}}        Time booked: {{bookingData.source.time_booked|date: \\'d MMM yyyy HH:mm:ss\\'}}        Purpose: {{bookingData.source.reason}}        Loan date: {{bookingData.source.loan_start_time|date: \\'d MMM yyyy\\'}}        Return date: {{bookingData.source.loan_end_time|date: \\'d MMM yyyy\\'}}        Deposit left: ${{bookingData.source.deposit_left}}        Amount paid: ${{bookingData.source.amount_paid}}        Status: {{returnStatusString(bookingData.source.status)}}            Items                   Item          {{booked_item.item.name}}                      Quantity          {{booked_item.quantity}}                      Status          {{returnStatusString(booked_item.status)}}                               delete_forever    Remove        edit    Edit        email    Process and Email        undo    Revoke        Retrieve Logistics        Return Logistics  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingListDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingSummaryDialog.html":{"url":"components/BookingSummaryDialog.html","title":"component - BookingSummaryDialog","body":"\n                   \n\n\n\n\n\n  Components\n  BookingSummaryDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/booking-list/booking-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the weekly summary table.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                booking-summary-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./booking-summary-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookingsService\n                            \n                            \n                                calendarOptions\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColour\n                            \n                            \n                                putEvents\n                            \n                            \n                                putEventsCurry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, bookingsService: BookingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/booking-list/booking-list.component.ts:363\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingsService\n                                                  \n                                                        \n                                                                        BookingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColour\n                        \n                        \n                    \n                \n            \n            \n                \ngetColour(num: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:411\n                \n            \n\n\n            \n                \n                    Returns a colour based on the booking id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Booking id.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"#3c78b5\" | \"#54a8ff\" | \"#10b336\" | \"#0dd186\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putEvents\n                        \n                        \n                    \n                \n            \n            \n                \nputEvents(args: any, successCallback, failureCallback, bookingsService: BookingsService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:386\n                \n            \n\n\n            \n                \n                    Returns the events to be put in the calendar.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current configuration of the calendar\n\n                                    \n                                \n                                \n                                    successCallback\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback method if the data retrieval is successful.\n\n                                    \n                                \n                                \n                                    failureCallback\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback method if the data retrieval is not successful.\n\n                                    \n                                \n                                \n                                    bookingsService\n                                    \n                                                BookingsService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        BookingService object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putEventsCurry\n                        \n                        \n                    \n                \n            \n            \n                \nputEventsCurry(bookingService: BookingsService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-list/booking-list.component.ts:374\n                \n            \n\n\n            \n                \n                    Helper method to circumvent the problem that this.bookingService is undefined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bookingService\n                                    \n                                                BookingsService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        BookingService object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (args: any, successCallback: any, failureCallback: any) => void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bookingsService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BookingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:367\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CalendarOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    initialView: 'dayGridWeek',\n    height: '500px',\n    locale: 'en-sg',\n    events: this.putEventsCurry(this.bookingsService),\n    // delay (ms) is here so that events can be rendered properly on initial load\n    rerenderDelay: 100\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:356\n                            \n                        \n\n                \n                    \n                        Initializes the calendar component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/booking-list/booking-list.component.ts:366\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Component, OnInit, Inject, ViewChild, AfterViewInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { BookingsService } from '../model-service/bookings/bookings.service';\nimport { Booking } from '../model-service/bookings/bookings';\nimport { BookedItem } from '../model-service/items/items';\nimport { getStatus, addHyphen } from '../model-service/statustranslator';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport moment from 'moment';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\nimport { CalendarOptions } from '@fullcalendar/angular';\nimport { formatDate } from '@fullcalendar/core'\nimport { merge, of } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\n/**\n * Main component for displaying the list of bookings.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'booking-list',\n  templateUrl: './booking-list.component.html',\n  styleUrls: ['./booking-list.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\n\nexport class BookingListComponent implements OnInit, AfterViewInit {\n\n  bookings: Booking[];\n  tableColumns: string[] = ['id', 'name', 'time_booked', 'loan_start_time', 'loan_end_time', 'deposit_left', 'status'];\n\n  filterForm: FormGroup;\n\n  bookingDialogOpened = false;\n  summaryDialogOpened = false;\n\n  isLoadingResults = true;\n  resultsLength = 0;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  constructor(\n    private bookingsService: BookingsService,\n    private dialog: MatDialog,\n    private service: ComponentBridgingService,\n    private snackbar: MatSnackBar,\n    private formBuilder: FormBuilder\n  ) { }\n\n  /**\n   * Initializes the filter form.\n   */\n  ngOnInit() {\n    this.filterForm = this.formBuilder.group({\n      name: ['', ''],\n      fromDate: ['', this.dateCheck],\n      toDate: ['', this.dateCheck],\n      status: ['', '']\n    });\n  }\n\n  /**\n   * Load the data after the component's view has been properly initialized.\n   * It also initializes the behaviour when the sorting parameter changes.\n   */\n  ngAfterViewInit(): void {\n    this.reloadData();\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n  }\n\n  /**\n   * Method to load data. When the data is loading, this method will broadcast a message\n   * to turn on the progress bar, until the data is done loading, in which case the\n   * progress bar is turned off and the bookings data are updated.\n   */\n  reloadData() {\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          this.service.publish('progressBarOn');\n          return this.bookingsService.filterBookings(this.parseFilterForm(this.filterForm));\n        }),\n        map(data => {\n          this.isLoadingResults = false;\n          this.service.publish('progressBarOff');\n          this.resultsLength = data.count;\n          return data.results\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          this.service.publish('progressBarOff');\n          this.snackbar.open(\"An error occured.\", \"OK\", { duration: 5000 });\n          return of([]);\n        })\n      ).subscribe(data => { this.bookings = data; });\n  }\n\n  /**\n   * Process the filter form so that the data format can be parsed by the backend.\n   * @param filterForm Filter form\n   */\n  parseFilterForm(filterForm: FormGroup) {\n    const sortCriterion = addHyphen(this.sort.active, this.sort.direction);\n    let filterParams = { ...this.filterForm.value }\n    if (filterForm.value.fromDate) {\n      filterParams.fromDate = filterParams.fromDate.format(\"YYYY-MM-DD HH:mm\");\n    }\n    if (filterForm.value.endDate) {\n      filterParams.endDate = filterParams.endDate.format(\"YYYY-MM-DD HH:mm\");\n    }\n    filterParams = Object.assign(filterParams,\n      {\n        ordering: sortCriterion ? sortCriterion : 'id',\n        page: this.paginator.pageIndex + 1,\n        page_size: this.paginator.pageSize\n      });\n    return filterParams;\n  }\n\n  /**\n   * Reload the data after the page number has changed.\n   * @param pageNumber Page number.\n   */\n  onInputPageChange(pageNumber: number) {\n    this.paginator.pageIndex = Math.min(pageNumber - 1, this.paginator.getNumberOfPages() - 1);\n    this.reloadData();\n  }\n\n  /**\n   * Opens a dialog with booking details when a row of table is clicked.\n   * @param row Table row\n   */\n  openDialog(row: { [x: string]: number; }) {\n    this.bookingsService.getBookedItemsByBooker(row.id)\n      .subscribe(\n        (bookedItemData: BookedItem[]) => {\n          if (!this.bookingDialogOpened) {\n            this.bookingDialogOpened = true;\n            const dialogRef = this.dialog.open(\n              BookingListDialog,\n              { width: '600px', data: { source: row, booked_items: bookedItemData } });\n            dialogRef.afterClosed().subscribe(() => {\n              this.reloadData();\n              this.bookingDialogOpened = false;\n            });\n          }\n        }\n      );\n  }\n\n  /**\n   * Opens a dialog with weekly summary of bookings.\n   */\n  openWeeklySummary() {\n    if (!this.summaryDialogOpened) {\n      this.summaryDialogOpened = true;\n      const dialogRef = this.dialog.open(\n        BookingSummaryDialog,\n        { width: '1200px', height: '600px' }\n      );\n      dialogRef.afterClosed().subscribe(\n        () => { this.summaryDialogOpened = false; }\n      );\n    }\n  }\n\n  /**\n   * Checks if the date format is correct.\n   * @param control Date input\n   */\n  dateCheck(control: AbstractControl): any {\n    const d = control.value;\n    return (d === null || (typeof d === 'string') &&\n      d.length === 0 || moment(d).isValid()) ? null : { date: true };\n  }\n\n  /**\n   * Reloads the data after the filter form is submitted.\n   */\n  onSubmit() {\n    this.reloadData();\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code\n   */\n  returnStatusString(code: string) {\n    return getStatus(code);\n  }\n}\n\n/**\n * Dialog with each booking details.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'booking-list-dialog',\n  templateUrl: './booking-list-dialog.html',\n})\n// tslint:disable-next-line: component-class-suffix\nexport class BookingListDialog {\n  tableColumnsBookedItems: string[] = ['name', 'quantity', 'status'];\n  constructor(\n    private bookingsService: BookingsService,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public bookingData: any,\n    private snackbar: MatSnackBar,\n    private router: Router\n  ) { }\n\n  /**\n   * Updates the status of the booking.\n   * @param status New status\n   */\n  updateStatus(status: string) {\n    const bookingDataCopy = { ...this.bookingData.source };\n    delete bookingDataCopy.id;\n    bookingDataCopy.status = status;\n    this.bookingData.source.status = status;\n    if (status === 'GET') {\n      bookingDataCopy.amount_paid = bookingDataCopy.deposit_left;\n    }\n    this.bookingsService.updateBooking(this.bookingData.source.id, bookingDataCopy).subscribe();\n    this.dialogRef.close();\n    this.printSnackBarStatus(status);\n  }\n\n  /**\n   * Opens a snackbar stating the status of booking has changed.\n   * @param status New status\n   */\n  printSnackBarStatus(status: string) {\n    this.snackbar.open(\n      `Status of Booking #${this.bookingData.source.id} changed to: ${getStatus(status)}`,\n      'OK',\n      { duration: 5000, }\n    );\n  }\n\n  /**\n   * Returns the full string given the status code.\n   * @param code Status code\n   */\n  returnStatusString(code: string) {\n    return getStatus(code);\n  }\n\n  /**\n   * Processes the booking and redirect user to choose an email template.\n   */\n  processAndEmail() {\n    this.updateStatus('PRO');\n    this.router.navigate(['/templates'], { state: { booking: this.bookingData } });\n  }\n\n  /**\n   * Revokes the approval.\n   */\n  revoke() {\n    this.updateStatus('PEN');\n    this.bookingData.booked_items.forEach((ele) => {\n      this.bookingsService.updateBookedItem(ele.id,\n        {\n          booking_source: ele.booking_source.id,\n          item: ele.item.id,\n          quantity: ele.quantity,\n          status: 'PEN'\n        }).subscribe();\n    });\n  }\n\n  /**\n   * Called when the logistics booked are loaned.\n   */\n  getLogistics() {\n    this.updateStatus('GET');\n  }\n\n  /**\n   * Called when the logistics are returned.\n   */\n  returnLogistics() {\n    this.updateStatus('RET');\n  }\n\n  /**\n   * Deletes the booking.\n   */\n  deleteBooking() {\n    this.bookingsService.deleteBooking(this.bookingData.source.id).subscribe();\n    this.dialogRef.close();\n    this.snackbar.open(`Booking #${this.bookingData.source.id} deleted`, 'OK', { duration: 5000 });\n  }\n\n  /**\n   * Opens a confirmation dialog to ensure that the user really wants to delete the booking.\n   */\n  confirmDelete() {\n    const dialogR = this.dialog.open(ConfirmationDialogComponent,\n      { data: `booking #${this.bookingData.source.id}` });\n    dialogR.afterClosed().subscribe(\n      (result) => {\n        if (result.event === 'yes') {\n          this.deleteBooking();\n        }\n      });\n  }\n\n  /**\n   * Navigates the user to edit the booking.\n   */\n  editBooking() {\n    this.dialogRef.close();\n    this.router.navigate(['/edit'],\n      {\n        state:\n        {\n          source: this.bookingData.source,\n          booked_items: this.bookingData.booked_items,\n          edit: true\n        }\n      }\n    );\n  }\n}\n\n/**\n * Component for the weekly summary table.\n */\n@Component({\n  selector: 'booking-summary-dialog',\n  templateUrl: './booking-summary-dialog.html',\n})\nexport class BookingSummaryDialog {\n\n  /**\n   * Initializes the calendar component.\n   */\n  calendarOptions: CalendarOptions = {\n    initialView: 'dayGridWeek',\n    height: '500px',\n    locale: 'en-sg',\n    events: this.putEventsCurry(this.bookingsService),\n    // delay (ms) is here so that events can be rendered properly on initial load\n    rerenderDelay: 100\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public bookingsService: BookingsService\n  ) { }\n\n  /**\n   * Helper method to circumvent the problem that this.bookingService is undefined.\n   * @param bookingService BookingService object.\n   */\n  putEventsCurry(bookingService: BookingsService) {\n    return (args, successCallback, failureCallback) =>\n      this.putEvents(args, successCallback, failureCallback, bookingService);\n  }\n\n  /**\n   * Returns the events to be put in the calendar.\n   * @param args Current configuration of the calendar\n   * @param successCallback Callback method if the data retrieval is successful.\n   * @param failureCallback Callback method if the data retrieval is not successful.\n   * @param bookingsService BookingService object\n   */\n  putEvents(args: any, successCallback, failureCallback, bookingsService: BookingsService) {\n    const options = { year: 'numeric', month: 'numeric', day: 'numeric', locale: 'en-ca' }\n    const startDate = formatDate(args.start, options);\n    const endDate = formatDate(args.end - 86400000, options);\n    bookingsService.getBookingsByDateRange(startDate, endDate).subscribe(\n      (bookingData: Booking[]) => {\n        successCallback(bookingData.map((element) => {\n          return {\n            title: `#${element.id} - ${element.name}`,\n            start: element.loan_start_time,\n            end: new Date(new Date(element.loan_end_time).getTime() + 86400000)\n              .toISOString()\n              .substr(0, 10),\n            color: this.getColour(element.id)\n          };\n        }));\n      },\n      failureCallback\n    );\n  }\n\n  /**\n   * Returns a colour based on the booking id\n   * @param num Booking id.\n   */\n  getColour(num: number) {\n    switch (num % 4) {\n      case 0:\n        return '#3c78b5';\n      case 1:\n        return '#54a8ff';\n      case 2:\n        return '#10b336';\n      case 3:\n        return '#0dd186';\n    }\n  }\n}\n\n    \n\n    \n        Weekly Summary\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Weekly Summary'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingSummaryDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingsService.html":{"url":"injectables/BookingsService.html","title":"injectable - BookingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/bookings/bookings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrlBookedItems\n                            \n                            \n                                    Private\n                                baseUrlBookings\n                            \n                            \n                                    Private\n                                baseUrlBookingToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmBookingByToken\n                            \n                            \n                                createBookedItem\n                            \n                            \n                                createBooking\n                            \n                            \n                                deleteAllBookedItems\n                            \n                            \n                                deleteAllBookings\n                            \n                            \n                                deleteBookedItem\n                            \n                            \n                                deleteBookedItemsByBooker\n                            \n                            \n                                deleteBooking\n                            \n                            \n                                deleteBookingByToken\n                            \n                            \n                                filterBookings\n                            \n                            \n                                getBookedItemList\n                            \n                            \n                                getBookedItemsByBooker\n                            \n                            \n                                getBookersbyBookedItem\n                            \n                            \n                                getBookingByToken\n                            \n                            \n                                getBookingsByDateRange\n                            \n                            \n                                updateBookedItem\n                            \n                            \n                                updateBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/bookings/bookings.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmBookingByToken\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmBookingByToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBookedItem\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBookedItem(item: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createBooking\n                        \n                        \n                    \n                \n            \n            \n                \ncreateBooking(booking: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllBookedItems\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllBookedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllBookings\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBookedItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBookedItem(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBookedItemsByBooker\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBookedItemsByBooker(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBooking\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBooking(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBookingByToken\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBookingByToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterBookings\n                        \n                        \n                    \n                \n            \n            \n                \nfilterBookings(filterParams: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterParams\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookedItemList\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookedItemList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookedItemsByBooker\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookedItemsByBooker(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookersbyBookedItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookersbyBookedItem(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookingByToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookingByToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookingsByDateRange\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookingsByDateRange(start: string, end: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBookedItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBookedItem(id: number, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBooking\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBooking(id: number, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/bookings/bookings.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrlBookedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/booked-items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrlBookings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/bookings'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrlBookingToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/bookings/token'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/bookings/bookings.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingsService {\n\n  private baseUrlBookings = 'http://localhost:8000/api/bookings';\n  private baseUrlBookedItems = 'http://localhost:8000/api/booked-items';\n  private baseUrlBookingToken = 'http://localhost:8000/api/bookings/token';\n\n  constructor(private http: HttpClient) { }\n\n  filterBookings(filterParams: any): Observable {\n    return this.http.get(`${this.baseUrlBookings}/`, { params: filterParams });\n  }\n\n  getBookingsByDateRange(start: string, end: string): Observable {\n    return this.http.get(`${this.baseUrlBookings}/week`, { params: { start, end } });\n  }\n\n  getBookedItemList(): Observable {\n    return this.http.get(`${this.baseUrlBookedItems}/`);\n  }\n\n  getBookedItemsByBooker(id: number): Observable {\n    return this.http.get(`${this.baseUrlBookedItems}/booking_source_id/${id}/`);\n  }\n\n  getBookersbyBookedItem(id: number): Observable {\n    return this.http.get(`${this.baseUrlBookedItems}/item_id/${id}/`);\n  }\n\n  createBooking(booking: object): Observable {\n    return this.http.post(`${this.baseUrlBookings}/edit`, booking);\n  }\n\n  createBookedItem(item: object): Observable {\n    return this.http.post(`${this.baseUrlBookedItems}/`, item);\n  }\n\n  updateBooking(id: number, value: any): Observable {\n    return this.http.put(`${this.baseUrlBookings}/${id}`, value);\n  }\n\n  updateBookedItem(id: number, value: any): Observable {\n    return this.http.put(`${this.baseUrlBookedItems}/${id}/`, value);\n  }\n\n  deleteBooking(id: number): Observable {\n    return this.http.delete(`${this.baseUrlBookings}/${id}`);\n  }\n\n  deleteBookedItem(id: number): Observable {\n    return this.http.delete(`${this.baseUrlBookedItems}/${id}/`);\n  }\n\n  deleteBookedItemsByBooker(id: number): Observable {\n    return this.http.delete(`${this.baseUrlBookedItems}/booking_source_id/${id}/`);\n  }\n\n  deleteAllBookings(): Observable {\n    return this.http.delete(`${this.baseUrlBookings}/`);\n  }\n\n  deleteAllBookedItems(): Observable {\n    return this.http.delete(`${this.baseUrlBookedItems}/`);\n  }\n\n  getBookingByToken(token: string): Observable {\n    return this.http.get(`${this.baseUrlBookingToken}/${token}`);\n  }\n\n  deleteBookingByToken(token: string): Observable {\n    return this.http.delete(`${this.baseUrlBookingToken}/${token}`);\n  }\n\n  confirmBookingByToken(token: string): Observable {\n    return this.http.patch(`${this.baseUrlBookingToken}/confirm/${token}`, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentBridgingService.html":{"url":"injectables/ComponentBridgingService.html","title":"injectable - ComponentBridgingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentBridgingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/componentbridging.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                on\n                            \n                            \n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            on\n                        \n                        \n                    \n                \n            \n            \n                \non(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/componentbridging.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \npublish(eventName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/componentbridging.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/componentbridging.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ComponentBridgingService {\n\n    private subjects: Subject[] = [];\n\n    publish(eventName: string) {\n        // ensure a subject for the event name exists\n        this.subjects[eventName] = this.subjects[eventName] || new Subject();\n\n        // publish event\n        this.subjects[eventName].next();\n    }\n\n    on(eventName: string): Observable {\n        // ensure a subject for the event name exists\n        this.subjects[eventName] = this.subjects[eventName] || new Subject();\n\n        // return observable\n        return this.subjects[eventName].asObservable();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationDialogComponent.html":{"url":"components/ConfirmationDialogComponent.html","title":"component - ConfirmationDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmationDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirmation-dialog/confirmation-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Component for confirmation dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-dialog\n            \n\n            \n                styleUrls\n                ./confirmation-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                dialogSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialogSource: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirmation-dialog/confirmation-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogSource\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog(result: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmation-dialog/confirmation-dialog.component.ts:26\n                \n            \n\n\n            \n                \n                    Closes the dialog and sends the user's response back to parent component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User's response.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmation-dialog/confirmation-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirmation-dialog/confirmation-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirmation-dialog/confirmation-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Component for confirmation dialog.\n */\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public dialogSource: any\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Closes the dialog and sends the user's response back to parent component.\n   * @param result User's response.\n   */\n  closeDialog(result: string){\n    this.dialogRef.close({event: result});\n  }\n}\n\n    \n\n    \n        Delete {{dialogSource}}\nAre you sure you want to remove {{dialogSource}}? This action is irreversible.\n\n\n    Yes\n    No\n\n    \n\n    \n                \n                    ./confirmation-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Delete {{dialogSource}}Are you sure you want to remove {{dialogSource}}? This action is irreversible.    Yes    No'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfirmationTemplate.html":{"url":"classes/ConfirmationTemplate.html","title":"class - ConfirmationTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfirmationTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/confirmationtemplates/confirmationtemplates.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                link_string\n                            \n                            \n                                subject\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link_string\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConfirmationTemplate {\n  id: number;\n  link_string: string;\n  subject: string;\n  template: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationTemplateComponent.html":{"url":"components/ConfirmationTemplateComponent.html","title":"component - ConfirmationTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmationTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirmation-template/confirmation-template.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-template\n            \n\n            \n                styleUrls\n                ./confirmation-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiKey\n                            \n                            \n                                confirmationMailForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create_or_update\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, confirmationTemplateService: ConfirmationTemplatesService, snackbar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirmation-template/confirmation-template.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationTemplateService\n                                                  \n                                                        \n                                                                        ConfirmationTemplatesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create_or_update\n                        \n                        \n                    \n                \n            \n            \n                \ncreate_or_update(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmation-template/confirmation-template.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirmation-template/confirmation-template.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : apiKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirmation-template/confirmation-template.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmationMailForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirmation-template/confirmation-template.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationTemplate } from './../model-service/confirmationtemplates/confirmationtemplates';\nimport { ConfirmationTemplatesService } from './../model-service/confirmationtemplates/confirmationtemplates.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { apiKey } from '../settings';\n\n@Component({\n  selector: 'app-confirmation-template',\n  templateUrl: './confirmation-template.component.html',\n  styleUrls: ['./confirmation-template.component.scss']\n})\nexport class ConfirmationTemplateComponent implements OnInit {\n  confirmationMailForm: FormGroup;\n  apiKey = apiKey;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private confirmationTemplateService: ConfirmationTemplatesService,\n    private snackbar: MatSnackBar,\n    private router: Router\n  ) {\n    this.confirmationMailForm = this.formBuilder.group({\n      link_string: '',\n      subject: '',\n      template: ''\n    });\n    this.confirmationTemplateService.getConfirmationTemplate()\n      .subscribe(\n        (template: ConfirmationTemplate) => {\n          delete template.id;\n          this.confirmationMailForm.setValue(template);\n        },\n        (err) => {\n        }\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  create_or_update(data: any) {\n    this.confirmationTemplateService.updateTemplate(data).subscribe();\n    this.router.navigate(['/'])\n    this.snackbar.open('Updated confirmation template', 'OK', {duration: 5000, });\n  }\n}\n\n    \n\n    \n        \n  \n    Link Placeholder\n    \n  \n  \n  \n    Subject\n    \n  \n  \n  \n  \n  Submit\n\n    \n\n    \n                \n                    ./confirmation-template.component.scss\n                \n                .container {\n    background-image: url(\"../../assets/Blue.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Link Placeholder              Subject              Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfirmationTemplatesService.html":{"url":"injectables/ConfirmationTemplatesService.html","title":"injectable - ConfirmationTemplatesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfirmationTemplatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getUrl\n                            \n                            \n                                    Private\n                                postUrl\n                            \n                            \n                                    Private\n                                resendUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfirmationTemplate\n                            \n                            \n                                resendConfirmation\n                            \n                            \n                                updateTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendConfirmation\n                        \n                        \n                    \n                \n            \n            \n                \nresendConfirmation(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTemplate(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/get_confirmation'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/update_confirmation'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resendUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/resend_confirmation'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmationTemplatesService {\n  private getUrl = 'http://localhost:8000/api/get_confirmation';\n  private postUrl = 'http://localhost:8000/api/update_confirmation';\n  private resendUrl = 'http://localhost:8000/api/resend_confirmation';\n\n  constructor(private http: HttpClient) { }\n\n  getConfirmationTemplate(): Observable {\n    return this.http.get(`${this.getUrl}`);\n  }\n\n  updateTemplate(value: any): Observable {\n    return this.http.post(`${this.postUrl}`, value);\n  }\n\n  resendConfirmation(value: any): Observable {\n    return this.http.post(`${this.resendUrl}`, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Email.html":{"url":"classes/Email.html","title":"class - Email","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Email\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/emailtemplates/email.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                recipient\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/email.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/email.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/email.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Email {\n  recipient: string;\n  subject: string;\n  message: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailTemplate.html":{"url":"classes/EmailTemplate.html","title":"class - EmailTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/emailtemplates/emailtemplates.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                subject\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/emailtemplates.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/emailtemplates.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/emailtemplates.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/emailtemplates.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmailTemplate {\n  id: number;\n  name: string;\n  subject: string;\n  template: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailTemplatesService.html":{"url":"injectables/EmailTemplatesService.html","title":"injectable - EmailTemplatesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailTemplatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/emailtemplates/emailtemplates.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrlTemplate\n                            \n                            \n                                    Private\n                                baseUrlTemplates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTemplate\n                            \n                            \n                                deleteAllTemplates\n                            \n                            \n                                deleteTemplate\n                            \n                            \n                                getTemplateById\n                            \n                            \n                                getTemplateList\n                            \n                            \n                                updateTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTemplate(template: EmailTemplate)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                                EmailTemplate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllTemplates\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTemplate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemplateById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemplateById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTemplateList\n                        \n                        \n                    \n                \n            \n            \n                \ngetTemplateList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTemplate(id: number, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrlTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/email_template'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrlTemplates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/email_templates'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/emailtemplates.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { EmailTemplate } from './emailtemplates';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailTemplatesService {\n\n  private baseUrlTemplates = 'http://localhost:8000/api/email_templates';\n  private baseUrlTemplate = 'http://localhost:8000/api/email_template';\n\n\n  constructor(private http: HttpClient) { }\n\n  getTemplateList(): Observable {\n    return this.http.get(`${this.baseUrlTemplates}`);\n  }\n\n  getTemplateById(id: number): Observable {\n    return this.http.get(`${this.baseUrlTemplate}/${id}`);\n  }\n\n  createTemplate(template: EmailTemplate): Observable {\n    return this.http.post(`${this.baseUrlTemplates}`, template);\n  }\n\n  updateTemplate(id: number, value: any): Observable {\n    return this.http.put(`${this.baseUrlTemplate}/${id}`, value);\n  }\n\n  deleteTemplate(id: number): Observable {\n    return this.http.delete(`${this.baseUrlTemplate}/${id}`);\n  }\n\n  deleteAllTemplates(): Observable {\n    return this.http.delete(`${this.baseUrlTemplates}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExceedAmountValidator.html":{"url":"classes/ExceedAmountValidator.html","title":"class - ExceedAmountValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExceedAmountValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/booking-details/booking-details.component.ts\n        \n\n            \n                Description\n            \n            \n                Helper class to check if the number of items booked exceeds the number available in the database.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createExceedAmountValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createExceedAmountValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createExceedAmountValidator(itemsService: ItemsService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/booking-details/booking-details.component.ts:318\n                \n            \n\n\n            \n                \n                    Returns a method to carry out the validation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    itemsService\n                                    \n                                                ItemsService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ItemsService object.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AsyncValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationTemplatesService } from './../model-service/confirmationtemplates/confirmationtemplates.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormArray, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\nimport { BookingsService } from '../model-service/bookings/bookings.service';\n\nimport { MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport moment from 'moment';\nimport { Items, BookedItem } from '../model-service/items/items';\nimport { ItemsService } from '../model-service/items/items.service';\nimport { Booking } from '../model-service/bookings/bookings';\nimport { Router } from '@angular/router';\nimport { Dictionary } from '@fullcalendar/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\n/**\n * Main component for the booking form.\n */\n@Component({\n  selector: 'app-booking-details',\n  templateUrl: './booking-details.component.html',\n  styleUrls: ['./booking-details.component.scss'],\n  providers: [\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\n  ],\n})\nexport class BookingDetailsComponent implements OnInit {\n\n  detailsForm: FormGroup;\n  itemsForm: FormGroup;\n\n  itemArray: Items[];\n\n  inputGroup1: any;\n  inputGroup2: any;\n\n  itemColumns = ['item', 'quantity'];\n\n  editMode: boolean;\n  bookingSubmitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private bookingsService: BookingsService,\n    private itemsService: ItemsService,\n    private service: ComponentBridgingService,\n    private router: Router\n  ) { this.itemsService.getItemsList().subscribe((data) => this.itemArray = data); }\n\n  /**\n   * Initializes the booking form based on whether the user is editing a booking or creating a new booking.\n   */\n  ngOnInit() {\n    this.editMode = history.state.edit ? true : false;\n\n    this.detailsForm = this.formBuilder.group({\n      name: [history.state.source ? history.state.source.name : '', Validators.required],\n      email: [history.state.source ? history.state.source.email : '', [Validators.required, this.emailCheck]],\n      organization: [history.state.source ? history.state.source.organization : '', Validators.required],\n      phone_no: [history.state.source ? history.state.source.phone_no : '', [Validators.required, this.phoneCheck]],\n      reason: [history.state.source ? history.state.source.reason : '', Validators.required],\n      loan_start_time: [history.state.source ? history.state.source.loan_start_time : '', [Validators.required, this.dateCheck]],\n      loan_end_time: [history.state.source ? history.state.source.loan_end_time : '', [Validators.required, this.dateCheck]],\n    });\n    this.itemsForm = this.formBuilder.group({\n      items: history.state.booked_items ?\n        new FormArray(this.initialItemInput(history.state.booked_items),\n          [this.checkForRepeat], ExceedAmountValidator.createExceedAmountValidator(this.itemsService)) :\n        new FormArray([this.newItemInput()],\n          [this.checkForRepeat], ExceedAmountValidator.createExceedAmountValidator(this.itemsService))\n    });\n\n    this.checkout();\n  }\n\n  /**\n   * Checks if the date is of correct format.\n   * @param control Date input.\n   */\n  dateCheck(control: AbstractControl): any {\n    return moment(control.value).isValid() ? null : { date: true };\n  }\n\n  /**\n   * Checks if the phone number is of correct format.\n   * @param control Phone number input.\n   */\n  phoneCheck(control: AbstractControl): any {\n    return new RegExp('(8[1-8][0-9]{6}|9[0-8][0-9]{6})').test(control.value) ? null : { phone: true };\n  }\n\n  /**\n   * Checks if the email follows the NUS email format.\n   * @param control Email input.\n   */\n  emailCheck(control: AbstractControl): any {\n    return new RegExp('e[0-9]{7}@u\\.nus\\.edu').test(control.value) ? null : { email: true };\n  }\n\n  /**\n   * Returns a new row.\n   */\n  newItemInput(): FormGroup {\n    return this.formBuilder.group({\n      item: [2, [Validators.required]],\n      quantity: [1, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  /**\n   * Parses the booking data from history.state.source into an array.\n   * @param data Booking data.\n   */\n  initialItemInput(data: any) {\n    const result = [];\n    data.forEach((element: BookedItem) => {\n      result.push(this.createItemInputWithData(element));\n    });\n    return result;\n  }\n\n  /**\n   * Returns filled rows when the user is editing a booking.\n   * @param bookedItem Initial booked items.\n   */\n  createItemInputWithData(bookedItem: BookedItem): FormGroup {\n    return this.formBuilder.group({\n      item: [bookedItem.item.id, Validators.required],\n      quantity: [bookedItem.quantity, [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  /**\n   * Returns the list of items to be booked.\n   */\n  getItemInputForm(): FormArray {\n    return this.itemsForm.get('items') as FormArray;\n  }\n\n  /**\n   * Adds a new row to the form when the user presses add row button.\n   */\n  addBlankItem() {\n    this.getItemInputForm().push(this.newItemInput());\n  }\n\n  /**\n   * Removes the i-th row when the user presses the delete button.\n   * @param i Row number.\n   */\n  removeItemInput(i: number) {\n    this.getItemInputForm().removeAt(i);\n  }\n\n  /**\n   * Updates the current form input.\n   */\n  checkout() {\n    this.inputGroup1 = this.detailsForm.value;\n    this.inputGroup2 = this.itemsForm.value;\n  }\n\n  /**\n   * Returns the item given the item id.\n   * @param id Item id.\n   */\n  returnItemGivenId(id: number) {\n    return this.itemArray.filter(element => element.id === id)[0];\n  }\n\n  /**\n   * Returns the total deposit payable.\n   */\n  getTotalDeposit() {\n    return this.itemArray ? Math.min(200, this.inputGroup2.items.reduce((acc: number, currentItem: any) =>\n      acc + this.returnItemGivenId(currentItem.item).deposit * currentItem.quantity\n      , 0)) : 0;\n  }\n\n  /**\n   * Helper method to allow user to navigate the stepper back and forth \n   * while at the same time updating the form contents for use in the checkout page\n   * @param event Page change event\n   */\n  selectionChange(event) {\n    if (event.selectedIndex === 2) {\n      this.checkout();\n    }\n  }\n\n  /**\n   * Helper method to check if there are duplicate items in the form.\n   * @param formArray Item input form.\n   */\n  checkForRepeat(formArray: FormArray) {\n    const itemDict: Dictionary = {};\n    formArray.value.forEach((ele) => {\n      if (itemDict[ele.item]) {\n        itemDict[ele.item] += 1;\n      } else {\n        itemDict[ele.item] = 1;\n      }\n    });\n    for (const key in itemDict) {\n      if (itemDict[key] > 1) {\n        return { duplicate: true };\n      }\n    }\n  }\n\n  /**\n   * Checks if the form returns duplicate error.\n   */\n  checkForErrors() {\n    const controlErrors: ValidationErrors = this.itemsForm.get('items').errors;\n    return controlErrors ? controlErrors : { duplicate: false, exceed: false };\n  }\n\n  /**\n   * Prints the current page.\n   */\n  print() {\n    window.print();\n  }\n\n  /**\n   * Parses the data to be sent to the backend.\n   */\n  onSubmit() {\n    this.service.publish('progressBarOn');\n    const bookingDataCopy = { ...this.inputGroup1 };\n    const finalData: Booking = Object.assign(bookingDataCopy,\n      {\n        time_booked: (history.state.source ? history.state.source.time_booked : new Date()),\n        status: 'PEN',\n        deposit_left: this.getTotalDeposit(),\n        amount_paid: 0\n      }) as Booking;\n    if (!history.state.edit) {\n      bookingDataCopy.loan_start_time = bookingDataCopy.loan_start_time.format('YYYY-MM-DD');\n      bookingDataCopy.loan_end_time = bookingDataCopy.loan_end_time.format('YYYY-MM-DD');\n      this.bookingsService.createBooking(finalData).subscribe(\n        (data: any) => {\n          this.inputGroup2.items.forEach(element => {\n            const finalItemData = { booking_source: data.id, item: element.item, quantity: element.quantity, status: 'PEN' };\n            this.bookingsService.createBookedItem(finalItemData).subscribe();\n          });\n          this.router.navigate(['/edit/confirmed'], { state: { id: data.id, name: data.name, email: data.email, submitted: true } });\n          this.service.publish('progressBarOff');\n        });\n    } else if (history.state.edit === true) { // touchwood condition lol\n      this.bookingsService.updateBooking(history.state.source.id, finalData).subscribe(\n        (data: any) => {\n          // reason for deletion: I don't bother to check whether the booked item exists or not\n          this.bookingsService.deleteBookedItemsByBooker(data.id).subscribe();\n          this.inputGroup2.items.forEach(element => {\n            const finalItemData = { booking_source: data.id, item: element.item, quantity: element.quantity, status: 'PEN' };\n            this.bookingsService.createBookedItem(finalItemData).subscribe();\n          });\n          this.router.navigate(['/edit/confirmed'], { state: { id: data.id, name: data.name, email: data.email, submitted: true } });\n          this.service.publish('progressBarOff');\n        });\n    }\n  }\n}\n\n/**\n * After the user submits a booking, the user will be redirected to a page saying that their booking request has been received.\n */\n@Component({\n  selector: 'app-booking-confirm',\n  templateUrl: './booking-confirm.component.html',\n})\nexport class BookingConfirmComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private snackbar: MatSnackBar,\n    private confirmationTemplatesService: ConfirmationTemplatesService\n  ) { }\n\n  /**\n   * If the form is not submitted, the user will be redirected to the page.\n   */\n  ngOnInit(): void {\n    if (!history.state.submitted) {\n      this.router.navigate(['/edit']);\n    }\n  }\n\n  /**\n   * Resends the confirmation email.\n   */\n  resend(): void {\n    this.confirmationTemplatesService.resendConfirmation({\n      id: history.state.id,\n      email: history.state.email\n    }).subscribe(\n      (success: any) => {\n        this.snackbar.open('Email resent. Please wait...', 'OK', { duration: 5000, });\n      }\n    );\n  }\n}\n\n/**\n * Helper class to check if the number of items booked exceeds the number available in the database.\n */\nexport class ExceedAmountValidator {\n  /**\n   * Returns a method to carry out the validation.\n   * @param itemsService ItemsService object.\n   */\n  static createExceedAmountValidator(itemsService: ItemsService): AsyncValidatorFn {\n    return (formArray: FormArray): Observable => {\n      return itemsService.getItemsList().pipe(map((items) => {\n        for (const element of formArray.value) {\n          if (element.quantity > items.filter(ele => ele.id === element.item)[0].quantity) {\n            return { exceed: true };\n          }\n        }\n      }));\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                            \n                                issueForm\n                            \n                            \n                                    Private\n                                myScrollContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, issueService: IssueService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issueService\n                                                  \n                                                        \n                                                                        IssueService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emailCheck\n                        \n                        \n                    \n                \n            \n            \n                \nemailCheck(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issueForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myScrollContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('target')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { IssueService } from '../model-service/issue/issue.service';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  issue: any;\n\n  issueForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private issueService: IssueService,\n    private snackbar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.issueForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, this.emailCheck]],\n      detail: ['', Validators.required]\n    });\n  }\n\n  @ViewChild('target') private myScrollContainer: ElementRef;\n\n  emailCheck(control: AbstractControl): any {\n    return new RegExp('e[0-9]{7}@u\\.nus\\.edu').test(control.value) ? null : { email: true };\n  }\n\n  onSubmit() {\n    const data = this.issueForm.value;\n    this.issueService.createIssue(data).subscribe();\n    this.snackbar.open('New issue submitted', 'OK', { duration: 5000 });\n    this.issueForm.reset();\n  }\n}\n\n    \n\n    \n        \nHome\n\n\n    \n        \n        \n            \n                \n                    \n                        Booking made EASY\n                        \n                        \n                            A few clicks is all it takes. Here, you can book any item you want, by just following \n                            some simple steps.\n                            \n                             Best experience on your desktop/laptop. Start booking now!\n                        \n                        \n                    \n\n                    \n                        \n                            \n                                Check Item List\n                            \n                            \n                                **You can check the available item for loaning here\n                            \n                        \n                        \n                            \n                                Make a Booking\n                            \n                            \n                                **You can start book your desired item here\n                            \n                        \n                    \n                \n                \n                \n            \n\n            \n            \n                \n                Follow these simple steps to get your item\n            \n\n            \n                \n                    \n                    Click on the booking button to start\n                \n                \n                \n                    \n                    Fill in your personal detail\n                \n                \n                \n                    \n                    Specify the item desired and the quantity\n                \n                \n                \n                    \n                    Agree the term and condition and submit\n                \n            \n        \n\n        \n        \n            \n                Why our logistic website?\n            \n            \n                \n                    \n                    SIMPLE\n                    The layout of our website is incredibly simple and intuitive that everyone can understand. Of course, we always care for your eyes and your mental health!\n                \n                \n                    \n                    ORGANIZE\n                    Hate to be messy but lazy to organize? No worry, we are here to make sure everything is in order. Your concern is always our no. 1 priority.\n                \n                \n                    \n                    FAST\n                    FAST, FAST, FAST! We all do not like to wait. Here, experience the fastest booking experience in your lifetime!\n                \n            \n            \n                \n                Not your no.1 booking experience?\n                Let us know how to improve below!\n            \n        \n\n        \n        \n            \n                \n                Thank you for making our website better!\n            \n              \n            \n                \n                    Name\n                    \n                \n\n                \n                    Email\n                    \n                    Please enter a valid NUS email.\n                \n\n                \n                    Issue detail\n                    \n                \n\n                \n                    Submit\n                \n            \n        \n     \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                body, html {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    overflow: hidden;\n}\n\n.container {\n    width: 100%;\n    height: 90vh;\n    scroll-behavior: smooth;\n    scroll-snap-type: y mandatory;\n    scroll-snap-align: center;\n    overflow-y: scroll;\n}\n\n// Section 1 of the homepage: Main content and tutorials\n.sec1 {\n    display: flex;\n    flex-direction: column;\n    height: 90vh;\n    scroll-snap-align: center;\n    flex: 1;\n}\n\n.main {\n    margin-top: 0vh;\n    display: flex;\n    flex: 4;\n}\n\n.left{\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n}\n\n.main_caption {\n    margin: 10% 2.5% 0% 15%;\n}\n\n.main_caption h1{\n    color:RGB(33, 29, 30);\n    font-weight: bolder;\n    font-size: 2.5vw;\n    font-family: 'Lora', elegant, serif \n}\n\n.paragraph {\n    border-left: 1px #ccc solid;\n    padding-left: 10px;\n}\n\n.main_caption p {\n    color: RGB(165, 174, 183), RGB(211, 169, 153);\n    font-family: 'Roboto', sans-serif;\n}\n\n.main_caption #EASY {\n    color: #0e67ff;\n}\n\n.main_caption p{\n    font-size: 150%;\n}\n\n.user_button {\n    margin: 0% 2.5% 0% 15%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n}\n\n.button1 {\n    margin-right: 1.5%;\n    padding-right: 1.5%;\n    border-right: 1px #ccc solid;\n\n}\n\n.button2 {\n    margin-left: 2.5%;\n}\n\n.button1 #but-1{\n    padding: 8.5% 25% 8.5% 25%;\n    border: 1px #000 solid;\n    box-shadow: 1px 1px #888888;\n    font-size: large;\n}\n\n.button2 #but-2{\n    padding: 8.5% 25% 11% 25%;\n    border: 1px #000 solid;\n    background-color: #ffba00;\n    box-shadow: 1px 1px #888888;\n    font-size: large;\n}\n\n.right {\n    flex: 1;\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Logistic SVG 1.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    overflow: hidden;\n    padding: 2.5% 5% 2.5% 0%;\n    margin-top: 2.5%;\n    \n}\n\n.tutorial_title {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    margin: 1% 0% 0% 0%;\n    flex: 1;\n    border-bottom: 1px #000 solid;\n}\n\n.tutorial_caption {\n    flex: 50;\n    margin-left: 0%;\n}\n\n.tutorial_icon {\n    flex: 1;\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Steps Icon.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 1.5%;\n    margin-left: 5%;\n}\n\n.steps {\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    margin: 0% 1% 0% 2.5%;\n    flex: 4;\n    font-family: 'Quicksand', sans-serif;\n}\n\n.stepicon1 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Click.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 25%;\n    margin: 14% 8%;\n}\n.stepicon2 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Fill form.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 25%;\n    margin: 28% 28%;\n}\n.stepicon3 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/goods.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 25%;\n    margin: 8% 0%;\n}\n.stepicon4 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Submit.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 25%;\n    margin: 8% 0%;\n}\n\n#arrow1{\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Right arrow.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 5%;\n    margin-top: 2.5%;\n}\n\n#arrow2{\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Right arrow.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 5%;\n    margin-top: 2.5%;\n}\n\n#arrow3{\n    background-image: url(\"../../assets/Homepage\\ icon\\ 1/Right arrow.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 5%;\n    margin-top: 2.5%;\n}\n\n// Section 2 of the homepage: Some good things about the logistic website\n.sec2 {\n    height: 90vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-top: 1px #000 solid;\n    scroll-snap-align: center;\n    flex: 1;\n}\n\n.title2 {\n    display: flex;\n    flex: 1;\n    font-weight: bold;\n    font-size: 2rem;\n    justify-content: flex-end;\n    align-items: center;\n    font-family: 'Quicksand', sans-serif;\n}\n\n.advantages {\n    display: flex;\n    flex: 3;\n    justify-content: space-around;\n    flex-direction: row;\n    align-content: flex-end;\n}\n\n.improve {\n    flex: 1;\n    font-family: 'Quicksand', sans-serif;\n}\n\n.ad1{\n    flex: 1;\n    border: 1px #ccc solid;\n}\n\n.ad2{\n    flex: 1;\n    border: 1px #ccc solid;\n}\n.ad3{\n    flex: 1;\n    border: 1px #ccc solid;\n}\n.advantages h2 {\n    font-family: 'Oswald', serif;\n    font-weight: normal;\n}\n\n.advantages p {\n    margin: 2%;\n    text-align: center;\n    font-family: 'Lato', sans-serif;\n    color:1px #000 solid;\n}\n\nh2 {\n   text-align: center;\n   font-weight: bold;\n   color: #000; \n}\n\n.improve p {\n    margin-top: 5%;\n    font-weight: bold;\n    font-size: 1.5rem;\n    text-align: center;\n}\n\n#img1 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 2/Simple.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin: 5%;\n    padding: 20%;\n}\n\n#img2 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 2/Organize.png\");\n    background-position: top;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin: 5%;\n    padding: 20%;\n}\n\n#img3 {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 2/Fast.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    margin: 5%;\n    padding: 20%;\n}\n\n// Section 3 of the homepage: Appreciation and issue report form\n.sec3 {\n    height: 90vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px #000 solid;\n    scroll-snap-align: center;\n}\n\n.appreciate {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n}\n\n.appreciate p{\n    text-align: center;\n    font-size: xx-large;\n    font-family: 'Roboto', serif;\n}\n\n.appreciate_icon {\n    background-image: url(\"../../assets/Homepage\\ icon\\ 3/Appreciate.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: contain;\n    padding: 20%;\n    margin: 1%;\n}\n\nform{\n    width: 30vw;\n    display: flex;\n    flex-direction: column;\n    flex-basis: 50%;\n    padding: 1% 25% 0 25%;\n}\n\nmat-form-field {\n    flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Home                                                                                            Booking made EASY                                                                            A few clicks is all it takes. Here, you can book any item you want, by just following                             some simple steps.                                                         Best experience on your desktop/laptop. Start booking now!                                                                                                                                                                            Check Item List                                                                                        **You can check the available item for loaning here                                                                                                                                        Make a Booking                                                                                        **You can start book your desired item here                                                                                                                                                                                            Follow these simple steps to get your item                                                                                Click on the booking button to start                                                                                        Fill in your personal detail                                                                                        Specify the item desired and the quantity                                                                                        Agree the term and condition and submit                                                                                Why our logistic website?                                                                                SIMPLE                    The layout of our website is incredibly simple and intuitive that everyone can understand. Of course, we always care for your eyes and your mental health!                                                                        ORGANIZE                    Hate to be messy but lazy to organize? No worry, we are here to make sure everything is in order. Your concern is always our no. 1 priority.                                                                        FAST                    FAST, FAST, FAST! We all do not like to wait. Here, experience the fastest booking experience in your lifetime!                                                                        Not your no.1 booking experience?                Let us know how to improve below!                                                                                Thank you for making our website better!                                                                          Name                                                                        Email                                        Please enter a valid NUS email.                                                    Issue detail                                                                        Submit                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Issue.html":{"url":"classes/Issue.html","title":"class - Issue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Issue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/issue/issue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                issue\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/issue/issue.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/issue/issue.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            issue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/issue/issue.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/issue/issue.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Issue{\n    id:number;\n    name: string;\n    email: string;\n    issue: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueService.html":{"url":"injectables/IssueService.html","title":"injectable - IssueService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/issue/issue.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createIssue\n                            \n                            \n                                deleteAll\n                            \n                            \n                                deleteIssue\n                            \n                            \n                                getIssue\n                            \n                            \n                                getIssueList\n                            \n                            \n                                updateIssue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/issue/issue.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createIssue\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIssue(issue: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/issue/issue.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    issue\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/issue/issue.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteIssue\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteIssue(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/issue/issue.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIssue\n                        \n                        \n                    \n                \n            \n            \n                \ngetIssue(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/issue/issue.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIssueList\n                        \n                        \n                    \n                \n            \n            \n                \ngetIssueList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/issue/issue.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIssue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIssue(id: number, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/issue/issue.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/issues'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/issue/issue.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueService {\n\n  private baseUrl = 'http://localhost:8000/api/issues';\n\n  constructor(private http: HttpClient) { }\n\n  getIssueList(): Observable {\n    return this.http.get(`${this.baseUrl}/`);\n  }\n\n  getIssue(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}/`);\n  }\n\n  createIssue(issue: Object): Observable {\n    return this.http.post(`${this.baseUrl}/`, issue);\n  }\n\n  updateIssue(id: number, value: any): Observable {\n    return this.http.put(`${this.baseUrl}/${id}/`, value);\n  }\n\n  deleteIssue(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}/`);\n  }\n\n  deleteAll(): Observable {\n    return this.http.delete(`${this.baseUrl}/`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemDetailsComponent.html":{"url":"components/ItemDetailsComponent.html","title":"component - ItemDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ItemDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/item-details/item-details.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the item form.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-details\n            \n\n            \n                styleUrls\n                ./item-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                item\n                            \n                            \n                                    Public\n                                itemData\n                            \n                            \n                                itemForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDialogTitle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, itemData: any, formBuilder: FormBuilder, itemsService: ItemsService, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/item-details/item-details.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemsService\n                                                  \n                                                        \n                                                                        ItemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDialogTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetDialogTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-details/item-details.component.ts:48\n                \n            \n\n\n            \n                \n                    Returns data based on the user's intention on whether to edit or create an item\n\n\n                    \n                        Returns :     \"Create Item\" | \"Edit Item\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-details/item-details.component.ts:32\n                \n            \n\n\n            \n                \n                    Initializes the item form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-details/item-details.component.ts:59\n                \n            \n\n\n            \n                \n                    Process the user input once the submit button is clicked.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-details/item-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-details/item-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-details/item-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-details/item-details.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ItemsService } from '../model-service/items/items.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n/**\n * Component for the item form.\n */\n@Component({\n  selector: 'app-item-details',\n  templateUrl: './item-details.component.html',\n  styleUrls: ['./item-details.component.scss']\n})\nexport class ItemDetailsComponent implements OnInit {\n\n  item: any;\n\n  itemForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public itemData: any,\n    private formBuilder: FormBuilder,\n    private itemsService: ItemsService,\n    private snackbar: MatSnackBar\n  ) { }\n\n  /**\n   * Initializes the item form.\n   */\n  ngOnInit(): void {\n    this.item = this.itemData.item;\n\n    this.itemForm = this.formBuilder.group({\n      name: [this.item ? this.item.name : '', Validators.required],\n      category: [this.item ? this.item.category : '', Validators.required],\n      quantity: [this.item ? this.item.quantity : '', Validators.required],\n      deposit: [this.item ? this.item.deposit : '', Validators.required],\n      item_status: [this.item ? this.item.item_status : '', Validators.required],\n      remarks: [this.item ? this.item.remarks : '', '']\n    });\n  }\n\n  /**\n   * Returns data based on the user's intention on whether to edit or create an item\n   */\n  getDialogTitle() {\n    if (this.itemData.mode === 'create') {\n      return 'Create Item';\n    } else if (this.itemData.mode === 'edit') {\n      return 'Edit Item';\n    }\n  }\n\n  /**\n   * Process the user input once the submit button is clicked.\n   */\n  onSubmit() {\n    this.dialogRef.close();\n    const data = this.itemForm.value;\n    if (data.remarks.length === 0) {\n      data.remarks = 'N/A';\n    }\n    if (this.itemData.mode === 'create') {\n      this.itemsService.createItem(data).subscribe();\n      this.snackbar.open('New item created', 'OK', { duration: 5000 });\n    } else if (this.itemData.mode === 'edit') {\n      this.itemsService.updateItem(this.itemData.item.id, data).subscribe();\n      this.snackbar.open('Item ' + this.itemData.item.id + ' edited', 'OK', { duration: 5000 });\n    }\n  }\n}\n\n    \n\n    \n        \n    {{getDialogTitle()}}\n    \n        \n            Name\n            \n            This field is required.\n        \n        \n        \n            Category\n            \n            This field is required.\n        \n        \n        \n            Quantity\n            \n            Please enter a positive integer.\n        \n        \n        \n            $ &nbsp;\n            Deposit\n            \n            Please enter a positive number.\n        \n        \n        \n            Status\n            \n            This field is required.\n        \n        \n        \n            Remarks\n            \n        \n        \n    \n    \n        Cancel\n        Submit\n    \n\n    \n\n    \n                \n                    ./item-details.component.scss\n                \n                .container {\n    background-image: url(\"../../assets/Orange.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{getDialogTitle()}}                        Name                        This field is required.                                    Category                        This field is required.                                    Quantity                        Please enter a positive integer.                                    $              Deposit                        Please enter a positive number.                                    Status                        This field is required.                                    Remarks                                            Cancel        Submit    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemListComponent.html":{"url":"components/ItemListComponent.html","title":"component - ItemListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ItemListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/item-list/item-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the page displaying the list of items.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                item-list\n            \n\n            \n                styleUrls\n                ./item-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                filterForm\n                            \n                            \n                                formDialogOpened\n                            \n                            \n                                itemDialogOpened\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                lc\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                subscription\n                            \n                            \n                                tableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItems\n                            \n                            \n                                itemFilterPredicate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputPageChange\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openCreateForm\n                            \n                            \n                                openDialog\n                            \n                            \n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bookingsService: BookingsService, itemsService: ItemsService, dialog: MatDialog, formBuilder: FormBuilder, service: ComponentBridgingService, lc: LogoutComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/item-list/item-list.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookingsService\n                                                  \n                                                        \n                                                                        BookingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemsService\n                                                  \n                                                        \n                                                                        ItemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ComponentBridgingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lc\n                                                  \n                                                        \n                                                                        LogoutComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItems\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:81\n                \n            \n\n\n            \n                \n                    Purges all items.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            itemFilterPredicate\n                        \n                        \n                    \n                \n            \n            \n                \nitemFilterPredicate(data: Items, filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:123\n                \n            \n\n\n            \n                \n                    Method to filter the data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Items\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of items.\n\n                                    \n                                \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Filter parameters.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:61\n                \n            \n\n\n            \n                \n                    Initializes the data, table configuration and the filter form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputPageChange\n                        \n                        \n                    \n                \n            \n            \n                \nonInputPageChange(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:114\n                \n            \n\n\n            \n                \n                    Updates the page index on user input.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Page number.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:105\n                \n            \n\n\n            \n                \n                    Set the filter parameters.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCreateForm\n                        \n                        \n                    \n                \n            \n            \n                \nopenCreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:152\n                \n            \n\n\n            \n                \n                    Opens a form to allow users to create an item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(row: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:136\n                \n            \n\n\n            \n                \n                    Opens a dialog with item description and availability when a table row is clicked.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table row.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \nreloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:94\n                \n            \n\n\n            \n                \n                    Reloads the data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formDialogOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemDialogOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'category', 'quantity', 'deposit', 'status']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, Inject, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { ItemsService } from '../model-service/items/items.service';\nimport { BookingsService } from '../model-service/bookings/bookings.service';\n\nimport { Items } from '../model-service/items/items';\nimport { BookedItem } from '../model-service/items/items';\n\nimport { LogoutComponent } from '../logout/logout.component';\nimport { ItemDetailsComponent } from '../item-details/item-details.component';\n\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nimport { CalendarOptions } from '@fullcalendar/angular';\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\n\n/**\n * Component for the page displaying the list of items.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss']\n})\nexport class ItemListComponent implements OnInit, OnDestroy {\n\n  items = new MatTableDataSource();\n  tableColumns: string[] = ['id', 'name', 'category', 'quantity', 'deposit', 'status'];\n\n  filterForm: FormGroup;\n\n  itemDialogOpened = false;\n  formDialogOpened = false;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  subscription: Subscription;\n\n  constructor(\n    private bookingsService: BookingsService,\n    private itemsService: ItemsService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private service: ComponentBridgingService,\n    public lc: LogoutComponent\n  ) { }\n\n  /**\n   * Initializes the data, table configuration and the filter form.\n   */\n  ngOnInit() {\n    this.reloadData();\n    this.items.paginator = this.paginator;\n    this.items.sort = this.sort;\n\n    this.filterForm = this.formBuilder.group({\n      name: ['', ''],\n      category: ['', '']\n    });\n\n    this.subscription = this.service.on('reloadData').subscribe(() => { this.reloadData(); });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Purges all items.\n   */\n  deleteItems() {\n    this.itemsService.deleteAll()\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log('ERROR: ' + error));\n  }\n\n  /**\n   * Reloads the data.\n   */\n  reloadData() {\n    this.itemsService.getItemsList()\n      .subscribe(\n        data => {\n          this.items.data = data;\n        });\n  }\n\n  /**\n   * Set the filter parameters.\n   */\n  onSubmit() {\n    this.items.filterPredicate = this.itemFilterPredicate;\n    this.items.filter = this.filterForm.value;\n  }\n\n  /**\n   * Updates the page index on user input.\n   * @param pageNumber Page number.\n   */\n  onInputPageChange(pageNumber: number) {\n    this.paginator.pageIndex = Math.min(pageNumber - 1, this.paginator.getNumberOfPages() - 1);\n  }\n\n  /**\n   * Method to filter the data.\n   * @param data List of items.\n   * @param filter Filter parameters.\n   */\n  itemFilterPredicate(data: Items, filter: any): boolean {\n    for (const value in filter) {\n      if (!data[value].toLowerCase().includes(filter[value].toLowerCase())) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Opens a dialog with item description and availability when a table row is clicked.\n   * @param row Table row.\n   */\n  openDialog(row: { [x: string]: any; }) {\n    this.bookingsService.getBookersbyBookedItem(row.id)\n      .subscribe(\n        (data: BookedItem[]) => {\n          if (!this.itemDialogOpened) {\n            this.itemDialogOpened = true;\n            const dialogRef = this.dialog.open(ItemListDialog, { width: '1200px', height: '600px', data: { item: row, people: data } });\n            dialogRef.afterClosed().subscribe(() => { this.itemDialogOpened = false; });\n          }\n        }\n      );\n  }\n\n  /**\n   * Opens a form to allow users to create an item.\n   */\n  openCreateForm() {\n    if (!this.formDialogOpened) {\n      this.formDialogOpened = true;\n      const dialogRef = this.dialog.open(ItemDetailsComponent, { data: { mode: 'create' } });\n      dialogRef.afterClosed().subscribe(() => {\n        this.formDialogOpened = false;\n        this.reloadData();\n      });\n    }\n  }\n}\n\n/**\n * Component for the item detail dialog.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'item-list-dialog',\n  templateUrl: './item-list-dialog.html',\n})\n// tslint:disable-next-line: component-class-suffix\nexport class ItemListDialog implements OnInit {\n  calendarEvents = [];\n\n  /**\n   * Initializes the calendar component.\n   */\n  calendarOptions: CalendarOptions = {\n    initialView: 'dayGridWeek',\n    locale: 'en-au',\n    height: '500px',\n    events: []\n  };\n\n  // tslint:disable-next-line: variable-name\n  tableColumns_dialog = ['orgs', 'loan_start_time', 'loan_end_time', 'quantity'];\n\n  editFormOpened = false;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  bookers = new MatTableDataSource();\n\n  constructor(\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef,\n    private service: ComponentBridgingService,\n    private snackbar: MatSnackBar,\n    private itemsService: ItemsService,\n    @Inject(MAT_DIALOG_DATA) public itemData: any,\n    public lc: LogoutComponent\n  ) { }\n\n  /**\n   * Initializes the bookings for each item.\n   */\n  ngOnInit() {\n    this.bookers.data = this.itemData.people;\n    this.bookers.paginator = this.paginator;\n    this.bookers.sort = this.sort;\n\n    for (const events of this.itemData.people) {\n      this.calendarEvents.push(\n        {\n          title: `${events.booking_source.organization} - ${events.quantity} items`,\n          start: events.booking_source.loan_start_time,\n          // substr(0,10) is to extract the date only, 86400000 is added to include the return date\n          end: new Date(new Date(events.booking_source.loan_end_time).getTime() + 86400000).toISOString().substr(0, 10)\n        }\n      );\n    }\n    this.calendarOptions.events = this.calendarEvents;\n  }\n\n  /**\n   * Opens a form filled with item data so that users can edit the item details.\n   * After the dialog is closed, a message will be broadcasted to reload the table.\n   */\n  openEditForm() {\n    this.dialogRef.close();\n    if (!this.editFormOpened) {\n      this.editFormOpened = true;\n      const dialogRefs = this.dialog.open(ItemDetailsComponent, { data: { mode: 'edit', item: this.itemData.item } });\n      dialogRefs.afterClosed().subscribe(() => {\n        this.editFormOpened = false;\n        this.service.publish('reloadData');\n      });\n    }\n  }\n\n  /**\n   * Deletes the item.\n   */\n  deleteItem() {\n    this.dialogRef.close();\n    this.itemsService.deleteItem(this.itemData.item.id).subscribe(() => {\n      this.service.publish('reloadData');\n      this.snackbar.open(`Item #${this.itemData.item.id} deleted`, 'OK', { duration: 5000 });\n    });\n  }\n\n  /**\n   * Opens a confirmation dialog when the user decides to delete the item.\n   */\n  confirmDelete() {\n    const dialogR = this.dialog.open(ConfirmationDialogComponent, { data: `item # ${this.itemData.item.id}` });\n    dialogR.afterClosed().subscribe(\n      (result) => {\n        if (result.event === 'yes') {\n          this.deleteItem();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  Items List\n  \n    \n      Click each row for item availability.\n    \n    \n      \n        add\n        Add Item\n      \n    \n  \n  \n    \n      Filter\n\n      \n        Filter by name\n        \n        \n          Name\n          \n        \n\n        \n        Filter by category\n        \n        \n          Category\n          \n        \n\n        \n        \n          search\n          Filter\n        \n      \n    \n\n    \n      \n        \n          S/N\n          {{item.id}}\n        \n        \n          Name\n          {{item.name}}\n        \n        \n          Category\n          {{item.category}}\n        \n        \n          Quantity\n          {{item.quantity}}\n        \n        \n          Deposit(S$)\n          {{item.deposit}}\n        \n        \n          Status\n          {{item.item_status}}\n        \n\n        \n        \n      \n      \n        \n          \n        \n        Page: \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./item-list.component.scss\n                \n                .container {\n    background-image: url(\"../../assets/Orange.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100%;\n  }\n  .column-left {\n    float: left;\n    width: 20%;\n  }\n\n  .column-right {\n    float: right;\n    width: 80%;\n  }\n\n  .row:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  .long-input {\n    width: 100%;\n  }\n\n  .fab-bottom-right {\n    position: fixed !important;\n    left: 20px;\n    bottom: 15px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Items List            Click each row for item availability.                      add        Add Item                        Filter              Filter by name                          Name                                  Filter by category                          Category                                            search          Filter                                              S/N          {{item.id}}                          Name          {{item.name}}                          Category          {{item.category}}                          Quantity          {{item.quantity}}                          Deposit(S$)          {{item.deposit}}                          Status          {{item.item_status}}                                                                      Page:                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemListDialog.html":{"url":"components/ItemListDialog.html","title":"component - ItemListDialog","body":"\n                   \n\n\n\n\n\n  Components\n  ItemListDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/item-list/item-list.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the item detail dialog.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                item-list-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./item-list-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookers\n                            \n                            \n                                calendarEvents\n                            \n                            \n                                calendarOptions\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                editFormOpened\n                            \n                            \n                                    Public\n                                itemData\n                            \n                            \n                                    Public\n                                lc\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                tableColumns_dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmDelete\n                            \n                            \n                                deleteItem\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, dialogRef: MatDialogRef, service: ComponentBridgingService, snackbar: MatSnackBar, itemsService: ItemsService, itemData: any, lc: LogoutComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/item-list/item-list.component.ts:194\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ComponentBridgingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemsService\n                                                  \n                                                        \n                                                                        ItemsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemData\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lc\n                                                  \n                                                        \n                                                                        LogoutComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmDelete\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:257\n                \n            \n\n\n            \n                \n                    Opens a confirmation dialog when the user decides to delete the item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:246\n                \n            \n\n\n            \n                \n                    Deletes the item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:209\n                \n            \n\n\n            \n                \n                    Initializes the bookings for each item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditForm\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/item-list/item-list.component.ts:231\n                \n            \n\n\n            \n                \n                    Opens a form filled with item data so that users can edit the item details.\nAfter the dialog is closed, a message will be broadcasted to reload the table.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:194\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendarOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CalendarOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    initialView: 'dayGridWeek',\n    locale: 'en-au',\n    height: '500px',\n    events: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:179\n                            \n                        \n\n                \n                    \n                        Initializes the calendar component.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:197\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editFormOpened\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:189\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:202\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LogoutComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:203\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:191\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableColumns_dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['orgs', 'loan_start_time', 'loan_end_time', 'quantity']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/item-list/item-list.component.ts:187\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, Inject, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { ItemsService } from '../model-service/items/items.service';\nimport { BookingsService } from '../model-service/bookings/bookings.service';\n\nimport { Items } from '../model-service/items/items';\nimport { BookedItem } from '../model-service/items/items';\n\nimport { LogoutComponent } from '../logout/logout.component';\nimport { ItemDetailsComponent } from '../item-details/item-details.component';\n\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nimport { CalendarOptions } from '@fullcalendar/angular';\nimport { Subscription } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\n\n/**\n * Component for the page displaying the list of items.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.scss']\n})\nexport class ItemListComponent implements OnInit, OnDestroy {\n\n  items = new MatTableDataSource();\n  tableColumns: string[] = ['id', 'name', 'category', 'quantity', 'deposit', 'status'];\n\n  filterForm: FormGroup;\n\n  itemDialogOpened = false;\n  formDialogOpened = false;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  subscription: Subscription;\n\n  constructor(\n    private bookingsService: BookingsService,\n    private itemsService: ItemsService,\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private service: ComponentBridgingService,\n    public lc: LogoutComponent\n  ) { }\n\n  /**\n   * Initializes the data, table configuration and the filter form.\n   */\n  ngOnInit() {\n    this.reloadData();\n    this.items.paginator = this.paginator;\n    this.items.sort = this.sort;\n\n    this.filterForm = this.formBuilder.group({\n      name: ['', ''],\n      category: ['', '']\n    });\n\n    this.subscription = this.service.on('reloadData').subscribe(() => { this.reloadData(); });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Purges all items.\n   */\n  deleteItems() {\n    this.itemsService.deleteAll()\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log('ERROR: ' + error));\n  }\n\n  /**\n   * Reloads the data.\n   */\n  reloadData() {\n    this.itemsService.getItemsList()\n      .subscribe(\n        data => {\n          this.items.data = data;\n        });\n  }\n\n  /**\n   * Set the filter parameters.\n   */\n  onSubmit() {\n    this.items.filterPredicate = this.itemFilterPredicate;\n    this.items.filter = this.filterForm.value;\n  }\n\n  /**\n   * Updates the page index on user input.\n   * @param pageNumber Page number.\n   */\n  onInputPageChange(pageNumber: number) {\n    this.paginator.pageIndex = Math.min(pageNumber - 1, this.paginator.getNumberOfPages() - 1);\n  }\n\n  /**\n   * Method to filter the data.\n   * @param data List of items.\n   * @param filter Filter parameters.\n   */\n  itemFilterPredicate(data: Items, filter: any): boolean {\n    for (const value in filter) {\n      if (!data[value].toLowerCase().includes(filter[value].toLowerCase())) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Opens a dialog with item description and availability when a table row is clicked.\n   * @param row Table row.\n   */\n  openDialog(row: { [x: string]: any; }) {\n    this.bookingsService.getBookersbyBookedItem(row.id)\n      .subscribe(\n        (data: BookedItem[]) => {\n          if (!this.itemDialogOpened) {\n            this.itemDialogOpened = true;\n            const dialogRef = this.dialog.open(ItemListDialog, { width: '1200px', height: '600px', data: { item: row, people: data } });\n            dialogRef.afterClosed().subscribe(() => { this.itemDialogOpened = false; });\n          }\n        }\n      );\n  }\n\n  /**\n   * Opens a form to allow users to create an item.\n   */\n  openCreateForm() {\n    if (!this.formDialogOpened) {\n      this.formDialogOpened = true;\n      const dialogRef = this.dialog.open(ItemDetailsComponent, { data: { mode: 'create' } });\n      dialogRef.afterClosed().subscribe(() => {\n        this.formDialogOpened = false;\n        this.reloadData();\n      });\n    }\n  }\n}\n\n/**\n * Component for the item detail dialog.\n */\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'item-list-dialog',\n  templateUrl: './item-list-dialog.html',\n})\n// tslint:disable-next-line: component-class-suffix\nexport class ItemListDialog implements OnInit {\n  calendarEvents = [];\n\n  /**\n   * Initializes the calendar component.\n   */\n  calendarOptions: CalendarOptions = {\n    initialView: 'dayGridWeek',\n    locale: 'en-au',\n    height: '500px',\n    events: []\n  };\n\n  // tslint:disable-next-line: variable-name\n  tableColumns_dialog = ['orgs', 'loan_start_time', 'loan_end_time', 'quantity'];\n\n  editFormOpened = false;\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  bookers = new MatTableDataSource();\n\n  constructor(\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef,\n    private service: ComponentBridgingService,\n    private snackbar: MatSnackBar,\n    private itemsService: ItemsService,\n    @Inject(MAT_DIALOG_DATA) public itemData: any,\n    public lc: LogoutComponent\n  ) { }\n\n  /**\n   * Initializes the bookings for each item.\n   */\n  ngOnInit() {\n    this.bookers.data = this.itemData.people;\n    this.bookers.paginator = this.paginator;\n    this.bookers.sort = this.sort;\n\n    for (const events of this.itemData.people) {\n      this.calendarEvents.push(\n        {\n          title: `${events.booking_source.organization} - ${events.quantity} items`,\n          start: events.booking_source.loan_start_time,\n          // substr(0,10) is to extract the date only, 86400000 is added to include the return date\n          end: new Date(new Date(events.booking_source.loan_end_time).getTime() + 86400000).toISOString().substr(0, 10)\n        }\n      );\n    }\n    this.calendarOptions.events = this.calendarEvents;\n  }\n\n  /**\n   * Opens a form filled with item data so that users can edit the item details.\n   * After the dialog is closed, a message will be broadcasted to reload the table.\n   */\n  openEditForm() {\n    this.dialogRef.close();\n    if (!this.editFormOpened) {\n      this.editFormOpened = true;\n      const dialogRefs = this.dialog.open(ItemDetailsComponent, { data: { mode: 'edit', item: this.itemData.item } });\n      dialogRefs.afterClosed().subscribe(() => {\n        this.editFormOpened = false;\n        this.service.publish('reloadData');\n      });\n    }\n  }\n\n  /**\n   * Deletes the item.\n   */\n  deleteItem() {\n    this.dialogRef.close();\n    this.itemsService.deleteItem(this.itemData.item.id).subscribe(() => {\n      this.service.publish('reloadData');\n      this.snackbar.open(`Item #${this.itemData.item.id} deleted`, 'OK', { duration: 5000 });\n    });\n  }\n\n  /**\n   * Opens a confirmation dialog when the user decides to delete the item.\n   */\n  confirmDelete() {\n    const dialogR = this.dialog.open(ConfirmationDialogComponent, { data: `item # ${this.itemData.item.id}` });\n    dialogR.afterClosed().subscribe(\n      (result) => {\n        if (result.event === 'yes') {\n          this.deleteItem();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  .column-left {\n    float: left;\n    width: 40%;\n  }\n\n  .column-right {\n    float: right;\n    width: 55%;\n  }\n\n  .row:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  mat-list-item {\n    margin-top: 1%;\n    height: auto !important;\n    white-space: pre-wrap;\n  }\n\n  fc-scrollgrid {\n    height: auto !important;\n  }\n\n\nItem Details for {{itemData.item.name}}\n\n  \n    \n      \n        \n          \n             Organization \n             {{bookings.booking_source.organization}} \n          \n          \n             Loan date \n             {{bookings.booking_source.loan_start_time|date: 'd/M/yyyy'}}\n            \n          \n          \n             Return date \n             {{bookings.booking_source.loan_end_time|date: 'd/M/yyyy'}} \n          \n          \n             Quantity \n             {{bookings.quantity}} \n          \n          \n          \n        \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      \n        Name: {{itemData.item.name}}\n        Category: {{itemData.item.category}}\n        Quantity: {{itemData.item.quantity}}\n        Deposit: {{itemData.item.deposit}}\n        Status: {{itemData.item.item_status}}\n        Remarks: {{itemData.item.remarks}}\n      \n    \n  \n\n\n\n  \n    create\n    Edit\n  \n\n  \n    delete_forever\n    Delete\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .column-left {    float: left;    width: 40%;  }  .column-right {    float: right;    width: 55%;  }  .row:after {    content: \"\";    display: table;    clear: both;  }  mat-list-item {    margin-top: 1%;    height: auto !important;    white-space: pre-wrap;  }  fc-scrollgrid {    height: auto !important;  }Item Details for {{itemData.item.name}}                                           Organization              {{bookings.booking_source.organization}}                                  Loan date              {{bookings.booking_source.loan_start_time|date: \\'d/M/yyyy\\'}}                                             Return date              {{bookings.booking_source.loan_end_time|date: \\'d/M/yyyy\\'}}                                  Quantity              {{bookings.quantity}}                                                                                                   Name: {{itemData.item.name}}        Category: {{itemData.item.category}}        Quantity: {{itemData.item.quantity}}        Deposit: {{itemData.item.deposit}}        Status: {{itemData.item.item_status}}        Remarks: {{itemData.item.remarks}}                  create    Edit        delete_forever    Delete  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemListDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Items.html":{"url":"classes/Items.html","title":"class - Items","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Items\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/items/items.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                deposit\n                            \n                            \n                                id\n                            \n                            \n                                item_status\n                            \n                            \n                                name\n                            \n                            \n                                quantity\n                            \n                            \n                                remarks\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deposit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item_status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remarks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Booking } from '../bookings/bookings';\n\nexport class Items{\n    id: number;\n    name: string;\n    quantity: number;\n    remarks: string;\n    category: string;\n    deposit: number;\n    item_status: string;\n}\n\nexport class BookedItem {\n    id: number;\n    booking_source: Booking;\n    item: Items;\n    quantity: number;\n    status: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsService.html":{"url":"injectables/ItemsService.html","title":"injectable - ItemsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ItemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/items/items.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createItem\n                            \n                            \n                                deleteAll\n                            \n                            \n                                deleteItem\n                            \n                            \n                                getItem\n                            \n                            \n                                getItemsList\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/items/items.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createItem\n                        \n                        \n                    \n                \n            \n            \n                \ncreateItem(item: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/items/items.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/items/items.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/items/items.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/items/items.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsList\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/items/items.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItem(id: number, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/items/items.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/items/items.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n\n  private baseUrl = 'http://localhost:8000/api/items';\n\n  constructor(private http: HttpClient) { }\n\n  getItemsList(): Observable {\n    return this.http.get(`${this.baseUrl}/`);\n  }\n\n  getItem(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}/`);\n  }\n\n  createItem(item: Object): Observable {\n    return this.http.post(`${this.baseUrl}/`, item);\n  }\n\n  updateItem(id: number, value: any): Observable {\n    return this.http.put(`${this.baseUrl}/${id}/`, value);\n  }\n\n  deleteItem(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}/`);\n  }\n\n  deleteAll(): Observable {\n    return this.http.delete(`${this.baseUrl}/`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api-auth/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-auth/jwt.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-auth/jwt.interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LoginService } from './../model-service/users/login.service';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private loginService: LoginService) {}\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n      // add authorization header with jwt token if available\n      return next.handle(this.loginService.attachAccessToken(request));\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginDetail.html":{"url":"interfaces/LoginDetail.html","title":"interface - LoginDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/users/login-details.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginDetail {\n  username: string;\n  password: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Component for login page.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authfailSubscription\n                            \n                            \n                                errorString\n                            \n                            \n                                errorSubscription\n                            \n                            \n                                hide\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                setErrorString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    form\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, route: ActivatedRoute, router: Router, bridgingService: ComponentBridgingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-form/login-form.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bridgingService\n                                                  \n                                                        \n                                                                        ComponentBridgingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:53\n                \n            \n\n\n            \n                \n                    Unsubscribe the changes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:44\n                \n            \n\n\n            \n                \n                    Initializes the behaviour when the user failed to login and the page to redirect to once the user successfully logs in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:76\n                \n            \n\n\n            \n                \n                    If the credentials are valid, redirect the user to the correct page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorString\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorString(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-form/login-form.component.ts:69\n                \n            \n\n\n            \n                \n                    Sets the error string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error string.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authfailSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-form/login-form.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n\n                \n                    \n                        getform()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login-form/login-form.component.ts:61\n                                \n                            \n                    \n                        \n                                Obtain the inputted credentials.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { LoginService } from './../model-service/users/login.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ComponentBridgingService } from '../model-service/componentbridging.service';\n\n/**\n * Component for login page.\n */\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n\n  returnUrl: string;\n\n  hide = true;\n\n  errorString: string;\n\n  loginForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  });\n\n  errorSubscription: Subscription;\n  authfailSubscription: Subscription;\n\n  constructor(\n    private loginService: LoginService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private bridgingService: ComponentBridgingService\n  ) {\n    // console.log(loginService.currentUserValue);\n  }\n\n  /**\n   * Initializes the behaviour when the user failed to login and the page to redirect to once the user successfully logs in.\n   */\n  ngOnInit(): void {\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n    this.errorSubscription = this.bridgingService.on('error').subscribe(() => {this.setErrorString(\"An unknown error occured.\")});\n    this.authfailSubscription = this.bridgingService.on('authfail').subscribe(() => {this.setErrorString(\"Your username or password is incorrect.\")});\n  }\n\n  /**\n   * Unsubscribe the changes.\n   */\n  ngOnDestroy(): void {\n    this.errorSubscription.unsubscribe();\n    this.authfailSubscription.unsubscribe();\n  }\n\n  /**\n   * Obtain the inputted credentials.\n   */\n  get form() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   * Sets the error string.\n   * @param str Error string.\n   */\n  setErrorString(str: string) {\n    this.errorString = str;\n  }\n\n  /**\n   * If the credentials are valid, redirect the user to the correct page.\n   */\n  onSubmit(): void {\n    this.loginService.login({\n      username: this.form.username.value,\n      password: this.form.password.value\n    })\n      .subscribe((status: boolean) => {\n        if (status) {\n          this.router.navigate([this.returnUrl]);\n        }\n      });\n  }\n\n}\n\n    \n\n    \n        \n  Administrator Login\n\n\n  \n    Username\n    \n  \n\n  \n\n  \n    Password\n    \n    {{hide ? 'visibility_off' : 'visibility'}}\n  \n\n  Login\n  \n  {{errorString}}\n\n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                .full-width{\n    width:100%;\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n\n}\n\n.mat-elevation-z8 {\n    width:300px;\n    height: 40vh;\n    margin:auto;\n    margin-top: 10%;\n    text-align: center;\n    background-image: url(\"../../assets/Orange.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n}\n\n.h2 {\n    text-align: center;\n    margin-top: 10px;\n    margin-bottom: 30px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Administrator Login      Username              Password        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}    Login    {{errorString}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/users/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Private\n                                loginApiUrl\n                            \n                            \n                                    Private\n                                refreshApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAccessToken\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshAccessToken\n                            \n                            \n                                    Private\n                                storeUser\n                            \n                            \n                                updateAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    observableUser\n                                \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, bridgingService: ComponentBridgingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/users/login.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bridgingService\n                                                  \n                                                        \n                                                                        ComponentBridgingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \nattachAccessToken(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: LoginDetail)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                LoginDetail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            storeUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAccessToken(newToken: Token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/users/login.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                Token\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/users/login.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/users/login.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/token'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/users/login.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/token/refresh'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/users/login.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        observableUser\n                    \n                \n\n                \n                    \n                        getobservableUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model-service/users/login.service.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/model-service/users/login.service.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Token } from './tokens';\nimport { HttpClient, HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginDetail } from './login-details';\nimport { User } from './users';\nimport { Router } from '@angular/router';\nimport { ComponentBridgingService } from '../componentbridging.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private loginApiUrl = 'http://localhost:8000/api/token';\n  private refreshApiUrl = 'http://localhost:8000/api/token/refresh';\n\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private bridgingService: ComponentBridgingService\n  ) {\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  login(credentials: LoginDetail) {\n    return this.http.post(this.loginApiUrl, credentials)\n      .pipe(\n        map((receivedToken: Token) => {\n          const user = {\n            username: credentials.username,\n            token: receivedToken\n          };\n          this.storeUser(user);\n          return true;\n        }),\n        catchError((error) => this.handleError(error))\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n  }\n\n  attachAccessToken(request: HttpRequest): HttpRequest {\n    const currentUser = this.currentUserValue;\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token.access}`\n        }\n      });\n    }\n\n    return request;\n  }\n\n  refreshAccessToken(): Observable {\n    const currentUser = this.currentUserValue;\n\n    return this.http.post(this.refreshApiUrl, currentUser.token)\n      .pipe(\n        map((receivedToken: Token) => {\n          console.log('Before');\n          console.log(this.currentUserValue);\n          this.updateAccessToken(receivedToken);\n          console.log('After');\n          console.log(this.currentUserValue);\n          return true;\n        }),\n        catchError((error) => this.handleError(error))\n      );\n  }\n\n  updateAccessToken(newToken: Token) {\n    const currentUser = this.currentUserValue;\n    this.currentUserSubject.next({\n      username: currentUser.username,\n      token: {\n        access: newToken.access,\n        refresh: currentUser.token.refresh,\n      }\n    });\n  }\n\n  get observableUser(): Observable {\n    return this.currentUser;\n  }\n\n  get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  private storeUser(user: User) {\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    this.currentUserSubject.next(user);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n      this.bridgingService.publish('error');\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      // console.error(\n      //   `Backend returned code ${error.status}, ` +\n      //   `body was: ${error.error}`);\n      if (error.status === 400 || error.status === 401) {\n          this.bridgingService.publish('authfail');\n      } else {\n          this.bridgingService.publish('error');\n      }\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutComponent.html":{"url":"components/LogoutComponent.html","title":"component - LogoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/logout/logout.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the logout feature.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout\n            \n\n            \n                styleUrls\n                ./logout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/logout/logout.component.ts:14\n                            \n                        \n\n                \n                    \n                            Changes the status of user to logout.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LoginService object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logout/logout.component.ts:36\n                \n            \n\n\n            \n                \n                    Logs user out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logout/logout.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logout/logout.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { LoginService } from './../model-service/users/login.service';\nimport { Component, OnInit, OnChanges } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Component for the logout feature.\n */\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n  public loginStatus: BehaviorSubject;\n\n  /**\n   * Changes the status of user to logout.\n   * @param loginService LoginService object.\n   */\n  constructor(\n    private loginService: LoginService,\n  ) {\n    this.loginStatus = new BehaviorSubject(false);\n    this.loginService.observableUser.subscribe({\n      next: (user) => this.loginStatus.next(user != null),\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * Logs user out.\n   */\n  logout() {\n    this.loginService.logout();\n  }\n\n}\n\n    \n\n    \n        Logout\n\n    \n\n    \n                \n                    ./logout.component.scss\n                \n                a {\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Logout'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MailSenderComponent.html":{"url":"components/MailSenderComponent.html","title":"component - MailSenderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MailSenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mail-sender/mail-sender.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mail-sender\n            \n\n            \n                styleUrls\n                ./mail-sender.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./mail-sender.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiKey\n                            \n                            \n                                mailForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                send_email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, snackbar: MatSnackBar, mailerService: MailerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/mail-sender/mail-sender.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send_email\n                        \n                        \n                    \n                \n            \n            \n                \nsend_email(data: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/mail-sender/mail-sender.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : apiKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mail-sender/mail-sender.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mailForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/mail-sender/mail-sender.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Email } from './../model-service/emailtemplates/email';\nimport { MailerService } from './../model-service/emailtemplates/mailer.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { apiKey } from '../settings';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-mail-sender',\n  templateUrl: './mail-sender.component.html',\n  styleUrls: ['./mail-sender.component.scss']\n})\nexport class MailSenderComponent {\n  mailForm: FormGroup;\n\n  apiKey = apiKey;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private snackbar: MatSnackBar,\n    private mailerService: MailerService,\n    private router: Router,\n  ) {\n    this.mailForm = this.formBuilder.group({\n      recipient: '',\n      subject: '',\n      message: ''\n    });\n\n    if (history.state.booking) {\n      this.mailForm.setValue({\n        recipient: history.state.booking.email,\n        subject: history.state.template.subject,\n        message: history.state.template.template\n      });\n    }\n  }\n\n  send_email(data: Email){\n    const snackbarString = 'Sent email';\n    this.mailerService.send_email(data).subscribe(\n      (data) => {\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n\n    this.router.navigate(['/bookings']);\n    this.snackbar.open(snackbarString, 'OK', {duration: 5000, });\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n    To\n    \n  \n  \n  \n    Subject\n    \n  \n  \n  \n  \n  Submit\n\n\n\n\n    \n\n    \n                \n                    ./mail-sender.component.scss\n                \n                .container {\n    background-image: url(\"../../assets/Orange.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        To              Subject              Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MailSenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/emailtemplates/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mailerUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                send_email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/model-service/emailtemplates/mailer.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send_email\n                        \n                        \n                    \n                \n            \n            \n                \nsend_email(email: Email)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model-service/emailtemplates/mailer.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                Email\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mailerUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8000/api/send_html_email'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/emailtemplates/mailer.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Email } from './email';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailerService {\n  private mailerUrl = 'http://localhost:8000/api/send_html_email';\n\n  constructor(private http: HttpClient) { }\n\n  send_email(email: Email): Observable {\n    return this.http.post(`${this.mailerUrl}`, email);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/not-found/not-found.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n.center {\ntext-align: center;\n}\n\nWhoops... 404\nThe page you are trying to access has been loaned by someone else,\n\n only to disappear into the abyss and never be returned. ¯\\_(ツ)_/¯\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.center {text-align: center;}Whoops... 404The page you are trying to access has been loaned by someone else, only to disappear into the abyss and never be returned. ¯\\_(ツ)_/¯'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/RefreshInterceptor.html":{"url":"interceptors/RefreshInterceptor.html","title":"interceptor - RefreshInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  RefreshInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api-auth/refresh.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isRefreshing\n                            \n                            \n                                    Private\n                                refreshTokenSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                isAuthRequest\n                            \n                            \n                                    Private\n                                isRefreshRequest\n                            \n                            \n                                    Private\n                                refresh\n                            \n                            \n                                    Private\n                                waitForToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/api-auth/refresh.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-auth/refresh.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isAuthRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthRequest(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-auth/refresh.interceptor.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isRefreshRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isRefreshRequest(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-auth/refresh.interceptor.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-auth/refresh.interceptor.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            waitForToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForToken(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/api-auth/refresh.interceptor.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isRefreshing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-auth/refresh.interceptor.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshTokenSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(\n    null\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/api-auth/refresh.interceptor.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { catchError, filter, take, switchMap } from 'rxjs/operators';\nimport { LoginService } from './../model-service/users/login.service';\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class RefreshInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject = new BehaviorSubject(\n    null\n  );\n\n  constructor(private loginService: LoginService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          if (this.isAuthRequest(request)) {\n            if (this.isRefreshRequest(request)) {\n              this.loginService.logout();\n            }\n\n            return throwError(error);\n          }\n\n          if (this.isRefreshing) {\n            return this.waitForToken(request, next);\n          } else {\n            this.isRefreshing = true;\n            this.refreshTokenSubject.next(null);\n\n            return this.refresh(request, next);\n          }\n        })\n      );\n  }\n\n  private refresh(request: HttpRequest, next: HttpHandler) {\n    return this.loginService.refreshAccessToken().pipe(\n      switchMap((state: boolean) => {\n        this.isRefreshing = false;\n        this.refreshTokenSubject.next(state);\n\n        return next.handle(this.loginService.attachAccessToken(request));\n      }),\n      catchError(err => {\n        this.isRefreshing = false;\n        this.loginService.logout();\n        return throwError(err);\n      })\n    );\n  }\n\n  private waitForToken(request: HttpRequest, next: HttpHandler) {\n    return this.refreshTokenSubject.pipe(\n      filter(result => result !== null),\n      take(1),\n      switchMap(() => next.handle(this.loginService.attachAccessToken(request)))\n    );\n  }\n\n  private isAuthRequest(request: HttpRequest): boolean {\n    return request.url.includes('token');\n  }\n\n  private isRefreshRequest(request: HttpRequest): boolean {\n    return request.url.includes('refresh');\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateDetailDialog.html":{"url":"components/TemplateDetailDialog.html","title":"component - TemplateDetailDialog","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateDetailDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/template-list/template-detail.dialog.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-template-detail-dialog\n            \n\n\n\n\n            \n                templateUrl\n                ./template-detail.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiKey\n                            \n                            \n                                bookedItems\n                            \n                            \n                                booking\n                            \n                            \n                                checkBox\n                            \n                            \n                                checkedItems\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                isEdit\n                            \n                            \n                                isNew\n                            \n                            \n                                isSendingEmail\n                            \n                            \n                                    Public\n                                params\n                            \n                            \n                                template\n                            \n                            \n                                templateParams\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                confirmDelete\n                            \n                            \n                                deleteTemplate\n                            \n                            \n                                getFinalDeposit\n                            \n                            \n                                send_data\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, emailTemplatesService: EmailTemplatesService, bookingService: BookingsService, dialogRef: MatDialogRef, params: any, formBuilder: FormBuilder, snackbar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/template-list/template-detail.dialog.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailTemplatesService\n                                                  \n                                                        \n                                                                        EmailTemplatesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookingService\n                                                  \n                                                        \n                                                                        BookingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-detail.dialog.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmDelete\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-detail.dialog.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTemplate\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-detail.dialog.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFinalDeposit\n                        \n                        \n                    \n                \n            \n            \n                \ngetFinalDeposit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-detail.dialog.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send_data\n                        \n                        \n                    \n                \n            \n            \n                \nsend_data(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-detail.dialog.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : apiKey\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BookedItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            booking\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Booking\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('checkBox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNew\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSendingEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EmailTemplate\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-detail.dialog.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Booking } from './../model-service/bookings/bookings';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { EmailTemplatesService } from './../model-service/emailtemplates/emailtemplates.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { EmailTemplate } from './../model-service/emailtemplates/emailtemplates';\nimport { Component, Inject, ViewChildren, QueryList } from '@angular/core';\nimport { apiKey } from '../settings';\nimport { Router } from '@angular/router';\nimport { BookedItem } from '../model-service/items/items';\nimport { BookingsService } from '../model-service/bookings/bookings.service';\nimport { ConfirmationDialogComponent } from '../confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n  selector: 'app-template-detail-dialog',\n  templateUrl: './template-detail.dialog.html',\n})\n// tslint:disable-next-line: component-class-suffix\nexport class TemplateDetailDialog {\n  updateForm: FormGroup;\n\n  isNew: boolean;\n  isEdit: boolean;\n  isSendingEmail: boolean;\n  booking: Booking = null;\n  template: EmailTemplate;\n  templateParams: any;\n\n  @ViewChildren('checkBox') checkBox: QueryList;\n  checkedItems = [];\n  bookedItems: BookedItem[] = [];\n\n  apiKey = apiKey;\n\n  constructor(\n    public dialog: MatDialog,\n    private emailTemplatesService: EmailTemplatesService,\n    private bookingService: BookingsService,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public params: any,\n    private formBuilder: FormBuilder,\n    private snackbar: MatSnackBar,\n    private router: Router\n  ) {\n    this.isNew = params.isNew;\n    this.isEdit = params.isEdit;\n    this.isSendingEmail = params.isSendingEmail;\n    this.updateForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      subject: ['', [Validators.required]],\n      template: ['', [Validators.required]]\n    });\n    if (this.isEdit) {\n      this.template = params.template;\n      this.templateParams = { ...this.template };\n      delete this.templateParams.id;\n      this.updateForm.setValue(this.templateParams);\n    } else if (this.isSendingEmail) {\n      this.template = params.template;\n      this.templateParams = { ...this.template };\n      this.booking = params.booking.source;\n\n      delete this.templateParams.id;\n      this.updateForm.setValue(this.templateParams);\n\n      this.updateForm.get('name').disable();\n      this.updateForm.get('subject').disable();\n\n      params.booking.booked_items.forEach((ele: BookedItem) => { this.bookedItems.push(ele); });\n    } else {\n      this.template = null;\n    }\n  }\n\n  send_data(data: any) {\n    if (this.isEdit) {\n      this.emailTemplatesService.updateTemplate(this.template.id, data).subscribe();\n    } else if (this.isSendingEmail) {\n      this.checkBox.forEach((ele) => {\n        const stat = ele.checked ? 'ACC' : 'REJ';\n        this.bookingService.updateBookedItem(ele.value.id,\n          { booking_source: ele.value.booking_source.id, item: ele.value.item.id, quantity: ele.value.quantity, status: stat }).subscribe();\n      });\n      const bookingDataCopy = { ...this.booking };\n      delete bookingDataCopy.id;\n      bookingDataCopy.deposit_left = this.getFinalDeposit();\n      this.bookingService.updateBooking(this.booking.id, bookingDataCopy).subscribe();\n      this.router.navigate(['/mailer'], { state: { booking: this.booking, template: data } });\n    } else {\n      this.emailTemplatesService.createTemplate(data).subscribe();\n    }\n\n    this.closeDialog();\n\n    let snackbarString = '';\n    if (this.isEdit) {\n      snackbarString = 'Edited template';\n    } else {\n      snackbarString = 'Added template';\n    }\n\n    this.snackbar.open(snackbarString, 'OK', { duration: 5000, });\n  }\n\n  getFinalDeposit() {\n    return this.checkBox ? this.checkBox.reduce((acc, ele) => ele.checked ? acc + ele.value.item.deposit * ele.value.quantity : acc, 0) : 0;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  deleteTemplate() {\n    this.closeDialog();\n    this.emailTemplatesService.deleteTemplate(this.template.id).subscribe(() => {\n      this.snackbar.open(`Template #${this.template.id} deleted`, 'OK', { duration: 5000 });\n    });\n  }\n\n  confirmDelete() {\n    const dialogR = this.dialog.open(ConfirmationDialogComponent, { data: `template # ${this.template.id}` });\n    dialogR.afterClosed().subscribe(\n      (result) => {\n        if (result.event === 'yes') {\n          this.deleteTemplate();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  .column-left {\n    float: left;\n    width: 30%;\n  }\n\n  .column-right {\n    float: right;\n    width: 70%;\n  }\n\n  .row:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n\n  ul {\n    list-style-type: none;\n    margin-top: 4px;\n  }\n\n\n{{(isEdit||isSendingEmail)?'Edit Template':'New Template'}}\n\n  \n    \n      Booking #{{booking.id}}\n      Name: {{booking.name}}\n      \n      Loan date: {{booking.loan_start_time}}\n      \n      Return date: {{booking.loan_end_time}}\n      \n      Items:\n      \n      \n        \n          \n            {{bookedItem.item.name}} - {{bookedItem.quantity}} items\n          \n        \n      \n      \n      Deposit: {{getFinalDeposit()|currency}}\n    \n    \n      You cannot view bookings with this option.\n    \n  \n  \n    \n      \n        Name\n        \n      \n      \n      \n        Subject\n        \n      \n      \n      \n      \n      \n        \n          clear\n          Cancel\n        \n        \n          {{(isEdit || isNew) ? 'done' : 'email'}}\n          {{(isEdit || isNew) ? 'Submit' : 'Send'}}\n        \n        \n          delete_forever\n          Delete\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .column-left {    float: left;    width: 30%;  }  .column-right {    float: right;    width: 70%;  }  .row:after {    content: \"\";    display: table;    clear: both;  }  ul {    list-style-type: none;    margin-top: 4px;  }{{(isEdit||isSendingEmail)?\\'Edit Template\\':\\'New Template\\'}}            Booking #{{booking.id}}      Name: {{booking.name}}            Loan date: {{booking.loan_start_time}}            Return date: {{booking.loan_end_time}}            Items:                                          {{bookedItem.item.name}} - {{bookedItem.quantity}} items                                    Deposit: {{getFinalDeposit()|currency}}              You cannot view bookings with this option.                          Name                                  Subject                                                        clear          Cancel                          {{(isEdit || isNew) ? \\'done\\' : \\'email\\'}}          {{(isEdit || isNew) ? \\'Submit\\' : \\'Send\\'}}                          delete_forever          Delete                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemplateDetailDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateListComponent.html":{"url":"components/TemplateListComponent.html","title":"component - TemplateListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/template-list/template-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-template-list\n            \n\n            \n                styleUrls\n                ./template-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./template-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                isDialogOpen\n                            \n                            \n                                isSendingEmail\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                tableColumns\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDetail\n                            \n                            \n                                openNew\n                            \n                            \n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, emailTemplatesService: EmailTemplatesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/template-list/template-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailTemplatesService\n                                                  \n                                                        \n                                                                        EmailTemplatesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-list.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDetail\n                        \n                        \n                    \n                \n            \n            \n                \nopenDetail(row: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-list.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNew\n                        \n                        \n                    \n                \n            \n            \n                \nopenNew()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-list.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \nreloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/template-list/template-list.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDialogOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSendingEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/template-list/template-list.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { TemplateDetailDialog } from './template-detail.dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EmailTemplatesService } from './../model-service/emailtemplates/emailtemplates.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EmailTemplate } from './../model-service/emailtemplates/emailtemplates';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-template-list',\n  templateUrl: './template-list.component.html',\n  styleUrls: ['./template-list.component.scss']\n})\nexport class TemplateListComponent implements OnInit {\n\n  templates = new MatTableDataSource();\n  tableColumns: string[] = ['id', 'name'];\n  isSendingEmail = false;\n\n  @ViewChild(MatPaginator, {static: true})\n  paginator: MatPaginator;\n\n  @ViewChild(MatSort, {static: true})\n  sort: MatSort;\n\n  isDialogOpen: boolean;\n\n  constructor(\n    public dialog: MatDialog,\n    private emailTemplatesService: EmailTemplatesService\n  ) {\n    this.isDialogOpen = false;\n  }\n\n  ngOnInit(): void {\n    if (history.state.booking) {\n      this.isSendingEmail = true;\n    }\n    this.reloadData();\n    this.templates.paginator = this.paginator;\n    this.templates.sort = this.sort;\n  }\n\n  openNew() {\n    if (!this.isDialogOpen) {\n      this.isDialogOpen = true;\n      const dialogRef = this.dialog.open(TemplateDetailDialog,\n        { width: '800px',\n          data: {\n            isNew: true\n          }\n        });\n      dialogRef.afterClosed().subscribe(() => {\n        this.reloadData();\n        this.isDialogOpen = false;\n      });\n    }\n  }\n\n  openDetail(row: { [x: string]: number; }) {\n    this.emailTemplatesService.getTemplateById(row.id)\n      .subscribe(\n        (data: EmailTemplate) => {\n          if (!this.isDialogOpen) {\n            this.isDialogOpen = true;\n            if (this.isSendingEmail) {\n              const dialogRef = this.dialog.open(TemplateDetailDialog,\n                { width: '1200px',\n                  data: {\n                    isEdit: false,\n                    isSendingEmail: this.isSendingEmail,\n                    template: data,\n                    booking: history.state.booking\n                  }\n                });\n              dialogRef.afterClosed().subscribe(() => {\n                this.reloadData();\n                this.isDialogOpen = false;\n              });\n            } else {\n              const dialogRef = this.dialog.open(TemplateDetailDialog,\n                { width: '800px',\n                  data: {\n                    isEdit: true,\n                    template: data\n                  }\n                });\n              dialogRef.afterClosed().subscribe(() => {\n                this.reloadData();\n                this.isDialogOpen = false;\n              });\n            }\n          }\n        }\n      );\n  }\n\n  reloadData() {\n    this.emailTemplatesService.getTemplateList()\n      .subscribe(\n        (data: EmailTemplate[]) => {\n          this.templates.data = data;\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n  Email Templates List\n  Click each row for more details.\n\n  \n    \n      S/N\n      {{template.id}}\n    \n    \n      Name\n      {{template.name}}\n    \n    \n    \n  \n  \n  \n    Add New Template\n  \n\n\n\n    \n\n    \n                \n                    ./template-list.component.scss\n                \n                .container {\n    // background-image: url(\"../../assets/Blue.jpg\");\n    background-position: right bottom;\n    background-size: contain;\n    background-repeat: no-repeat;\n    height: 86%;\n  }\n  \n  .w-40{\n      max-width: 40px;\n  }\n  \n  .w-100{\n      max-width: 100px;\n  }\n  .column-left {\n    float: left;\n    width: 20%;\n  }\n  .column-right {\n    float: right;\n    width: 80%;\n  }\n  .row:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Email Templates List  Click each row for more details.            S/N      {{template.id}}              Name      {{template.name}}                      Add New Template  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingConfirmationComponent', 'selector': 'app-booking-confirmation'},{'name': 'BookingConfirmComponent', 'selector': 'app-booking-confirm'},{'name': 'BookingDetailsComponent', 'selector': 'app-booking-details'},{'name': 'BookingListComponent', 'selector': 'booking-list'},{'name': 'BookingListDialog', 'selector': 'booking-list-dialog'},{'name': 'BookingSummaryDialog', 'selector': 'booking-summary-dialog'},{'name': 'ConfirmationDialogComponent', 'selector': 'app-confirmation-dialog'},{'name': 'ConfirmationTemplateComponent', 'selector': 'app-confirmation-template'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ItemDetailsComponent', 'selector': 'app-item-details'},{'name': 'ItemListComponent', 'selector': 'item-list'},{'name': 'ItemListDialog', 'selector': 'item-list-dialog'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'LogoutComponent', 'selector': 'app-logout'},{'name': 'MailSenderComponent', 'selector': 'app-mail-sender'},{'name': 'NotFoundComponent', 'selector': 'not-found'},{'name': 'TemplateDetailDialog', 'selector': 'app-template-detail-dialog'},{'name': 'TemplateListComponent', 'selector': 'app-template-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TemplateListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/users/tokens.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        refresh\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh\n                                    \n                                \n                                \n                                    \n                                        refresh:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n  access: string;\n  refresh: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model-service/users/users.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Token\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/users/users.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model-service/users/users.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Token } from './tokens';\n\nexport class User {\n  username: string;\n  token: Token;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-auth/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/api-auth/refresh.interceptor.ts\n            \n            interceptor\n            RefreshInterceptor\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/booking-confirmation/booking-confirmation.component.ts\n            \n            component\n            BookingConfirmationComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/booking-details/booking-details.component.ts\n            \n            component\n            BookingConfirmComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/booking-details/booking-details.component.ts\n            \n            component\n            BookingDetailsComponent\n            \n                67 %\n                (19/28)\n            \n        \n        \n            \n                \n                src/app/booking-details/booking-details.component.ts\n            \n            class\n            ExceedAmountValidator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/booking-list/booking-list.component.ts\n            \n            component\n            BookingListComponent\n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                \n                src/app/booking-list/booking-list.component.ts\n            \n            component\n            BookingListDialog\n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                \n                src/app/booking-list/booking-list.component.ts\n            \n            component\n            BookingSummaryDialog\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/confirmation-dialog/confirmation-dialog.component.ts\n            \n            component\n            ConfirmationDialogComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/confirmation-template/confirmation-template.component.ts\n            \n            component\n            ConfirmationTemplateComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/item-details/item-details.component.ts\n            \n            component\n            ItemDetailsComponent\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/app/item-list/item-list.component.ts\n            \n            component\n            ItemListComponent\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/item-list/item-list.component.ts\n            \n            component\n            ItemListDialog\n            \n                35 %\n                (6/17)\n            \n        \n        \n            \n                \n                src/app/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/logout/logout.component.ts\n            \n            component\n            LogoutComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/mail-sender/mail-sender.component.ts\n            \n            component\n            MailSenderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model-service/bookings/bookings.service.ts\n            \n            injectable\n            BookingsService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/model-service/bookings/bookings.ts\n            \n            class\n            Booking\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/model-service/componentbridging.service.ts\n            \n            injectable\n            ComponentBridgingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model-service/confirmationtemplates/confirmationtemplates.service.ts\n            \n            injectable\n            ConfirmationTemplatesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/model-service/confirmationtemplates/confirmationtemplates.ts\n            \n            class\n            ConfirmationTemplate\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model-service/emailtemplates/email.ts\n            \n            class\n            Email\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model-service/emailtemplates/emailtemplates.service.ts\n            \n            injectable\n            EmailTemplatesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/model-service/emailtemplates/emailtemplates.ts\n            \n            class\n            EmailTemplate\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model-service/emailtemplates/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model-service/issue/issue.service.ts\n            \n            injectable\n            IssueService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/model-service/issue/issue.ts\n            \n            class\n            Issue\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model-service/items/items.service.ts\n            \n            injectable\n            ItemsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/model-service/items/items.ts\n            \n            class\n            BookedItem\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/model-service/items/items.ts\n            \n            class\n            Items\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/model-service/statustranslator.ts\n            \n            function\n            addHyphen\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model-service/statustranslator.ts\n            \n            function\n            getStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model-service/users/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model-service/users/login-details.ts\n            \n            interface\n            LoginDetail\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model-service/users/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/model-service/users/tokens.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model-service/users/users.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/settings.ts\n            \n            variable\n            apiKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/template-list/template-detail.dialog.ts\n            \n            component\n            TemplateDetailDialog\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/template-list/template-list.component.ts\n            \n            component\n            TemplateListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/material : ^9.2.4\n        \n            @angular/material-moment-adapter : ^9.2.4\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            @fullcalendar/angular : ^5.1.0\n        \n            @fullcalendar/core : ^5.1.0\n        \n            @fullcalendar/daygrid : ^5.1.0\n        \n            @tinymce/tinymce-angular : ^3.6.0\n        \n            moment : ^2.26.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addHyphen   (src/.../statustranslator.ts)\n                        \n                        \n                            getStatus   (src/.../statustranslator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model-service/statustranslator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addHyphen\n                        \n                        \n                    \n                \n            \n            \n                \naddHyphen(code, order)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus(code)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngularView\nThis project was generated with Angular CLI version 9.1.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookingConfirmComponent\n\nBookingConfirmComponent\n\nAppModule -->\n\nBookingConfirmComponent->AppModule\n\n\n\n\n\nBookingConfirmationComponent\n\nBookingConfirmationComponent\n\nAppModule -->\n\nBookingConfirmationComponent->AppModule\n\n\n\n\n\nBookingDetailsComponent\n\nBookingDetailsComponent\n\nAppModule -->\n\nBookingDetailsComponent->AppModule\n\n\n\n\n\nBookingListComponent\n\nBookingListComponent\n\nAppModule -->\n\nBookingListComponent->AppModule\n\n\n\n\n\nBookingListDialog\n\nBookingListDialog\n\nAppModule -->\n\nBookingListDialog->AppModule\n\n\n\n\n\nBookingSummaryDialog\n\nBookingSummaryDialog\n\nAppModule -->\n\nBookingSummaryDialog->AppModule\n\n\n\n\n\nConfirmationDialogComponent\n\nConfirmationDialogComponent\n\nAppModule -->\n\nConfirmationDialogComponent->AppModule\n\n\n\n\n\nConfirmationTemplateComponent\n\nConfirmationTemplateComponent\n\nAppModule -->\n\nConfirmationTemplateComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nItemDetailsComponent\n\nItemDetailsComponent\n\nAppModule -->\n\nItemDetailsComponent->AppModule\n\n\n\n\n\nItemListComponent\n\nItemListComponent\n\nAppModule -->\n\nItemListComponent->AppModule\n\n\n\n\n\nItemListDialog\n\nItemListDialog\n\nAppModule -->\n\nItemListDialog->AppModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAppModule -->\n\nLoginFormComponent->AppModule\n\n\n\n\n\nLogoutComponent\n\nLogoutComponent\n\nAppModule -->\n\nLogoutComponent->AppModule\n\n\n\n\n\nMailSenderComponent\n\nMailSenderComponent\n\nAppModule -->\n\nMailSenderComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nTemplateDetailDialog\n\nTemplateDetailDialog\n\nAppModule -->\n\nTemplateDetailDialog->AppModule\n\n\n\n\n\nTemplateListComponent\n\nTemplateListComponent\n\nAppModule -->\n\nTemplateListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nComponentBridgingService\n\nComponentBridgingService\n\nAppModule -->\n\nComponentBridgingService->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nRefreshInterceptor\n\nRefreshInterceptor\n\nAppModule -->\n\nRefreshInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiKey   (src/.../settings.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'bchme1shvzqaiv20vldopiru78j82mtwz8bkj3464muxs0s5'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
